// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protoPack.proto

#ifndef PROTOBUF_protoPack_2eproto__INCLUDED
#define PROTOBUF_protoPack_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_protoPack_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[47];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsmsgLobbyImpl();
void InitDefaultsmsgLobby();
void InitDefaultsmsgRoomImpl();
void InitDefaultsmsgRoom();
void InitDefaultsmsgGameImpl();
void InitDefaultsmsgGame();
void InitDefaultsmsgUserInfoImpl();
void InitDefaultsmsgUserInfo();
void InitDefaultsmsgUserInGameInfoImpl();
void InitDefaultsmsgUserInGameInfo();
void InitDefaultsmsgUserInGameStateInfoImpl();
void InitDefaultsmsgUserInGameStateInfo();
void InitDefaultsaccountCreateImpl();
void InitDefaultsaccountCreate();
void InitDefaultsaccountLoginImpl();
void InitDefaultsaccountLogin();
void InitDefaultsaccountLogoutImpl();
void InitDefaultsaccountLogout();
void InitDefaultsanyPlayerInfoSelfRequestImpl();
void InitDefaultsanyPlayerInfoSelfRequest();
void InitDefaultsanyPlayerInfoOtherRequestWithIDImpl();
void InitDefaultsanyPlayerInfoOtherRequestWithID();
void InitDefaultsanyPlayerInfoOtherRequestWithNickNameImpl();
void InitDefaultsanyPlayerInfoOtherRequestWithNickName();
void InitDefaultsanyPlayerInfoResponseImpl();
void InitDefaultsanyPlayerInfoResponse();
void InitDefaultsanyWhisperRequestWithUIDImpl();
void InitDefaultsanyWhisperRequestWithUID();
void InitDefaultsanyWhisperRequestWithIDImpl();
void InitDefaultsanyWhisperRequestWithID();
void InitDefaultsanyWhisperRequestWithNickNameImpl();
void InitDefaultsanyWhisperRequestWithNickName();
void InitDefaultsanyWhisperResponseImpl();
void InitDefaultsanyWhisperResponse();
void InitDefaultsoutLobbyLobbylistRequestImpl();
void InitDefaultsoutLobbyLobbylistRequest();
void InitDefaultsoutLobbyLobbylistResponseImpl();
void InitDefaultsoutLobbyLobbylistResponse();
void InitDefaultsoutLobbyEnterLobbyRequestImpl();
void InitDefaultsoutLobbyEnterLobbyRequest();
void InitDefaultsoutLobbyEnterLobbyResponseImpl();
void InitDefaultsoutLobbyEnterLobbyResponse();
void InitDefaultsinLobbyPlayerlistRequestImpl();
void InitDefaultsinLobbyPlayerlistRequest();
void InitDefaultsinLobbyPlayerlistResponseImpl();
void InitDefaultsinLobbyPlayerlistResponse();
void InitDefaultsinLobbyEnterRoomRequestImpl();
void InitDefaultsinLobbyEnterRoomRequest();
void InitDefaultsinLobbyEnterRoomResponseImpl();
void InitDefaultsinLobbyEnterRoomResponse();
void InitDefaultsinLobbyLeaveLobbyRequestImpl();
void InitDefaultsinLobbyLeaveLobbyRequest();
void InitDefaultsinLobbyLeaveLobbyResponseImpl();
void InitDefaultsinLobbyLeaveLobbyResponse();
void InitDefaultsinLobbyChatRequestImpl();
void InitDefaultsinLobbyChatRequest();
void InitDefaultsinLobbyChatResponseImpl();
void InitDefaultsinLobbyChatResponse();
void InitDefaultsinLobbyChatBroadcastImpl();
void InitDefaultsinLobbyChatBroadcast();
void InitDefaultsinRoomChatRequestImpl();
void InitDefaultsinRoomChatRequest();
void InitDefaultsinRoomChatResponseImpl();
void InitDefaultsinRoomChatResponse();
void InitDefaultsinRoomChatBroadcastImpl();
void InitDefaultsinRoomChatBroadcast();
void InitDefaultsinRoomLeaveRoomRequestImpl();
void InitDefaultsinRoomLeaveRoomRequest();
void InitDefaultsinRoomLeaveRoomResponseImpl();
void InitDefaultsinRoomLeaveRoomResponse();
void InitDefaultsinRoomReadyRequestImpl();
void InitDefaultsinRoomReadyRequest();
void InitDefaultsinRoomReadyResponseImpl();
void InitDefaultsinRoomReadyResponse();
void InitDefaultsinRoomStartRequestImpl();
void InitDefaultsinRoomStartRequest();
void InitDefaultsinRoomStartResponseImpl();
void InitDefaultsinRoomStartResponse();
void InitDefaultsinRoomStartBroadcastImpl();
void InitDefaultsinRoomStartBroadcast();
void InitDefaultsinGameSyncPlayerPosToServerImpl();
void InitDefaultsinGameSyncPlayerPosToServer();
void InitDefaultsinGameSyncPlayersPosFromServerImpl();
void InitDefaultsinGameSyncPlayersPosFromServer();
void InitDefaultsinGameSyncPlayerStateToServerImpl();
void InitDefaultsinGameSyncPlayerStateToServer();
void InitDefaultsinGameSyncPlayersStateFromServerImpl();
void InitDefaultsinGameSyncPlayersStateFromServer();
void InitDefaultsinGameChatRequestImpl();
void InitDefaultsinGameChatRequest();
void InitDefaultsinGameChatResponseImpl();
void InitDefaultsinGameChatResponse();
void InitDefaultsinGameChatBroadcastImpl();
void InitDefaultsinGameChatBroadcast();
inline void InitDefaults() {
  InitDefaultsmsgLobby();
  InitDefaultsmsgRoom();
  InitDefaultsmsgGame();
  InitDefaultsmsgUserInfo();
  InitDefaultsmsgUserInGameInfo();
  InitDefaultsmsgUserInGameStateInfo();
  InitDefaultsaccountCreate();
  InitDefaultsaccountLogin();
  InitDefaultsaccountLogout();
  InitDefaultsanyPlayerInfoSelfRequest();
  InitDefaultsanyPlayerInfoOtherRequestWithID();
  InitDefaultsanyPlayerInfoOtherRequestWithNickName();
  InitDefaultsanyPlayerInfoResponse();
  InitDefaultsanyWhisperRequestWithUID();
  InitDefaultsanyWhisperRequestWithID();
  InitDefaultsanyWhisperRequestWithNickName();
  InitDefaultsanyWhisperResponse();
  InitDefaultsoutLobbyLobbylistRequest();
  InitDefaultsoutLobbyLobbylistResponse();
  InitDefaultsoutLobbyEnterLobbyRequest();
  InitDefaultsoutLobbyEnterLobbyResponse();
  InitDefaultsinLobbyPlayerlistRequest();
  InitDefaultsinLobbyPlayerlistResponse();
  InitDefaultsinLobbyEnterRoomRequest();
  InitDefaultsinLobbyEnterRoomResponse();
  InitDefaultsinLobbyLeaveLobbyRequest();
  InitDefaultsinLobbyLeaveLobbyResponse();
  InitDefaultsinLobbyChatRequest();
  InitDefaultsinLobbyChatResponse();
  InitDefaultsinLobbyChatBroadcast();
  InitDefaultsinRoomChatRequest();
  InitDefaultsinRoomChatResponse();
  InitDefaultsinRoomChatBroadcast();
  InitDefaultsinRoomLeaveRoomRequest();
  InitDefaultsinRoomLeaveRoomResponse();
  InitDefaultsinRoomReadyRequest();
  InitDefaultsinRoomReadyResponse();
  InitDefaultsinRoomStartRequest();
  InitDefaultsinRoomStartResponse();
  InitDefaultsinRoomStartBroadcast();
  InitDefaultsinGameSyncPlayerPosToServer();
  InitDefaultsinGameSyncPlayersPosFromServer();
  InitDefaultsinGameSyncPlayerStateToServer();
  InitDefaultsinGameSyncPlayersStateFromServer();
  InitDefaultsinGameChatRequest();
  InitDefaultsinGameChatResponse();
  InitDefaultsinGameChatBroadcast();
}
}  // namespace protobuf_protoPack_2eproto
namespace proto {
class accountCreate;
class accountCreateDefaultTypeInternal;
extern accountCreateDefaultTypeInternal _accountCreate_default_instance_;
class accountLogin;
class accountLoginDefaultTypeInternal;
extern accountLoginDefaultTypeInternal _accountLogin_default_instance_;
class accountLogout;
class accountLogoutDefaultTypeInternal;
extern accountLogoutDefaultTypeInternal _accountLogout_default_instance_;
class anyPlayerInfoOtherRequestWithID;
class anyPlayerInfoOtherRequestWithIDDefaultTypeInternal;
extern anyPlayerInfoOtherRequestWithIDDefaultTypeInternal _anyPlayerInfoOtherRequestWithID_default_instance_;
class anyPlayerInfoOtherRequestWithNickName;
class anyPlayerInfoOtherRequestWithNickNameDefaultTypeInternal;
extern anyPlayerInfoOtherRequestWithNickNameDefaultTypeInternal _anyPlayerInfoOtherRequestWithNickName_default_instance_;
class anyPlayerInfoResponse;
class anyPlayerInfoResponseDefaultTypeInternal;
extern anyPlayerInfoResponseDefaultTypeInternal _anyPlayerInfoResponse_default_instance_;
class anyPlayerInfoSelfRequest;
class anyPlayerInfoSelfRequestDefaultTypeInternal;
extern anyPlayerInfoSelfRequestDefaultTypeInternal _anyPlayerInfoSelfRequest_default_instance_;
class anyWhisperRequestWithID;
class anyWhisperRequestWithIDDefaultTypeInternal;
extern anyWhisperRequestWithIDDefaultTypeInternal _anyWhisperRequestWithID_default_instance_;
class anyWhisperRequestWithNickName;
class anyWhisperRequestWithNickNameDefaultTypeInternal;
extern anyWhisperRequestWithNickNameDefaultTypeInternal _anyWhisperRequestWithNickName_default_instance_;
class anyWhisperRequestWithUID;
class anyWhisperRequestWithUIDDefaultTypeInternal;
extern anyWhisperRequestWithUIDDefaultTypeInternal _anyWhisperRequestWithUID_default_instance_;
class anyWhisperResponse;
class anyWhisperResponseDefaultTypeInternal;
extern anyWhisperResponseDefaultTypeInternal _anyWhisperResponse_default_instance_;
class inGameChatBroadcast;
class inGameChatBroadcastDefaultTypeInternal;
extern inGameChatBroadcastDefaultTypeInternal _inGameChatBroadcast_default_instance_;
class inGameChatRequest;
class inGameChatRequestDefaultTypeInternal;
extern inGameChatRequestDefaultTypeInternal _inGameChatRequest_default_instance_;
class inGameChatResponse;
class inGameChatResponseDefaultTypeInternal;
extern inGameChatResponseDefaultTypeInternal _inGameChatResponse_default_instance_;
class inGameSyncPlayerPosToServer;
class inGameSyncPlayerPosToServerDefaultTypeInternal;
extern inGameSyncPlayerPosToServerDefaultTypeInternal _inGameSyncPlayerPosToServer_default_instance_;
class inGameSyncPlayerStateToServer;
class inGameSyncPlayerStateToServerDefaultTypeInternal;
extern inGameSyncPlayerStateToServerDefaultTypeInternal _inGameSyncPlayerStateToServer_default_instance_;
class inGameSyncPlayersPosFromServer;
class inGameSyncPlayersPosFromServerDefaultTypeInternal;
extern inGameSyncPlayersPosFromServerDefaultTypeInternal _inGameSyncPlayersPosFromServer_default_instance_;
class inGameSyncPlayersStateFromServer;
class inGameSyncPlayersStateFromServerDefaultTypeInternal;
extern inGameSyncPlayersStateFromServerDefaultTypeInternal _inGameSyncPlayersStateFromServer_default_instance_;
class inLobbyChatBroadcast;
class inLobbyChatBroadcastDefaultTypeInternal;
extern inLobbyChatBroadcastDefaultTypeInternal _inLobbyChatBroadcast_default_instance_;
class inLobbyChatRequest;
class inLobbyChatRequestDefaultTypeInternal;
extern inLobbyChatRequestDefaultTypeInternal _inLobbyChatRequest_default_instance_;
class inLobbyChatResponse;
class inLobbyChatResponseDefaultTypeInternal;
extern inLobbyChatResponseDefaultTypeInternal _inLobbyChatResponse_default_instance_;
class inLobbyEnterRoomRequest;
class inLobbyEnterRoomRequestDefaultTypeInternal;
extern inLobbyEnterRoomRequestDefaultTypeInternal _inLobbyEnterRoomRequest_default_instance_;
class inLobbyEnterRoomResponse;
class inLobbyEnterRoomResponseDefaultTypeInternal;
extern inLobbyEnterRoomResponseDefaultTypeInternal _inLobbyEnterRoomResponse_default_instance_;
class inLobbyLeaveLobbyRequest;
class inLobbyLeaveLobbyRequestDefaultTypeInternal;
extern inLobbyLeaveLobbyRequestDefaultTypeInternal _inLobbyLeaveLobbyRequest_default_instance_;
class inLobbyLeaveLobbyResponse;
class inLobbyLeaveLobbyResponseDefaultTypeInternal;
extern inLobbyLeaveLobbyResponseDefaultTypeInternal _inLobbyLeaveLobbyResponse_default_instance_;
class inLobbyPlayerlistRequest;
class inLobbyPlayerlistRequestDefaultTypeInternal;
extern inLobbyPlayerlistRequestDefaultTypeInternal _inLobbyPlayerlistRequest_default_instance_;
class inLobbyPlayerlistResponse;
class inLobbyPlayerlistResponseDefaultTypeInternal;
extern inLobbyPlayerlistResponseDefaultTypeInternal _inLobbyPlayerlistResponse_default_instance_;
class inRoomChatBroadcast;
class inRoomChatBroadcastDefaultTypeInternal;
extern inRoomChatBroadcastDefaultTypeInternal _inRoomChatBroadcast_default_instance_;
class inRoomChatRequest;
class inRoomChatRequestDefaultTypeInternal;
extern inRoomChatRequestDefaultTypeInternal _inRoomChatRequest_default_instance_;
class inRoomChatResponse;
class inRoomChatResponseDefaultTypeInternal;
extern inRoomChatResponseDefaultTypeInternal _inRoomChatResponse_default_instance_;
class inRoomLeaveRoomRequest;
class inRoomLeaveRoomRequestDefaultTypeInternal;
extern inRoomLeaveRoomRequestDefaultTypeInternal _inRoomLeaveRoomRequest_default_instance_;
class inRoomLeaveRoomResponse;
class inRoomLeaveRoomResponseDefaultTypeInternal;
extern inRoomLeaveRoomResponseDefaultTypeInternal _inRoomLeaveRoomResponse_default_instance_;
class inRoomReadyRequest;
class inRoomReadyRequestDefaultTypeInternal;
extern inRoomReadyRequestDefaultTypeInternal _inRoomReadyRequest_default_instance_;
class inRoomReadyResponse;
class inRoomReadyResponseDefaultTypeInternal;
extern inRoomReadyResponseDefaultTypeInternal _inRoomReadyResponse_default_instance_;
class inRoomStartBroadcast;
class inRoomStartBroadcastDefaultTypeInternal;
extern inRoomStartBroadcastDefaultTypeInternal _inRoomStartBroadcast_default_instance_;
class inRoomStartRequest;
class inRoomStartRequestDefaultTypeInternal;
extern inRoomStartRequestDefaultTypeInternal _inRoomStartRequest_default_instance_;
class inRoomStartResponse;
class inRoomStartResponseDefaultTypeInternal;
extern inRoomStartResponseDefaultTypeInternal _inRoomStartResponse_default_instance_;
class msgGame;
class msgGameDefaultTypeInternal;
extern msgGameDefaultTypeInternal _msgGame_default_instance_;
class msgLobby;
class msgLobbyDefaultTypeInternal;
extern msgLobbyDefaultTypeInternal _msgLobby_default_instance_;
class msgRoom;
class msgRoomDefaultTypeInternal;
extern msgRoomDefaultTypeInternal _msgRoom_default_instance_;
class msgUserInGameInfo;
class msgUserInGameInfoDefaultTypeInternal;
extern msgUserInGameInfoDefaultTypeInternal _msgUserInGameInfo_default_instance_;
class msgUserInGameStateInfo;
class msgUserInGameStateInfoDefaultTypeInternal;
extern msgUserInGameStateInfoDefaultTypeInternal _msgUserInGameStateInfo_default_instance_;
class msgUserInfo;
class msgUserInfoDefaultTypeInternal;
extern msgUserInfoDefaultTypeInternal _msgUserInfo_default_instance_;
class outLobbyEnterLobbyRequest;
class outLobbyEnterLobbyRequestDefaultTypeInternal;
extern outLobbyEnterLobbyRequestDefaultTypeInternal _outLobbyEnterLobbyRequest_default_instance_;
class outLobbyEnterLobbyResponse;
class outLobbyEnterLobbyResponseDefaultTypeInternal;
extern outLobbyEnterLobbyResponseDefaultTypeInternal _outLobbyEnterLobbyResponse_default_instance_;
class outLobbyLobbylistRequest;
class outLobbyLobbylistRequestDefaultTypeInternal;
extern outLobbyLobbylistRequestDefaultTypeInternal _outLobbyLobbylistRequest_default_instance_;
class outLobbyLobbylistResponse;
class outLobbyLobbylistResponseDefaultTypeInternal;
extern outLobbyLobbylistResponseDefaultTypeInternal _outLobbyLobbylistResponse_default_instance_;
}  // namespace proto
namespace proto {

// ===================================================================

class msgLobby : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.msgLobby) */ {
 public:
  msgLobby();
  virtual ~msgLobby();

  msgLobby(const msgLobby& from);

  inline msgLobby& operator=(const msgLobby& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msgLobby(msgLobby&& from) noexcept
    : msgLobby() {
    *this = ::std::move(from);
  }

  inline msgLobby& operator=(msgLobby&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msgLobby& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgLobby* internal_default_instance() {
    return reinterpret_cast<const msgLobby*>(
               &_msgLobby_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(msgLobby* other);
  friend void swap(msgLobby& a, msgLobby& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msgLobby* New() const PROTOBUF_FINAL { return New(NULL); }

  msgLobby* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const msgLobby& from);
  void MergeFrom(const msgLobby& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(msgLobby* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required int32 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // required int32 userNum = 3;
  bool has_usernum() const;
  void clear_usernum();
  static const int kUserNumFieldNumber = 3;
  ::google::protobuf::int32 usernum() const;
  void set_usernum(::google::protobuf::int32 value);

  // required int32 useraMaxNum = 4;
  bool has_useramaxnum() const;
  void clear_useramaxnum();
  static const int kUseraMaxNumFieldNumber = 4;
  ::google::protobuf::int32 useramaxnum() const;
  void set_useramaxnum(::google::protobuf::int32 value);

  // required bool closed = 5;
  bool has_closed() const;
  void clear_closed();
  static const int kClosedFieldNumber = 5;
  bool closed() const;
  void set_closed(bool value);

  // @@protoc_insertion_point(class_scope:proto.msgLobby)
 private:
  void set_has_uid();
  void clear_has_uid();
  void set_has_name();
  void clear_has_name();
  void set_has_usernum();
  void clear_has_usernum();
  void set_has_useramaxnum();
  void clear_has_useramaxnum();
  void set_has_closed();
  void clear_has_closed();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 uid_;
  ::google::protobuf::int32 usernum_;
  ::google::protobuf::int32 useramaxnum_;
  bool closed_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsmsgLobbyImpl();
};
// -------------------------------------------------------------------

class msgRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.msgRoom) */ {
 public:
  msgRoom();
  virtual ~msgRoom();

  msgRoom(const msgRoom& from);

  inline msgRoom& operator=(const msgRoom& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msgRoom(msgRoom&& from) noexcept
    : msgRoom() {
    *this = ::std::move(from);
  }

  inline msgRoom& operator=(msgRoom&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msgRoom& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgRoom* internal_default_instance() {
    return reinterpret_cast<const msgRoom*>(
               &_msgRoom_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(msgRoom* other);
  friend void swap(msgRoom& a, msgRoom& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msgRoom* New() const PROTOBUF_FINAL { return New(NULL); }

  msgRoom* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const msgRoom& from);
  void MergeFrom(const msgRoom& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(msgRoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required int32 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // required int32 userNum = 3;
  bool has_usernum() const;
  void clear_usernum();
  static const int kUserNumFieldNumber = 3;
  ::google::protobuf::int32 usernum() const;
  void set_usernum(::google::protobuf::int32 value);

  // required int32 useraMaxNum = 4;
  bool has_useramaxnum() const;
  void clear_useramaxnum();
  static const int kUseraMaxNumFieldNumber = 4;
  ::google::protobuf::int32 useramaxnum() const;
  void set_useramaxnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.msgRoom)
 private:
  void set_has_uid();
  void clear_has_uid();
  void set_has_name();
  void clear_has_name();
  void set_has_usernum();
  void clear_has_usernum();
  void set_has_useramaxnum();
  void clear_has_useramaxnum();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 uid_;
  ::google::protobuf::int32 usernum_;
  ::google::protobuf::int32 useramaxnum_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsmsgRoomImpl();
};
// -------------------------------------------------------------------

class msgGame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.msgGame) */ {
 public:
  msgGame();
  virtual ~msgGame();

  msgGame(const msgGame& from);

  inline msgGame& operator=(const msgGame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msgGame(msgGame&& from) noexcept
    : msgGame() {
    *this = ::std::move(from);
  }

  inline msgGame& operator=(msgGame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msgGame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgGame* internal_default_instance() {
    return reinterpret_cast<const msgGame*>(
               &_msgGame_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(msgGame* other);
  friend void swap(msgGame& a, msgGame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msgGame* New() const PROTOBUF_FINAL { return New(NULL); }

  msgGame* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const msgGame& from);
  void MergeFrom(const msgGame& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(msgGame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.msgUserInfo userList = 3;
  int userlist_size() const;
  void clear_userlist();
  static const int kUserListFieldNumber = 3;
  const ::proto::msgUserInfo& userlist(int index) const;
  ::proto::msgUserInfo* mutable_userlist(int index);
  ::proto::msgUserInfo* add_userlist();
  ::google::protobuf::RepeatedPtrField< ::proto::msgUserInfo >*
      mutable_userlist();
  const ::google::protobuf::RepeatedPtrField< ::proto::msgUserInfo >&
      userlist() const;

  // required string number = 2;
  bool has_number() const;
  void clear_number();
  static const int kNumberFieldNumber = 2;
  const ::std::string& number() const;
  void set_number(const ::std::string& value);
  #if LANG_CXX11
  void set_number(::std::string&& value);
  #endif
  void set_number(const char* value);
  void set_number(const char* value, size_t size);
  ::std::string* mutable_number();
  ::std::string* release_number();
  void set_allocated_number(::std::string* number);

  // required int32 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.msgGame)
 private:
  void set_has_uid();
  void clear_has_uid();
  void set_has_number();
  void clear_has_number();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::msgUserInfo > userlist_;
  ::google::protobuf::internal::ArenaStringPtr number_;
  ::google::protobuf::int32 uid_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsmsgGameImpl();
};
// -------------------------------------------------------------------

class msgUserInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.msgUserInfo) */ {
 public:
  msgUserInfo();
  virtual ~msgUserInfo();

  msgUserInfo(const msgUserInfo& from);

  inline msgUserInfo& operator=(const msgUserInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msgUserInfo(msgUserInfo&& from) noexcept
    : msgUserInfo() {
    *this = ::std::move(from);
  }

  inline msgUserInfo& operator=(msgUserInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msgUserInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgUserInfo* internal_default_instance() {
    return reinterpret_cast<const msgUserInfo*>(
               &_msgUserInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(msgUserInfo* other);
  friend void swap(msgUserInfo& a, msgUserInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msgUserInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  msgUserInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const msgUserInfo& from);
  void MergeFrom(const msgUserInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(msgUserInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string Nickname = 3;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // required int32 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // required int32 id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.msgUserInfo)
 private:
  void set_has_uid();
  void clear_has_uid();
  void set_has_id();
  void clear_has_id();
  void set_has_nickname();
  void clear_has_nickname();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::int32 uid_;
  ::google::protobuf::int32 id_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsmsgUserInfoImpl();
};
// -------------------------------------------------------------------

class msgUserInGameInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.msgUserInGameInfo) */ {
 public:
  msgUserInGameInfo();
  virtual ~msgUserInGameInfo();

  msgUserInGameInfo(const msgUserInGameInfo& from);

  inline msgUserInGameInfo& operator=(const msgUserInGameInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msgUserInGameInfo(msgUserInGameInfo&& from) noexcept
    : msgUserInGameInfo() {
    *this = ::std::move(from);
  }

  inline msgUserInGameInfo& operator=(msgUserInGameInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msgUserInGameInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgUserInGameInfo* internal_default_instance() {
    return reinterpret_cast<const msgUserInGameInfo*>(
               &_msgUserInGameInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(msgUserInGameInfo* other);
  friend void swap(msgUserInGameInfo& a, msgUserInGameInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msgUserInGameInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  msgUserInGameInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const msgUserInGameInfo& from);
  void MergeFrom(const msgUserInGameInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(msgUserInGameInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 userUid = 1;
  bool has_useruid() const;
  void clear_useruid();
  static const int kUserUidFieldNumber = 1;
  ::google::protobuf::int32 useruid() const;
  void set_useruid(::google::protobuf::int32 value);

  // required float x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  float x() const;
  void set_x(float value);

  // required float y = 3;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 3;
  float y() const;
  void set_y(float value);

  // required float z = 4;
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 4;
  float z() const;
  void set_z(float value);

  // required float qx = 5;
  bool has_qx() const;
  void clear_qx();
  static const int kQxFieldNumber = 5;
  float qx() const;
  void set_qx(float value);

  // required float qy = 6;
  bool has_qy() const;
  void clear_qy();
  static const int kQyFieldNumber = 6;
  float qy() const;
  void set_qy(float value);

  // required float qz = 7;
  bool has_qz() const;
  void clear_qz();
  static const int kQzFieldNumber = 7;
  float qz() const;
  void set_qz(float value);

  // required float qw = 8;
  bool has_qw() const;
  void clear_qw();
  static const int kQwFieldNumber = 8;
  float qw() const;
  void set_qw(float value);

  // @@protoc_insertion_point(class_scope:proto.msgUserInGameInfo)
 private:
  void set_has_useruid();
  void clear_has_useruid();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_z();
  void clear_has_z();
  void set_has_qx();
  void clear_has_qx();
  void set_has_qy();
  void clear_has_qy();
  void set_has_qz();
  void clear_has_qz();
  void set_has_qw();
  void clear_has_qw();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 useruid_;
  float x_;
  float y_;
  float z_;
  float qx_;
  float qy_;
  float qz_;
  float qw_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsmsgUserInGameInfoImpl();
};
// -------------------------------------------------------------------

class msgUserInGameStateInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.msgUserInGameStateInfo) */ {
 public:
  msgUserInGameStateInfo();
  virtual ~msgUserInGameStateInfo();

  msgUserInGameStateInfo(const msgUserInGameStateInfo& from);

  inline msgUserInGameStateInfo& operator=(const msgUserInGameStateInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msgUserInGameStateInfo(msgUserInGameStateInfo&& from) noexcept
    : msgUserInGameStateInfo() {
    *this = ::std::move(from);
  }

  inline msgUserInGameStateInfo& operator=(msgUserInGameStateInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msgUserInGameStateInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgUserInGameStateInfo* internal_default_instance() {
    return reinterpret_cast<const msgUserInGameStateInfo*>(
               &_msgUserInGameStateInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(msgUserInGameStateInfo* other);
  friend void swap(msgUserInGameStateInfo& a, msgUserInGameStateInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msgUserInGameStateInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  msgUserInGameStateInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const msgUserInGameStateInfo& from);
  void MergeFrom(const msgUserInGameStateInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(msgUserInGameStateInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 userUid = 1;
  bool has_useruid() const;
  void clear_useruid();
  static const int kUserUidFieldNumber = 1;
  ::google::protobuf::int32 useruid() const;
  void set_useruid(::google::protobuf::int32 value);

  // required int32 stateBit32 = 2;
  bool has_statebit32() const;
  void clear_statebit32();
  static const int kStateBit32FieldNumber = 2;
  ::google::protobuf::int32 statebit32() const;
  void set_statebit32(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.msgUserInGameStateInfo)
 private:
  void set_has_useruid();
  void clear_has_useruid();
  void set_has_statebit32();
  void clear_has_statebit32();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 useruid_;
  ::google::protobuf::int32 statebit32_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsmsgUserInGameStateInfoImpl();
};
// -------------------------------------------------------------------

class accountCreate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.accountCreate) */ {
 public:
  accountCreate();
  virtual ~accountCreate();

  accountCreate(const accountCreate& from);

  inline accountCreate& operator=(const accountCreate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  accountCreate(accountCreate&& from) noexcept
    : accountCreate() {
    *this = ::std::move(from);
  }

  inline accountCreate& operator=(accountCreate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const accountCreate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const accountCreate* internal_default_instance() {
    return reinterpret_cast<const accountCreate*>(
               &_accountCreate_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(accountCreate* other);
  friend void swap(accountCreate& a, accountCreate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline accountCreate* New() const PROTOBUF_FINAL { return New(NULL); }

  accountCreate* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const accountCreate& from);
  void MergeFrom(const accountCreate& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(accountCreate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // required string password = 2;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // required string nickname = 3;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // @@protoc_insertion_point(class_scope:proto.accountCreate)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_password();
  void clear_has_password();
  void set_has_nickname();
  void clear_has_nickname();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsaccountCreateImpl();
};
// -------------------------------------------------------------------

class accountLogin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.accountLogin) */ {
 public:
  accountLogin();
  virtual ~accountLogin();

  accountLogin(const accountLogin& from);

  inline accountLogin& operator=(const accountLogin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  accountLogin(accountLogin&& from) noexcept
    : accountLogin() {
    *this = ::std::move(from);
  }

  inline accountLogin& operator=(accountLogin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const accountLogin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const accountLogin* internal_default_instance() {
    return reinterpret_cast<const accountLogin*>(
               &_accountLogin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(accountLogin* other);
  friend void swap(accountLogin& a, accountLogin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline accountLogin* New() const PROTOBUF_FINAL { return New(NULL); }

  accountLogin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const accountLogin& from);
  void MergeFrom(const accountLogin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(accountLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // required string password = 2;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:proto.accountLogin)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_password();
  void clear_has_password();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsaccountLoginImpl();
};
// -------------------------------------------------------------------

class accountLogout : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.accountLogout) */ {
 public:
  accountLogout();
  virtual ~accountLogout();

  accountLogout(const accountLogout& from);

  inline accountLogout& operator=(const accountLogout& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  accountLogout(accountLogout&& from) noexcept
    : accountLogout() {
    *this = ::std::move(from);
  }

  inline accountLogout& operator=(accountLogout&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const accountLogout& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const accountLogout* internal_default_instance() {
    return reinterpret_cast<const accountLogout*>(
               &_accountLogout_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(accountLogout* other);
  friend void swap(accountLogout& a, accountLogout& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline accountLogout* New() const PROTOBUF_FINAL { return New(NULL); }

  accountLogout* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const accountLogout& from);
  void MergeFrom(const accountLogout& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(accountLogout* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 empty = 1;
  bool has_empty() const;
  void clear_empty();
  static const int kEmptyFieldNumber = 1;
  ::google::protobuf::int32 empty() const;
  void set_empty(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.accountLogout)
 private:
  void set_has_empty();
  void clear_has_empty();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 empty_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsaccountLogoutImpl();
};
// -------------------------------------------------------------------

class anyPlayerInfoSelfRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.anyPlayerInfoSelfRequest) */ {
 public:
  anyPlayerInfoSelfRequest();
  virtual ~anyPlayerInfoSelfRequest();

  anyPlayerInfoSelfRequest(const anyPlayerInfoSelfRequest& from);

  inline anyPlayerInfoSelfRequest& operator=(const anyPlayerInfoSelfRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  anyPlayerInfoSelfRequest(anyPlayerInfoSelfRequest&& from) noexcept
    : anyPlayerInfoSelfRequest() {
    *this = ::std::move(from);
  }

  inline anyPlayerInfoSelfRequest& operator=(anyPlayerInfoSelfRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const anyPlayerInfoSelfRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const anyPlayerInfoSelfRequest* internal_default_instance() {
    return reinterpret_cast<const anyPlayerInfoSelfRequest*>(
               &_anyPlayerInfoSelfRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(anyPlayerInfoSelfRequest* other);
  friend void swap(anyPlayerInfoSelfRequest& a, anyPlayerInfoSelfRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline anyPlayerInfoSelfRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  anyPlayerInfoSelfRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const anyPlayerInfoSelfRequest& from);
  void MergeFrom(const anyPlayerInfoSelfRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(anyPlayerInfoSelfRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 empty = 1;
  bool has_empty() const;
  void clear_empty();
  static const int kEmptyFieldNumber = 1;
  ::google::protobuf::int32 empty() const;
  void set_empty(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.anyPlayerInfoSelfRequest)
 private:
  void set_has_empty();
  void clear_has_empty();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 empty_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsanyPlayerInfoSelfRequestImpl();
};
// -------------------------------------------------------------------

class anyPlayerInfoOtherRequestWithID : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.anyPlayerInfoOtherRequestWithID) */ {
 public:
  anyPlayerInfoOtherRequestWithID();
  virtual ~anyPlayerInfoOtherRequestWithID();

  anyPlayerInfoOtherRequestWithID(const anyPlayerInfoOtherRequestWithID& from);

  inline anyPlayerInfoOtherRequestWithID& operator=(const anyPlayerInfoOtherRequestWithID& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  anyPlayerInfoOtherRequestWithID(anyPlayerInfoOtherRequestWithID&& from) noexcept
    : anyPlayerInfoOtherRequestWithID() {
    *this = ::std::move(from);
  }

  inline anyPlayerInfoOtherRequestWithID& operator=(anyPlayerInfoOtherRequestWithID&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const anyPlayerInfoOtherRequestWithID& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const anyPlayerInfoOtherRequestWithID* internal_default_instance() {
    return reinterpret_cast<const anyPlayerInfoOtherRequestWithID*>(
               &_anyPlayerInfoOtherRequestWithID_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(anyPlayerInfoOtherRequestWithID* other);
  friend void swap(anyPlayerInfoOtherRequestWithID& a, anyPlayerInfoOtherRequestWithID& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline anyPlayerInfoOtherRequestWithID* New() const PROTOBUF_FINAL { return New(NULL); }

  anyPlayerInfoOtherRequestWithID* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const anyPlayerInfoOtherRequestWithID& from);
  void MergeFrom(const anyPlayerInfoOtherRequestWithID& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(anyPlayerInfoOtherRequestWithID* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string otherID = 1;
  bool has_otherid() const;
  void clear_otherid();
  static const int kOtherIDFieldNumber = 1;
  const ::std::string& otherid() const;
  void set_otherid(const ::std::string& value);
  #if LANG_CXX11
  void set_otherid(::std::string&& value);
  #endif
  void set_otherid(const char* value);
  void set_otherid(const char* value, size_t size);
  ::std::string* mutable_otherid();
  ::std::string* release_otherid();
  void set_allocated_otherid(::std::string* otherid);

  // @@protoc_insertion_point(class_scope:proto.anyPlayerInfoOtherRequestWithID)
 private:
  void set_has_otherid();
  void clear_has_otherid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr otherid_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsanyPlayerInfoOtherRequestWithIDImpl();
};
// -------------------------------------------------------------------

class anyPlayerInfoOtherRequestWithNickName : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.anyPlayerInfoOtherRequestWithNickName) */ {
 public:
  anyPlayerInfoOtherRequestWithNickName();
  virtual ~anyPlayerInfoOtherRequestWithNickName();

  anyPlayerInfoOtherRequestWithNickName(const anyPlayerInfoOtherRequestWithNickName& from);

  inline anyPlayerInfoOtherRequestWithNickName& operator=(const anyPlayerInfoOtherRequestWithNickName& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  anyPlayerInfoOtherRequestWithNickName(anyPlayerInfoOtherRequestWithNickName&& from) noexcept
    : anyPlayerInfoOtherRequestWithNickName() {
    *this = ::std::move(from);
  }

  inline anyPlayerInfoOtherRequestWithNickName& operator=(anyPlayerInfoOtherRequestWithNickName&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const anyPlayerInfoOtherRequestWithNickName& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const anyPlayerInfoOtherRequestWithNickName* internal_default_instance() {
    return reinterpret_cast<const anyPlayerInfoOtherRequestWithNickName*>(
               &_anyPlayerInfoOtherRequestWithNickName_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(anyPlayerInfoOtherRequestWithNickName* other);
  friend void swap(anyPlayerInfoOtherRequestWithNickName& a, anyPlayerInfoOtherRequestWithNickName& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline anyPlayerInfoOtherRequestWithNickName* New() const PROTOBUF_FINAL { return New(NULL); }

  anyPlayerInfoOtherRequestWithNickName* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const anyPlayerInfoOtherRequestWithNickName& from);
  void MergeFrom(const anyPlayerInfoOtherRequestWithNickName& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(anyPlayerInfoOtherRequestWithNickName* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string otherNickname = 1;
  bool has_othernickname() const;
  void clear_othernickname();
  static const int kOtherNicknameFieldNumber = 1;
  const ::std::string& othernickname() const;
  void set_othernickname(const ::std::string& value);
  #if LANG_CXX11
  void set_othernickname(::std::string&& value);
  #endif
  void set_othernickname(const char* value);
  void set_othernickname(const char* value, size_t size);
  ::std::string* mutable_othernickname();
  ::std::string* release_othernickname();
  void set_allocated_othernickname(::std::string* othernickname);

  // @@protoc_insertion_point(class_scope:proto.anyPlayerInfoOtherRequestWithNickName)
 private:
  void set_has_othernickname();
  void clear_has_othernickname();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr othernickname_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsanyPlayerInfoOtherRequestWithNickNameImpl();
};
// -------------------------------------------------------------------

class anyPlayerInfoResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.anyPlayerInfoResponse) */ {
 public:
  anyPlayerInfoResponse();
  virtual ~anyPlayerInfoResponse();

  anyPlayerInfoResponse(const anyPlayerInfoResponse& from);

  inline anyPlayerInfoResponse& operator=(const anyPlayerInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  anyPlayerInfoResponse(anyPlayerInfoResponse&& from) noexcept
    : anyPlayerInfoResponse() {
    *this = ::std::move(from);
  }

  inline anyPlayerInfoResponse& operator=(anyPlayerInfoResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const anyPlayerInfoResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const anyPlayerInfoResponse* internal_default_instance() {
    return reinterpret_cast<const anyPlayerInfoResponse*>(
               &_anyPlayerInfoResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(anyPlayerInfoResponse* other);
  friend void swap(anyPlayerInfoResponse& a, anyPlayerInfoResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline anyPlayerInfoResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  anyPlayerInfoResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const anyPlayerInfoResponse& from);
  void MergeFrom(const anyPlayerInfoResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(anyPlayerInfoResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .proto.msgUserInfo userInfo = 1;
  bool has_userinfo() const;
  void clear_userinfo();
  static const int kUserInfoFieldNumber = 1;
  const ::proto::msgUserInfo& userinfo() const;
  ::proto::msgUserInfo* release_userinfo();
  ::proto::msgUserInfo* mutable_userinfo();
  void set_allocated_userinfo(::proto::msgUserInfo* userinfo);

  // @@protoc_insertion_point(class_scope:proto.anyPlayerInfoResponse)
 private:
  void set_has_userinfo();
  void clear_has_userinfo();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::msgUserInfo* userinfo_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsanyPlayerInfoResponseImpl();
};
// -------------------------------------------------------------------

class anyWhisperRequestWithUID : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.anyWhisperRequestWithUID) */ {
 public:
  anyWhisperRequestWithUID();
  virtual ~anyWhisperRequestWithUID();

  anyWhisperRequestWithUID(const anyWhisperRequestWithUID& from);

  inline anyWhisperRequestWithUID& operator=(const anyWhisperRequestWithUID& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  anyWhisperRequestWithUID(anyWhisperRequestWithUID&& from) noexcept
    : anyWhisperRequestWithUID() {
    *this = ::std::move(from);
  }

  inline anyWhisperRequestWithUID& operator=(anyWhisperRequestWithUID&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const anyWhisperRequestWithUID& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const anyWhisperRequestWithUID* internal_default_instance() {
    return reinterpret_cast<const anyWhisperRequestWithUID*>(
               &_anyWhisperRequestWithUID_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(anyWhisperRequestWithUID* other);
  friend void swap(anyWhisperRequestWithUID& a, anyWhisperRequestWithUID& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline anyWhisperRequestWithUID* New() const PROTOBUF_FINAL { return New(NULL); }

  anyWhisperRequestWithUID* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const anyWhisperRequestWithUID& from);
  void MergeFrom(const anyWhisperRequestWithUID& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(anyWhisperRequestWithUID* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string chat = 2;
  bool has_chat() const;
  void clear_chat();
  static const int kChatFieldNumber = 2;
  const ::std::string& chat() const;
  void set_chat(const ::std::string& value);
  #if LANG_CXX11
  void set_chat(::std::string&& value);
  #endif
  void set_chat(const char* value);
  void set_chat(const char* value, size_t size);
  ::std::string* mutable_chat();
  ::std::string* release_chat();
  void set_allocated_chat(::std::string* chat);

  // required int32 otherUID = 1;
  bool has_otheruid() const;
  void clear_otheruid();
  static const int kOtherUIDFieldNumber = 1;
  ::google::protobuf::int32 otheruid() const;
  void set_otheruid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.anyWhisperRequestWithUID)
 private:
  void set_has_otheruid();
  void clear_has_otheruid();
  void set_has_chat();
  void clear_has_chat();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr chat_;
  ::google::protobuf::int32 otheruid_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsanyWhisperRequestWithUIDImpl();
};
// -------------------------------------------------------------------

class anyWhisperRequestWithID : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.anyWhisperRequestWithID) */ {
 public:
  anyWhisperRequestWithID();
  virtual ~anyWhisperRequestWithID();

  anyWhisperRequestWithID(const anyWhisperRequestWithID& from);

  inline anyWhisperRequestWithID& operator=(const anyWhisperRequestWithID& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  anyWhisperRequestWithID(anyWhisperRequestWithID&& from) noexcept
    : anyWhisperRequestWithID() {
    *this = ::std::move(from);
  }

  inline anyWhisperRequestWithID& operator=(anyWhisperRequestWithID&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const anyWhisperRequestWithID& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const anyWhisperRequestWithID* internal_default_instance() {
    return reinterpret_cast<const anyWhisperRequestWithID*>(
               &_anyWhisperRequestWithID_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(anyWhisperRequestWithID* other);
  friend void swap(anyWhisperRequestWithID& a, anyWhisperRequestWithID& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline anyWhisperRequestWithID* New() const PROTOBUF_FINAL { return New(NULL); }

  anyWhisperRequestWithID* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const anyWhisperRequestWithID& from);
  void MergeFrom(const anyWhisperRequestWithID& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(anyWhisperRequestWithID* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string otherID = 1;
  bool has_otherid() const;
  void clear_otherid();
  static const int kOtherIDFieldNumber = 1;
  const ::std::string& otherid() const;
  void set_otherid(const ::std::string& value);
  #if LANG_CXX11
  void set_otherid(::std::string&& value);
  #endif
  void set_otherid(const char* value);
  void set_otherid(const char* value, size_t size);
  ::std::string* mutable_otherid();
  ::std::string* release_otherid();
  void set_allocated_otherid(::std::string* otherid);

  // required string chat = 2;
  bool has_chat() const;
  void clear_chat();
  static const int kChatFieldNumber = 2;
  const ::std::string& chat() const;
  void set_chat(const ::std::string& value);
  #if LANG_CXX11
  void set_chat(::std::string&& value);
  #endif
  void set_chat(const char* value);
  void set_chat(const char* value, size_t size);
  ::std::string* mutable_chat();
  ::std::string* release_chat();
  void set_allocated_chat(::std::string* chat);

  // @@protoc_insertion_point(class_scope:proto.anyWhisperRequestWithID)
 private:
  void set_has_otherid();
  void clear_has_otherid();
  void set_has_chat();
  void clear_has_chat();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr otherid_;
  ::google::protobuf::internal::ArenaStringPtr chat_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsanyWhisperRequestWithIDImpl();
};
// -------------------------------------------------------------------

class anyWhisperRequestWithNickName : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.anyWhisperRequestWithNickName) */ {
 public:
  anyWhisperRequestWithNickName();
  virtual ~anyWhisperRequestWithNickName();

  anyWhisperRequestWithNickName(const anyWhisperRequestWithNickName& from);

  inline anyWhisperRequestWithNickName& operator=(const anyWhisperRequestWithNickName& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  anyWhisperRequestWithNickName(anyWhisperRequestWithNickName&& from) noexcept
    : anyWhisperRequestWithNickName() {
    *this = ::std::move(from);
  }

  inline anyWhisperRequestWithNickName& operator=(anyWhisperRequestWithNickName&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const anyWhisperRequestWithNickName& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const anyWhisperRequestWithNickName* internal_default_instance() {
    return reinterpret_cast<const anyWhisperRequestWithNickName*>(
               &_anyWhisperRequestWithNickName_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(anyWhisperRequestWithNickName* other);
  friend void swap(anyWhisperRequestWithNickName& a, anyWhisperRequestWithNickName& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline anyWhisperRequestWithNickName* New() const PROTOBUF_FINAL { return New(NULL); }

  anyWhisperRequestWithNickName* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const anyWhisperRequestWithNickName& from);
  void MergeFrom(const anyWhisperRequestWithNickName& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(anyWhisperRequestWithNickName* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string otherNickname = 1;
  bool has_othernickname() const;
  void clear_othernickname();
  static const int kOtherNicknameFieldNumber = 1;
  const ::std::string& othernickname() const;
  void set_othernickname(const ::std::string& value);
  #if LANG_CXX11
  void set_othernickname(::std::string&& value);
  #endif
  void set_othernickname(const char* value);
  void set_othernickname(const char* value, size_t size);
  ::std::string* mutable_othernickname();
  ::std::string* release_othernickname();
  void set_allocated_othernickname(::std::string* othernickname);

  // required string chat = 2;
  bool has_chat() const;
  void clear_chat();
  static const int kChatFieldNumber = 2;
  const ::std::string& chat() const;
  void set_chat(const ::std::string& value);
  #if LANG_CXX11
  void set_chat(::std::string&& value);
  #endif
  void set_chat(const char* value);
  void set_chat(const char* value, size_t size);
  ::std::string* mutable_chat();
  ::std::string* release_chat();
  void set_allocated_chat(::std::string* chat);

  // @@protoc_insertion_point(class_scope:proto.anyWhisperRequestWithNickName)
 private:
  void set_has_othernickname();
  void clear_has_othernickname();
  void set_has_chat();
  void clear_has_chat();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr othernickname_;
  ::google::protobuf::internal::ArenaStringPtr chat_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsanyWhisperRequestWithNickNameImpl();
};
// -------------------------------------------------------------------

class anyWhisperResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.anyWhisperResponse) */ {
 public:
  anyWhisperResponse();
  virtual ~anyWhisperResponse();

  anyWhisperResponse(const anyWhisperResponse& from);

  inline anyWhisperResponse& operator=(const anyWhisperResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  anyWhisperResponse(anyWhisperResponse&& from) noexcept
    : anyWhisperResponse() {
    *this = ::std::move(from);
  }

  inline anyWhisperResponse& operator=(anyWhisperResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const anyWhisperResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const anyWhisperResponse* internal_default_instance() {
    return reinterpret_cast<const anyWhisperResponse*>(
               &_anyWhisperResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(anyWhisperResponse* other);
  friend void swap(anyWhisperResponse& a, anyWhisperResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline anyWhisperResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  anyWhisperResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const anyWhisperResponse& from);
  void MergeFrom(const anyWhisperResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(anyWhisperResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:proto.anyWhisperResponse)
 private:
  void set_has_success();
  void clear_has_success();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool success_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsanyWhisperResponseImpl();
};
// -------------------------------------------------------------------

class outLobbyLobbylistRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.outLobbyLobbylistRequest) */ {
 public:
  outLobbyLobbylistRequest();
  virtual ~outLobbyLobbylistRequest();

  outLobbyLobbylistRequest(const outLobbyLobbylistRequest& from);

  inline outLobbyLobbylistRequest& operator=(const outLobbyLobbylistRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  outLobbyLobbylistRequest(outLobbyLobbylistRequest&& from) noexcept
    : outLobbyLobbylistRequest() {
    *this = ::std::move(from);
  }

  inline outLobbyLobbylistRequest& operator=(outLobbyLobbylistRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const outLobbyLobbylistRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const outLobbyLobbylistRequest* internal_default_instance() {
    return reinterpret_cast<const outLobbyLobbylistRequest*>(
               &_outLobbyLobbylistRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(outLobbyLobbylistRequest* other);
  friend void swap(outLobbyLobbylistRequest& a, outLobbyLobbylistRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline outLobbyLobbylistRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  outLobbyLobbylistRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const outLobbyLobbylistRequest& from);
  void MergeFrom(const outLobbyLobbylistRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(outLobbyLobbylistRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 empty = 1;
  bool has_empty() const;
  void clear_empty();
  static const int kEmptyFieldNumber = 1;
  ::google::protobuf::int32 empty() const;
  void set_empty(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.outLobbyLobbylistRequest)
 private:
  void set_has_empty();
  void clear_has_empty();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 empty_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsoutLobbyLobbylistRequestImpl();
};
// -------------------------------------------------------------------

class outLobbyLobbylistResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.outLobbyLobbylistResponse) */ {
 public:
  outLobbyLobbylistResponse();
  virtual ~outLobbyLobbylistResponse();

  outLobbyLobbylistResponse(const outLobbyLobbylistResponse& from);

  inline outLobbyLobbylistResponse& operator=(const outLobbyLobbylistResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  outLobbyLobbylistResponse(outLobbyLobbylistResponse&& from) noexcept
    : outLobbyLobbylistResponse() {
    *this = ::std::move(from);
  }

  inline outLobbyLobbylistResponse& operator=(outLobbyLobbylistResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const outLobbyLobbylistResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const outLobbyLobbylistResponse* internal_default_instance() {
    return reinterpret_cast<const outLobbyLobbylistResponse*>(
               &_outLobbyLobbylistResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(outLobbyLobbylistResponse* other);
  friend void swap(outLobbyLobbylistResponse& a, outLobbyLobbylistResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline outLobbyLobbylistResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  outLobbyLobbylistResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const outLobbyLobbylistResponse& from);
  void MergeFrom(const outLobbyLobbylistResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(outLobbyLobbylistResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.msgLobby lobbyList = 2;
  int lobbylist_size() const;
  void clear_lobbylist();
  static const int kLobbyListFieldNumber = 2;
  const ::proto::msgLobby& lobbylist(int index) const;
  ::proto::msgLobby* mutable_lobbylist(int index);
  ::proto::msgLobby* add_lobbylist();
  ::google::protobuf::RepeatedPtrField< ::proto::msgLobby >*
      mutable_lobbylist();
  const ::google::protobuf::RepeatedPtrField< ::proto::msgLobby >&
      lobbylist() const;

  // required bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:proto.outLobbyLobbylistResponse)
 private:
  void set_has_success();
  void clear_has_success();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::msgLobby > lobbylist_;
  bool success_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsoutLobbyLobbylistResponseImpl();
};
// -------------------------------------------------------------------

class outLobbyEnterLobbyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.outLobbyEnterLobbyRequest) */ {
 public:
  outLobbyEnterLobbyRequest();
  virtual ~outLobbyEnterLobbyRequest();

  outLobbyEnterLobbyRequest(const outLobbyEnterLobbyRequest& from);

  inline outLobbyEnterLobbyRequest& operator=(const outLobbyEnterLobbyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  outLobbyEnterLobbyRequest(outLobbyEnterLobbyRequest&& from) noexcept
    : outLobbyEnterLobbyRequest() {
    *this = ::std::move(from);
  }

  inline outLobbyEnterLobbyRequest& operator=(outLobbyEnterLobbyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const outLobbyEnterLobbyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const outLobbyEnterLobbyRequest* internal_default_instance() {
    return reinterpret_cast<const outLobbyEnterLobbyRequest*>(
               &_outLobbyEnterLobbyRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(outLobbyEnterLobbyRequest* other);
  friend void swap(outLobbyEnterLobbyRequest& a, outLobbyEnterLobbyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline outLobbyEnterLobbyRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  outLobbyEnterLobbyRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const outLobbyEnterLobbyRequest& from);
  void MergeFrom(const outLobbyEnterLobbyRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(outLobbyEnterLobbyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 lobbyUID = 1;
  bool has_lobbyuid() const;
  void clear_lobbyuid();
  static const int kLobbyUIDFieldNumber = 1;
  ::google::protobuf::int32 lobbyuid() const;
  void set_lobbyuid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.outLobbyEnterLobbyRequest)
 private:
  void set_has_lobbyuid();
  void clear_has_lobbyuid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 lobbyuid_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsoutLobbyEnterLobbyRequestImpl();
};
// -------------------------------------------------------------------

class outLobbyEnterLobbyResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.outLobbyEnterLobbyResponse) */ {
 public:
  outLobbyEnterLobbyResponse();
  virtual ~outLobbyEnterLobbyResponse();

  outLobbyEnterLobbyResponse(const outLobbyEnterLobbyResponse& from);

  inline outLobbyEnterLobbyResponse& operator=(const outLobbyEnterLobbyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  outLobbyEnterLobbyResponse(outLobbyEnterLobbyResponse&& from) noexcept
    : outLobbyEnterLobbyResponse() {
    *this = ::std::move(from);
  }

  inline outLobbyEnterLobbyResponse& operator=(outLobbyEnterLobbyResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const outLobbyEnterLobbyResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const outLobbyEnterLobbyResponse* internal_default_instance() {
    return reinterpret_cast<const outLobbyEnterLobbyResponse*>(
               &_outLobbyEnterLobbyResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(outLobbyEnterLobbyResponse* other);
  friend void swap(outLobbyEnterLobbyResponse& a, outLobbyEnterLobbyResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline outLobbyEnterLobbyResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  outLobbyEnterLobbyResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const outLobbyEnterLobbyResponse& from);
  void MergeFrom(const outLobbyEnterLobbyResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(outLobbyEnterLobbyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // required int32 lobbyUID = 2;
  bool has_lobbyuid() const;
  void clear_lobbyuid();
  static const int kLobbyUIDFieldNumber = 2;
  ::google::protobuf::int32 lobbyuid() const;
  void set_lobbyuid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.outLobbyEnterLobbyResponse)
 private:
  void set_has_success();
  void clear_has_success();
  void set_has_lobbyuid();
  void clear_has_lobbyuid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool success_;
  ::google::protobuf::int32 lobbyuid_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsoutLobbyEnterLobbyResponseImpl();
};
// -------------------------------------------------------------------

class inLobbyPlayerlistRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.inLobbyPlayerlistRequest) */ {
 public:
  inLobbyPlayerlistRequest();
  virtual ~inLobbyPlayerlistRequest();

  inLobbyPlayerlistRequest(const inLobbyPlayerlistRequest& from);

  inline inLobbyPlayerlistRequest& operator=(const inLobbyPlayerlistRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  inLobbyPlayerlistRequest(inLobbyPlayerlistRequest&& from) noexcept
    : inLobbyPlayerlistRequest() {
    *this = ::std::move(from);
  }

  inline inLobbyPlayerlistRequest& operator=(inLobbyPlayerlistRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const inLobbyPlayerlistRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const inLobbyPlayerlistRequest* internal_default_instance() {
    return reinterpret_cast<const inLobbyPlayerlistRequest*>(
               &_inLobbyPlayerlistRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(inLobbyPlayerlistRequest* other);
  friend void swap(inLobbyPlayerlistRequest& a, inLobbyPlayerlistRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline inLobbyPlayerlistRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  inLobbyPlayerlistRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const inLobbyPlayerlistRequest& from);
  void MergeFrom(const inLobbyPlayerlistRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(inLobbyPlayerlistRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 lobbyUID = 1;
  bool has_lobbyuid() const;
  void clear_lobbyuid();
  static const int kLobbyUIDFieldNumber = 1;
  ::google::protobuf::int32 lobbyuid() const;
  void set_lobbyuid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.inLobbyPlayerlistRequest)
 private:
  void set_has_lobbyuid();
  void clear_has_lobbyuid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 lobbyuid_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsinLobbyPlayerlistRequestImpl();
};
// -------------------------------------------------------------------

class inLobbyPlayerlistResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.inLobbyPlayerlistResponse) */ {
 public:
  inLobbyPlayerlistResponse();
  virtual ~inLobbyPlayerlistResponse();

  inLobbyPlayerlistResponse(const inLobbyPlayerlistResponse& from);

  inline inLobbyPlayerlistResponse& operator=(const inLobbyPlayerlistResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  inLobbyPlayerlistResponse(inLobbyPlayerlistResponse&& from) noexcept
    : inLobbyPlayerlistResponse() {
    *this = ::std::move(from);
  }

  inline inLobbyPlayerlistResponse& operator=(inLobbyPlayerlistResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const inLobbyPlayerlistResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const inLobbyPlayerlistResponse* internal_default_instance() {
    return reinterpret_cast<const inLobbyPlayerlistResponse*>(
               &_inLobbyPlayerlistResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(inLobbyPlayerlistResponse* other);
  friend void swap(inLobbyPlayerlistResponse& a, inLobbyPlayerlistResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline inLobbyPlayerlistResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  inLobbyPlayerlistResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const inLobbyPlayerlistResponse& from);
  void MergeFrom(const inLobbyPlayerlistResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(inLobbyPlayerlistResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.msgUserInfo userList = 3;
  int userlist_size() const;
  void clear_userlist();
  static const int kUserListFieldNumber = 3;
  const ::proto::msgUserInfo& userlist(int index) const;
  ::proto::msgUserInfo* mutable_userlist(int index);
  ::proto::msgUserInfo* add_userlist();
  ::google::protobuf::RepeatedPtrField< ::proto::msgUserInfo >*
      mutable_userlist();
  const ::google::protobuf::RepeatedPtrField< ::proto::msgUserInfo >&
      userlist() const;

  // required bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // required int32 lobbyUID = 2;
  bool has_lobbyuid() const;
  void clear_lobbyuid();
  static const int kLobbyUIDFieldNumber = 2;
  ::google::protobuf::int32 lobbyuid() const;
  void set_lobbyuid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.inLobbyPlayerlistResponse)
 private:
  void set_has_success();
  void clear_has_success();
  void set_has_lobbyuid();
  void clear_has_lobbyuid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::msgUserInfo > userlist_;
  bool success_;
  ::google::protobuf::int32 lobbyuid_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsinLobbyPlayerlistResponseImpl();
};
// -------------------------------------------------------------------

class inLobbyEnterRoomRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.inLobbyEnterRoomRequest) */ {
 public:
  inLobbyEnterRoomRequest();
  virtual ~inLobbyEnterRoomRequest();

  inLobbyEnterRoomRequest(const inLobbyEnterRoomRequest& from);

  inline inLobbyEnterRoomRequest& operator=(const inLobbyEnterRoomRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  inLobbyEnterRoomRequest(inLobbyEnterRoomRequest&& from) noexcept
    : inLobbyEnterRoomRequest() {
    *this = ::std::move(from);
  }

  inline inLobbyEnterRoomRequest& operator=(inLobbyEnterRoomRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const inLobbyEnterRoomRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const inLobbyEnterRoomRequest* internal_default_instance() {
    return reinterpret_cast<const inLobbyEnterRoomRequest*>(
               &_inLobbyEnterRoomRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(inLobbyEnterRoomRequest* other);
  friend void swap(inLobbyEnterRoomRequest& a, inLobbyEnterRoomRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline inLobbyEnterRoomRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  inLobbyEnterRoomRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const inLobbyEnterRoomRequest& from);
  void MergeFrom(const inLobbyEnterRoomRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(inLobbyEnterRoomRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roomUID = 2;
  bool has_roomuid() const;
  void clear_roomuid();
  static const int kRoomUIDFieldNumber = 2;
  ::google::protobuf::int32 roomuid() const;
  void set_roomuid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.inLobbyEnterRoomRequest)
 private:
  void set_has_roomuid();
  void clear_has_roomuid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 roomuid_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsinLobbyEnterRoomRequestImpl();
};
// -------------------------------------------------------------------

class inLobbyEnterRoomResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.inLobbyEnterRoomResponse) */ {
 public:
  inLobbyEnterRoomResponse();
  virtual ~inLobbyEnterRoomResponse();

  inLobbyEnterRoomResponse(const inLobbyEnterRoomResponse& from);

  inline inLobbyEnterRoomResponse& operator=(const inLobbyEnterRoomResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  inLobbyEnterRoomResponse(inLobbyEnterRoomResponse&& from) noexcept
    : inLobbyEnterRoomResponse() {
    *this = ::std::move(from);
  }

  inline inLobbyEnterRoomResponse& operator=(inLobbyEnterRoomResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const inLobbyEnterRoomResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const inLobbyEnterRoomResponse* internal_default_instance() {
    return reinterpret_cast<const inLobbyEnterRoomResponse*>(
               &_inLobbyEnterRoomResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(inLobbyEnterRoomResponse* other);
  friend void swap(inLobbyEnterRoomResponse& a, inLobbyEnterRoomResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline inLobbyEnterRoomResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  inLobbyEnterRoomResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const inLobbyEnterRoomResponse& from);
  void MergeFrom(const inLobbyEnterRoomResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(inLobbyEnterRoomResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // required int32 roomUID = 2;
  bool has_roomuid() const;
  void clear_roomuid();
  static const int kRoomUIDFieldNumber = 2;
  ::google::protobuf::int32 roomuid() const;
  void set_roomuid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.inLobbyEnterRoomResponse)
 private:
  void set_has_success();
  void clear_has_success();
  void set_has_roomuid();
  void clear_has_roomuid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool success_;
  ::google::protobuf::int32 roomuid_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsinLobbyEnterRoomResponseImpl();
};
// -------------------------------------------------------------------

class inLobbyLeaveLobbyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.inLobbyLeaveLobbyRequest) */ {
 public:
  inLobbyLeaveLobbyRequest();
  virtual ~inLobbyLeaveLobbyRequest();

  inLobbyLeaveLobbyRequest(const inLobbyLeaveLobbyRequest& from);

  inline inLobbyLeaveLobbyRequest& operator=(const inLobbyLeaveLobbyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  inLobbyLeaveLobbyRequest(inLobbyLeaveLobbyRequest&& from) noexcept
    : inLobbyLeaveLobbyRequest() {
    *this = ::std::move(from);
  }

  inline inLobbyLeaveLobbyRequest& operator=(inLobbyLeaveLobbyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const inLobbyLeaveLobbyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const inLobbyLeaveLobbyRequest* internal_default_instance() {
    return reinterpret_cast<const inLobbyLeaveLobbyRequest*>(
               &_inLobbyLeaveLobbyRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(inLobbyLeaveLobbyRequest* other);
  friend void swap(inLobbyLeaveLobbyRequest& a, inLobbyLeaveLobbyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline inLobbyLeaveLobbyRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  inLobbyLeaveLobbyRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const inLobbyLeaveLobbyRequest& from);
  void MergeFrom(const inLobbyLeaveLobbyRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(inLobbyLeaveLobbyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 lobbyUID = 1;
  bool has_lobbyuid() const;
  void clear_lobbyuid();
  static const int kLobbyUIDFieldNumber = 1;
  ::google::protobuf::int32 lobbyuid() const;
  void set_lobbyuid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.inLobbyLeaveLobbyRequest)
 private:
  void set_has_lobbyuid();
  void clear_has_lobbyuid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 lobbyuid_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsinLobbyLeaveLobbyRequestImpl();
};
// -------------------------------------------------------------------

class inLobbyLeaveLobbyResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.inLobbyLeaveLobbyResponse) */ {
 public:
  inLobbyLeaveLobbyResponse();
  virtual ~inLobbyLeaveLobbyResponse();

  inLobbyLeaveLobbyResponse(const inLobbyLeaveLobbyResponse& from);

  inline inLobbyLeaveLobbyResponse& operator=(const inLobbyLeaveLobbyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  inLobbyLeaveLobbyResponse(inLobbyLeaveLobbyResponse&& from) noexcept
    : inLobbyLeaveLobbyResponse() {
    *this = ::std::move(from);
  }

  inline inLobbyLeaveLobbyResponse& operator=(inLobbyLeaveLobbyResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const inLobbyLeaveLobbyResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const inLobbyLeaveLobbyResponse* internal_default_instance() {
    return reinterpret_cast<const inLobbyLeaveLobbyResponse*>(
               &_inLobbyLeaveLobbyResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(inLobbyLeaveLobbyResponse* other);
  friend void swap(inLobbyLeaveLobbyResponse& a, inLobbyLeaveLobbyResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline inLobbyLeaveLobbyResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  inLobbyLeaveLobbyResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const inLobbyLeaveLobbyResponse& from);
  void MergeFrom(const inLobbyLeaveLobbyResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(inLobbyLeaveLobbyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // required int32 lobbyUID = 2;
  bool has_lobbyuid() const;
  void clear_lobbyuid();
  static const int kLobbyUIDFieldNumber = 2;
  ::google::protobuf::int32 lobbyuid() const;
  void set_lobbyuid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.inLobbyLeaveLobbyResponse)
 private:
  void set_has_success();
  void clear_has_success();
  void set_has_lobbyuid();
  void clear_has_lobbyuid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool success_;
  ::google::protobuf::int32 lobbyuid_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsinLobbyLeaveLobbyResponseImpl();
};
// -------------------------------------------------------------------

class inLobbyChatRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.inLobbyChatRequest) */ {
 public:
  inLobbyChatRequest();
  virtual ~inLobbyChatRequest();

  inLobbyChatRequest(const inLobbyChatRequest& from);

  inline inLobbyChatRequest& operator=(const inLobbyChatRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  inLobbyChatRequest(inLobbyChatRequest&& from) noexcept
    : inLobbyChatRequest() {
    *this = ::std::move(from);
  }

  inline inLobbyChatRequest& operator=(inLobbyChatRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const inLobbyChatRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const inLobbyChatRequest* internal_default_instance() {
    return reinterpret_cast<const inLobbyChatRequest*>(
               &_inLobbyChatRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(inLobbyChatRequest* other);
  friend void swap(inLobbyChatRequest& a, inLobbyChatRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline inLobbyChatRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  inLobbyChatRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const inLobbyChatRequest& from);
  void MergeFrom(const inLobbyChatRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(inLobbyChatRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string chat = 2;
  bool has_chat() const;
  void clear_chat();
  static const int kChatFieldNumber = 2;
  const ::std::string& chat() const;
  void set_chat(const ::std::string& value);
  #if LANG_CXX11
  void set_chat(::std::string&& value);
  #endif
  void set_chat(const char* value);
  void set_chat(const char* value, size_t size);
  ::std::string* mutable_chat();
  ::std::string* release_chat();
  void set_allocated_chat(::std::string* chat);

  // required int32 lobbyUID = 1;
  bool has_lobbyuid() const;
  void clear_lobbyuid();
  static const int kLobbyUIDFieldNumber = 1;
  ::google::protobuf::int32 lobbyuid() const;
  void set_lobbyuid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.inLobbyChatRequest)
 private:
  void set_has_lobbyuid();
  void clear_has_lobbyuid();
  void set_has_chat();
  void clear_has_chat();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr chat_;
  ::google::protobuf::int32 lobbyuid_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsinLobbyChatRequestImpl();
};
// -------------------------------------------------------------------

class inLobbyChatResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.inLobbyChatResponse) */ {
 public:
  inLobbyChatResponse();
  virtual ~inLobbyChatResponse();

  inLobbyChatResponse(const inLobbyChatResponse& from);

  inline inLobbyChatResponse& operator=(const inLobbyChatResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  inLobbyChatResponse(inLobbyChatResponse&& from) noexcept
    : inLobbyChatResponse() {
    *this = ::std::move(from);
  }

  inline inLobbyChatResponse& operator=(inLobbyChatResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const inLobbyChatResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const inLobbyChatResponse* internal_default_instance() {
    return reinterpret_cast<const inLobbyChatResponse*>(
               &_inLobbyChatResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(inLobbyChatResponse* other);
  friend void swap(inLobbyChatResponse& a, inLobbyChatResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline inLobbyChatResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  inLobbyChatResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const inLobbyChatResponse& from);
  void MergeFrom(const inLobbyChatResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(inLobbyChatResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:proto.inLobbyChatResponse)
 private:
  void set_has_success();
  void clear_has_success();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool success_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsinLobbyChatResponseImpl();
};
// -------------------------------------------------------------------

class inLobbyChatBroadcast : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.inLobbyChatBroadcast) */ {
 public:
  inLobbyChatBroadcast();
  virtual ~inLobbyChatBroadcast();

  inLobbyChatBroadcast(const inLobbyChatBroadcast& from);

  inline inLobbyChatBroadcast& operator=(const inLobbyChatBroadcast& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  inLobbyChatBroadcast(inLobbyChatBroadcast&& from) noexcept
    : inLobbyChatBroadcast() {
    *this = ::std::move(from);
  }

  inline inLobbyChatBroadcast& operator=(inLobbyChatBroadcast&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const inLobbyChatBroadcast& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const inLobbyChatBroadcast* internal_default_instance() {
    return reinterpret_cast<const inLobbyChatBroadcast*>(
               &_inLobbyChatBroadcast_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(inLobbyChatBroadcast* other);
  friend void swap(inLobbyChatBroadcast& a, inLobbyChatBroadcast& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline inLobbyChatBroadcast* New() const PROTOBUF_FINAL { return New(NULL); }

  inLobbyChatBroadcast* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const inLobbyChatBroadcast& from);
  void MergeFrom(const inLobbyChatBroadcast& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(inLobbyChatBroadcast* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string chat = 2;
  bool has_chat() const;
  void clear_chat();
  static const int kChatFieldNumber = 2;
  const ::std::string& chat() const;
  void set_chat(const ::std::string& value);
  #if LANG_CXX11
  void set_chat(::std::string&& value);
  #endif
  void set_chat(const char* value);
  void set_chat(const char* value, size_t size);
  ::std::string* mutable_chat();
  ::std::string* release_chat();
  void set_allocated_chat(::std::string* chat);

  // required int32 lobbyUID = 1;
  bool has_lobbyuid() const;
  void clear_lobbyuid();
  static const int kLobbyUIDFieldNumber = 1;
  ::google::protobuf::int32 lobbyuid() const;
  void set_lobbyuid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.inLobbyChatBroadcast)
 private:
  void set_has_lobbyuid();
  void clear_has_lobbyuid();
  void set_has_chat();
  void clear_has_chat();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr chat_;
  ::google::protobuf::int32 lobbyuid_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsinLobbyChatBroadcastImpl();
};
// -------------------------------------------------------------------

class inRoomChatRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.inRoomChatRequest) */ {
 public:
  inRoomChatRequest();
  virtual ~inRoomChatRequest();

  inRoomChatRequest(const inRoomChatRequest& from);

  inline inRoomChatRequest& operator=(const inRoomChatRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  inRoomChatRequest(inRoomChatRequest&& from) noexcept
    : inRoomChatRequest() {
    *this = ::std::move(from);
  }

  inline inRoomChatRequest& operator=(inRoomChatRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const inRoomChatRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const inRoomChatRequest* internal_default_instance() {
    return reinterpret_cast<const inRoomChatRequest*>(
               &_inRoomChatRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(inRoomChatRequest* other);
  friend void swap(inRoomChatRequest& a, inRoomChatRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline inRoomChatRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  inRoomChatRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const inRoomChatRequest& from);
  void MergeFrom(const inRoomChatRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(inRoomChatRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string chat = 2;
  bool has_chat() const;
  void clear_chat();
  static const int kChatFieldNumber = 2;
  const ::std::string& chat() const;
  void set_chat(const ::std::string& value);
  #if LANG_CXX11
  void set_chat(::std::string&& value);
  #endif
  void set_chat(const char* value);
  void set_chat(const char* value, size_t size);
  ::std::string* mutable_chat();
  ::std::string* release_chat();
  void set_allocated_chat(::std::string* chat);

  // required int32 roomUID = 1;
  bool has_roomuid() const;
  void clear_roomuid();
  static const int kRoomUIDFieldNumber = 1;
  ::google::protobuf::int32 roomuid() const;
  void set_roomuid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.inRoomChatRequest)
 private:
  void set_has_roomuid();
  void clear_has_roomuid();
  void set_has_chat();
  void clear_has_chat();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr chat_;
  ::google::protobuf::int32 roomuid_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsinRoomChatRequestImpl();
};
// -------------------------------------------------------------------

class inRoomChatResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.inRoomChatResponse) */ {
 public:
  inRoomChatResponse();
  virtual ~inRoomChatResponse();

  inRoomChatResponse(const inRoomChatResponse& from);

  inline inRoomChatResponse& operator=(const inRoomChatResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  inRoomChatResponse(inRoomChatResponse&& from) noexcept
    : inRoomChatResponse() {
    *this = ::std::move(from);
  }

  inline inRoomChatResponse& operator=(inRoomChatResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const inRoomChatResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const inRoomChatResponse* internal_default_instance() {
    return reinterpret_cast<const inRoomChatResponse*>(
               &_inRoomChatResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(inRoomChatResponse* other);
  friend void swap(inRoomChatResponse& a, inRoomChatResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline inRoomChatResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  inRoomChatResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const inRoomChatResponse& from);
  void MergeFrom(const inRoomChatResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(inRoomChatResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:proto.inRoomChatResponse)
 private:
  void set_has_success();
  void clear_has_success();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool success_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsinRoomChatResponseImpl();
};
// -------------------------------------------------------------------

class inRoomChatBroadcast : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.inRoomChatBroadcast) */ {
 public:
  inRoomChatBroadcast();
  virtual ~inRoomChatBroadcast();

  inRoomChatBroadcast(const inRoomChatBroadcast& from);

  inline inRoomChatBroadcast& operator=(const inRoomChatBroadcast& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  inRoomChatBroadcast(inRoomChatBroadcast&& from) noexcept
    : inRoomChatBroadcast() {
    *this = ::std::move(from);
  }

  inline inRoomChatBroadcast& operator=(inRoomChatBroadcast&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const inRoomChatBroadcast& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const inRoomChatBroadcast* internal_default_instance() {
    return reinterpret_cast<const inRoomChatBroadcast*>(
               &_inRoomChatBroadcast_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(inRoomChatBroadcast* other);
  friend void swap(inRoomChatBroadcast& a, inRoomChatBroadcast& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline inRoomChatBroadcast* New() const PROTOBUF_FINAL { return New(NULL); }

  inRoomChatBroadcast* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const inRoomChatBroadcast& from);
  void MergeFrom(const inRoomChatBroadcast& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(inRoomChatBroadcast* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string chat = 2;
  bool has_chat() const;
  void clear_chat();
  static const int kChatFieldNumber = 2;
  const ::std::string& chat() const;
  void set_chat(const ::std::string& value);
  #if LANG_CXX11
  void set_chat(::std::string&& value);
  #endif
  void set_chat(const char* value);
  void set_chat(const char* value, size_t size);
  ::std::string* mutable_chat();
  ::std::string* release_chat();
  void set_allocated_chat(::std::string* chat);

  // required int32 roomUID = 1;
  bool has_roomuid() const;
  void clear_roomuid();
  static const int kRoomUIDFieldNumber = 1;
  ::google::protobuf::int32 roomuid() const;
  void set_roomuid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.inRoomChatBroadcast)
 private:
  void set_has_roomuid();
  void clear_has_roomuid();
  void set_has_chat();
  void clear_has_chat();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr chat_;
  ::google::protobuf::int32 roomuid_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsinRoomChatBroadcastImpl();
};
// -------------------------------------------------------------------

class inRoomLeaveRoomRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.inRoomLeaveRoomRequest) */ {
 public:
  inRoomLeaveRoomRequest();
  virtual ~inRoomLeaveRoomRequest();

  inRoomLeaveRoomRequest(const inRoomLeaveRoomRequest& from);

  inline inRoomLeaveRoomRequest& operator=(const inRoomLeaveRoomRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  inRoomLeaveRoomRequest(inRoomLeaveRoomRequest&& from) noexcept
    : inRoomLeaveRoomRequest() {
    *this = ::std::move(from);
  }

  inline inRoomLeaveRoomRequest& operator=(inRoomLeaveRoomRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const inRoomLeaveRoomRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const inRoomLeaveRoomRequest* internal_default_instance() {
    return reinterpret_cast<const inRoomLeaveRoomRequest*>(
               &_inRoomLeaveRoomRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(inRoomLeaveRoomRequest* other);
  friend void swap(inRoomLeaveRoomRequest& a, inRoomLeaveRoomRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline inRoomLeaveRoomRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  inRoomLeaveRoomRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const inRoomLeaveRoomRequest& from);
  void MergeFrom(const inRoomLeaveRoomRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(inRoomLeaveRoomRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roomUID = 1;
  bool has_roomuid() const;
  void clear_roomuid();
  static const int kRoomUIDFieldNumber = 1;
  ::google::protobuf::int32 roomuid() const;
  void set_roomuid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.inRoomLeaveRoomRequest)
 private:
  void set_has_roomuid();
  void clear_has_roomuid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 roomuid_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsinRoomLeaveRoomRequestImpl();
};
// -------------------------------------------------------------------

class inRoomLeaveRoomResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.inRoomLeaveRoomResponse) */ {
 public:
  inRoomLeaveRoomResponse();
  virtual ~inRoomLeaveRoomResponse();

  inRoomLeaveRoomResponse(const inRoomLeaveRoomResponse& from);

  inline inRoomLeaveRoomResponse& operator=(const inRoomLeaveRoomResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  inRoomLeaveRoomResponse(inRoomLeaveRoomResponse&& from) noexcept
    : inRoomLeaveRoomResponse() {
    *this = ::std::move(from);
  }

  inline inRoomLeaveRoomResponse& operator=(inRoomLeaveRoomResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const inRoomLeaveRoomResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const inRoomLeaveRoomResponse* internal_default_instance() {
    return reinterpret_cast<const inRoomLeaveRoomResponse*>(
               &_inRoomLeaveRoomResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(inRoomLeaveRoomResponse* other);
  friend void swap(inRoomLeaveRoomResponse& a, inRoomLeaveRoomResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline inRoomLeaveRoomResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  inRoomLeaveRoomResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const inRoomLeaveRoomResponse& from);
  void MergeFrom(const inRoomLeaveRoomResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(inRoomLeaveRoomResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // required int32 roomUID = 2;
  bool has_roomuid() const;
  void clear_roomuid();
  static const int kRoomUIDFieldNumber = 2;
  ::google::protobuf::int32 roomuid() const;
  void set_roomuid(::google::protobuf::int32 value);

  // required int32 lobbyUID = 3;
  bool has_lobbyuid() const;
  void clear_lobbyuid();
  static const int kLobbyUIDFieldNumber = 3;
  ::google::protobuf::int32 lobbyuid() const;
  void set_lobbyuid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.inRoomLeaveRoomResponse)
 private:
  void set_has_success();
  void clear_has_success();
  void set_has_roomuid();
  void clear_has_roomuid();
  void set_has_lobbyuid();
  void clear_has_lobbyuid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool success_;
  ::google::protobuf::int32 roomuid_;
  ::google::protobuf::int32 lobbyuid_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsinRoomLeaveRoomResponseImpl();
};
// -------------------------------------------------------------------

class inRoomReadyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.inRoomReadyRequest) */ {
 public:
  inRoomReadyRequest();
  virtual ~inRoomReadyRequest();

  inRoomReadyRequest(const inRoomReadyRequest& from);

  inline inRoomReadyRequest& operator=(const inRoomReadyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  inRoomReadyRequest(inRoomReadyRequest&& from) noexcept
    : inRoomReadyRequest() {
    *this = ::std::move(from);
  }

  inline inRoomReadyRequest& operator=(inRoomReadyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const inRoomReadyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const inRoomReadyRequest* internal_default_instance() {
    return reinterpret_cast<const inRoomReadyRequest*>(
               &_inRoomReadyRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(inRoomReadyRequest* other);
  friend void swap(inRoomReadyRequest& a, inRoomReadyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline inRoomReadyRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  inRoomReadyRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const inRoomReadyRequest& from);
  void MergeFrom(const inRoomReadyRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(inRoomReadyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool ready = 1;
  bool has_ready() const;
  void clear_ready();
  static const int kReadyFieldNumber = 1;
  bool ready() const;
  void set_ready(bool value);

  // @@protoc_insertion_point(class_scope:proto.inRoomReadyRequest)
 private:
  void set_has_ready();
  void clear_has_ready();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool ready_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsinRoomReadyRequestImpl();
};
// -------------------------------------------------------------------

class inRoomReadyResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.inRoomReadyResponse) */ {
 public:
  inRoomReadyResponse();
  virtual ~inRoomReadyResponse();

  inRoomReadyResponse(const inRoomReadyResponse& from);

  inline inRoomReadyResponse& operator=(const inRoomReadyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  inRoomReadyResponse(inRoomReadyResponse&& from) noexcept
    : inRoomReadyResponse() {
    *this = ::std::move(from);
  }

  inline inRoomReadyResponse& operator=(inRoomReadyResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const inRoomReadyResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const inRoomReadyResponse* internal_default_instance() {
    return reinterpret_cast<const inRoomReadyResponse*>(
               &_inRoomReadyResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(inRoomReadyResponse* other);
  friend void swap(inRoomReadyResponse& a, inRoomReadyResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline inRoomReadyResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  inRoomReadyResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const inRoomReadyResponse& from);
  void MergeFrom(const inRoomReadyResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(inRoomReadyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:proto.inRoomReadyResponse)
 private:
  void set_has_success();
  void clear_has_success();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool success_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsinRoomReadyResponseImpl();
};
// -------------------------------------------------------------------

class inRoomStartRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.inRoomStartRequest) */ {
 public:
  inRoomStartRequest();
  virtual ~inRoomStartRequest();

  inRoomStartRequest(const inRoomStartRequest& from);

  inline inRoomStartRequest& operator=(const inRoomStartRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  inRoomStartRequest(inRoomStartRequest&& from) noexcept
    : inRoomStartRequest() {
    *this = ::std::move(from);
  }

  inline inRoomStartRequest& operator=(inRoomStartRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const inRoomStartRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const inRoomStartRequest* internal_default_instance() {
    return reinterpret_cast<const inRoomStartRequest*>(
               &_inRoomStartRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(inRoomStartRequest* other);
  friend void swap(inRoomStartRequest& a, inRoomStartRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline inRoomStartRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  inRoomStartRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const inRoomStartRequest& from);
  void MergeFrom(const inRoomStartRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(inRoomStartRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool start = 1;
  bool has_start() const;
  void clear_start();
  static const int kStartFieldNumber = 1;
  bool start() const;
  void set_start(bool value);

  // @@protoc_insertion_point(class_scope:proto.inRoomStartRequest)
 private:
  void set_has_start();
  void clear_has_start();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool start_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsinRoomStartRequestImpl();
};
// -------------------------------------------------------------------

class inRoomStartResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.inRoomStartResponse) */ {
 public:
  inRoomStartResponse();
  virtual ~inRoomStartResponse();

  inRoomStartResponse(const inRoomStartResponse& from);

  inline inRoomStartResponse& operator=(const inRoomStartResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  inRoomStartResponse(inRoomStartResponse&& from) noexcept
    : inRoomStartResponse() {
    *this = ::std::move(from);
  }

  inline inRoomStartResponse& operator=(inRoomStartResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const inRoomStartResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const inRoomStartResponse* internal_default_instance() {
    return reinterpret_cast<const inRoomStartResponse*>(
               &_inRoomStartResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(inRoomStartResponse* other);
  friend void swap(inRoomStartResponse& a, inRoomStartResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline inRoomStartResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  inRoomStartResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const inRoomStartResponse& from);
  void MergeFrom(const inRoomStartResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(inRoomStartResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:proto.inRoomStartResponse)
 private:
  void set_has_success();
  void clear_has_success();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool success_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsinRoomStartResponseImpl();
};
// -------------------------------------------------------------------

class inRoomStartBroadcast : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.inRoomStartBroadcast) */ {
 public:
  inRoomStartBroadcast();
  virtual ~inRoomStartBroadcast();

  inRoomStartBroadcast(const inRoomStartBroadcast& from);

  inline inRoomStartBroadcast& operator=(const inRoomStartBroadcast& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  inRoomStartBroadcast(inRoomStartBroadcast&& from) noexcept
    : inRoomStartBroadcast() {
    *this = ::std::move(from);
  }

  inline inRoomStartBroadcast& operator=(inRoomStartBroadcast&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const inRoomStartBroadcast& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const inRoomStartBroadcast* internal_default_instance() {
    return reinterpret_cast<const inRoomStartBroadcast*>(
               &_inRoomStartBroadcast_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(inRoomStartBroadcast* other);
  friend void swap(inRoomStartBroadcast& a, inRoomStartBroadcast& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline inRoomStartBroadcast* New() const PROTOBUF_FINAL { return New(NULL); }

  inRoomStartBroadcast* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const inRoomStartBroadcast& from);
  void MergeFrom(const inRoomStartBroadcast& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(inRoomStartBroadcast* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 inGameUID = 1;
  bool has_ingameuid() const;
  void clear_ingameuid();
  static const int kInGameUIDFieldNumber = 1;
  ::google::protobuf::int32 ingameuid() const;
  void set_ingameuid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.inRoomStartBroadcast)
 private:
  void set_has_ingameuid();
  void clear_has_ingameuid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 ingameuid_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsinRoomStartBroadcastImpl();
};
// -------------------------------------------------------------------

class inGameSyncPlayerPosToServer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.inGameSyncPlayerPosToServer) */ {
 public:
  inGameSyncPlayerPosToServer();
  virtual ~inGameSyncPlayerPosToServer();

  inGameSyncPlayerPosToServer(const inGameSyncPlayerPosToServer& from);

  inline inGameSyncPlayerPosToServer& operator=(const inGameSyncPlayerPosToServer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  inGameSyncPlayerPosToServer(inGameSyncPlayerPosToServer&& from) noexcept
    : inGameSyncPlayerPosToServer() {
    *this = ::std::move(from);
  }

  inline inGameSyncPlayerPosToServer& operator=(inGameSyncPlayerPosToServer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const inGameSyncPlayerPosToServer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const inGameSyncPlayerPosToServer* internal_default_instance() {
    return reinterpret_cast<const inGameSyncPlayerPosToServer*>(
               &_inGameSyncPlayerPosToServer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(inGameSyncPlayerPosToServer* other);
  friend void swap(inGameSyncPlayerPosToServer& a, inGameSyncPlayerPosToServer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline inGameSyncPlayerPosToServer* New() const PROTOBUF_FINAL { return New(NULL); }

  inGameSyncPlayerPosToServer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const inGameSyncPlayerPosToServer& from);
  void MergeFrom(const inGameSyncPlayerPosToServer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(inGameSyncPlayerPosToServer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .proto.msgUserInGameInfo userInGameInfo = 2;
  bool has_useringameinfo() const;
  void clear_useringameinfo();
  static const int kUserInGameInfoFieldNumber = 2;
  const ::proto::msgUserInGameInfo& useringameinfo() const;
  ::proto::msgUserInGameInfo* release_useringameinfo();
  ::proto::msgUserInGameInfo* mutable_useringameinfo();
  void set_allocated_useringameinfo(::proto::msgUserInGameInfo* useringameinfo);

  // required int32 inGameUID = 1;
  bool has_ingameuid() const;
  void clear_ingameuid();
  static const int kInGameUIDFieldNumber = 1;
  ::google::protobuf::int32 ingameuid() const;
  void set_ingameuid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.inGameSyncPlayerPosToServer)
 private:
  void set_has_ingameuid();
  void clear_has_ingameuid();
  void set_has_useringameinfo();
  void clear_has_useringameinfo();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::msgUserInGameInfo* useringameinfo_;
  ::google::protobuf::int32 ingameuid_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsinGameSyncPlayerPosToServerImpl();
};
// -------------------------------------------------------------------

class inGameSyncPlayersPosFromServer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.inGameSyncPlayersPosFromServer) */ {
 public:
  inGameSyncPlayersPosFromServer();
  virtual ~inGameSyncPlayersPosFromServer();

  inGameSyncPlayersPosFromServer(const inGameSyncPlayersPosFromServer& from);

  inline inGameSyncPlayersPosFromServer& operator=(const inGameSyncPlayersPosFromServer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  inGameSyncPlayersPosFromServer(inGameSyncPlayersPosFromServer&& from) noexcept
    : inGameSyncPlayersPosFromServer() {
    *this = ::std::move(from);
  }

  inline inGameSyncPlayersPosFromServer& operator=(inGameSyncPlayersPosFromServer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const inGameSyncPlayersPosFromServer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const inGameSyncPlayersPosFromServer* internal_default_instance() {
    return reinterpret_cast<const inGameSyncPlayersPosFromServer*>(
               &_inGameSyncPlayersPosFromServer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(inGameSyncPlayersPosFromServer* other);
  friend void swap(inGameSyncPlayersPosFromServer& a, inGameSyncPlayersPosFromServer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline inGameSyncPlayersPosFromServer* New() const PROTOBUF_FINAL { return New(NULL); }

  inGameSyncPlayersPosFromServer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const inGameSyncPlayersPosFromServer& from);
  void MergeFrom(const inGameSyncPlayersPosFromServer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(inGameSyncPlayersPosFromServer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.msgUserInGameInfo usersInGameInfo = 2;
  int usersingameinfo_size() const;
  void clear_usersingameinfo();
  static const int kUsersInGameInfoFieldNumber = 2;
  const ::proto::msgUserInGameInfo& usersingameinfo(int index) const;
  ::proto::msgUserInGameInfo* mutable_usersingameinfo(int index);
  ::proto::msgUserInGameInfo* add_usersingameinfo();
  ::google::protobuf::RepeatedPtrField< ::proto::msgUserInGameInfo >*
      mutable_usersingameinfo();
  const ::google::protobuf::RepeatedPtrField< ::proto::msgUserInGameInfo >&
      usersingameinfo() const;

  // required int32 inGameUID = 1;
  bool has_ingameuid() const;
  void clear_ingameuid();
  static const int kInGameUIDFieldNumber = 1;
  ::google::protobuf::int32 ingameuid() const;
  void set_ingameuid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.inGameSyncPlayersPosFromServer)
 private:
  void set_has_ingameuid();
  void clear_has_ingameuid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::msgUserInGameInfo > usersingameinfo_;
  ::google::protobuf::int32 ingameuid_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsinGameSyncPlayersPosFromServerImpl();
};
// -------------------------------------------------------------------

class inGameSyncPlayerStateToServer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.inGameSyncPlayerStateToServer) */ {
 public:
  inGameSyncPlayerStateToServer();
  virtual ~inGameSyncPlayerStateToServer();

  inGameSyncPlayerStateToServer(const inGameSyncPlayerStateToServer& from);

  inline inGameSyncPlayerStateToServer& operator=(const inGameSyncPlayerStateToServer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  inGameSyncPlayerStateToServer(inGameSyncPlayerStateToServer&& from) noexcept
    : inGameSyncPlayerStateToServer() {
    *this = ::std::move(from);
  }

  inline inGameSyncPlayerStateToServer& operator=(inGameSyncPlayerStateToServer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const inGameSyncPlayerStateToServer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const inGameSyncPlayerStateToServer* internal_default_instance() {
    return reinterpret_cast<const inGameSyncPlayerStateToServer*>(
               &_inGameSyncPlayerStateToServer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(inGameSyncPlayerStateToServer* other);
  friend void swap(inGameSyncPlayerStateToServer& a, inGameSyncPlayerStateToServer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline inGameSyncPlayerStateToServer* New() const PROTOBUF_FINAL { return New(NULL); }

  inGameSyncPlayerStateToServer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const inGameSyncPlayerStateToServer& from);
  void MergeFrom(const inGameSyncPlayerStateToServer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(inGameSyncPlayerStateToServer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .proto.msgUserInGameStateInfo userStateInfo = 2;
  bool has_userstateinfo() const;
  void clear_userstateinfo();
  static const int kUserStateInfoFieldNumber = 2;
  const ::proto::msgUserInGameStateInfo& userstateinfo() const;
  ::proto::msgUserInGameStateInfo* release_userstateinfo();
  ::proto::msgUserInGameStateInfo* mutable_userstateinfo();
  void set_allocated_userstateinfo(::proto::msgUserInGameStateInfo* userstateinfo);

  // required int32 inGameUID = 1;
  bool has_ingameuid() const;
  void clear_ingameuid();
  static const int kInGameUIDFieldNumber = 1;
  ::google::protobuf::int32 ingameuid() const;
  void set_ingameuid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.inGameSyncPlayerStateToServer)
 private:
  void set_has_ingameuid();
  void clear_has_ingameuid();
  void set_has_userstateinfo();
  void clear_has_userstateinfo();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::msgUserInGameStateInfo* userstateinfo_;
  ::google::protobuf::int32 ingameuid_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsinGameSyncPlayerStateToServerImpl();
};
// -------------------------------------------------------------------

class inGameSyncPlayersStateFromServer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.inGameSyncPlayersStateFromServer) */ {
 public:
  inGameSyncPlayersStateFromServer();
  virtual ~inGameSyncPlayersStateFromServer();

  inGameSyncPlayersStateFromServer(const inGameSyncPlayersStateFromServer& from);

  inline inGameSyncPlayersStateFromServer& operator=(const inGameSyncPlayersStateFromServer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  inGameSyncPlayersStateFromServer(inGameSyncPlayersStateFromServer&& from) noexcept
    : inGameSyncPlayersStateFromServer() {
    *this = ::std::move(from);
  }

  inline inGameSyncPlayersStateFromServer& operator=(inGameSyncPlayersStateFromServer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const inGameSyncPlayersStateFromServer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const inGameSyncPlayersStateFromServer* internal_default_instance() {
    return reinterpret_cast<const inGameSyncPlayersStateFromServer*>(
               &_inGameSyncPlayersStateFromServer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(inGameSyncPlayersStateFromServer* other);
  friend void swap(inGameSyncPlayersStateFromServer& a, inGameSyncPlayersStateFromServer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline inGameSyncPlayersStateFromServer* New() const PROTOBUF_FINAL { return New(NULL); }

  inGameSyncPlayersStateFromServer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const inGameSyncPlayersStateFromServer& from);
  void MergeFrom(const inGameSyncPlayersStateFromServer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(inGameSyncPlayersStateFromServer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.msgUserInGameStateInfo userStateInfoList = 2;
  int userstateinfolist_size() const;
  void clear_userstateinfolist();
  static const int kUserStateInfoListFieldNumber = 2;
  const ::proto::msgUserInGameStateInfo& userstateinfolist(int index) const;
  ::proto::msgUserInGameStateInfo* mutable_userstateinfolist(int index);
  ::proto::msgUserInGameStateInfo* add_userstateinfolist();
  ::google::protobuf::RepeatedPtrField< ::proto::msgUserInGameStateInfo >*
      mutable_userstateinfolist();
  const ::google::protobuf::RepeatedPtrField< ::proto::msgUserInGameStateInfo >&
      userstateinfolist() const;

  // required int32 inGameUID = 1;
  bool has_ingameuid() const;
  void clear_ingameuid();
  static const int kInGameUIDFieldNumber = 1;
  ::google::protobuf::int32 ingameuid() const;
  void set_ingameuid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.inGameSyncPlayersStateFromServer)
 private:
  void set_has_ingameuid();
  void clear_has_ingameuid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::msgUserInGameStateInfo > userstateinfolist_;
  ::google::protobuf::int32 ingameuid_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsinGameSyncPlayersStateFromServerImpl();
};
// -------------------------------------------------------------------

class inGameChatRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.inGameChatRequest) */ {
 public:
  inGameChatRequest();
  virtual ~inGameChatRequest();

  inGameChatRequest(const inGameChatRequest& from);

  inline inGameChatRequest& operator=(const inGameChatRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  inGameChatRequest(inGameChatRequest&& from) noexcept
    : inGameChatRequest() {
    *this = ::std::move(from);
  }

  inline inGameChatRequest& operator=(inGameChatRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const inGameChatRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const inGameChatRequest* internal_default_instance() {
    return reinterpret_cast<const inGameChatRequest*>(
               &_inGameChatRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(inGameChatRequest* other);
  friend void swap(inGameChatRequest& a, inGameChatRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline inGameChatRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  inGameChatRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const inGameChatRequest& from);
  void MergeFrom(const inGameChatRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(inGameChatRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string chat = 2;
  bool has_chat() const;
  void clear_chat();
  static const int kChatFieldNumber = 2;
  const ::std::string& chat() const;
  void set_chat(const ::std::string& value);
  #if LANG_CXX11
  void set_chat(::std::string&& value);
  #endif
  void set_chat(const char* value);
  void set_chat(const char* value, size_t size);
  ::std::string* mutable_chat();
  ::std::string* release_chat();
  void set_allocated_chat(::std::string* chat);

  // required int32 inGameUID = 1;
  bool has_ingameuid() const;
  void clear_ingameuid();
  static const int kInGameUIDFieldNumber = 1;
  ::google::protobuf::int32 ingameuid() const;
  void set_ingameuid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.inGameChatRequest)
 private:
  void set_has_ingameuid();
  void clear_has_ingameuid();
  void set_has_chat();
  void clear_has_chat();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr chat_;
  ::google::protobuf::int32 ingameuid_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsinGameChatRequestImpl();
};
// -------------------------------------------------------------------

class inGameChatResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.inGameChatResponse) */ {
 public:
  inGameChatResponse();
  virtual ~inGameChatResponse();

  inGameChatResponse(const inGameChatResponse& from);

  inline inGameChatResponse& operator=(const inGameChatResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  inGameChatResponse(inGameChatResponse&& from) noexcept
    : inGameChatResponse() {
    *this = ::std::move(from);
  }

  inline inGameChatResponse& operator=(inGameChatResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const inGameChatResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const inGameChatResponse* internal_default_instance() {
    return reinterpret_cast<const inGameChatResponse*>(
               &_inGameChatResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(inGameChatResponse* other);
  friend void swap(inGameChatResponse& a, inGameChatResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline inGameChatResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  inGameChatResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const inGameChatResponse& from);
  void MergeFrom(const inGameChatResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(inGameChatResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:proto.inGameChatResponse)
 private:
  void set_has_success();
  void clear_has_success();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool success_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsinGameChatResponseImpl();
};
// -------------------------------------------------------------------

class inGameChatBroadcast : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.inGameChatBroadcast) */ {
 public:
  inGameChatBroadcast();
  virtual ~inGameChatBroadcast();

  inGameChatBroadcast(const inGameChatBroadcast& from);

  inline inGameChatBroadcast& operator=(const inGameChatBroadcast& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  inGameChatBroadcast(inGameChatBroadcast&& from) noexcept
    : inGameChatBroadcast() {
    *this = ::std::move(from);
  }

  inline inGameChatBroadcast& operator=(inGameChatBroadcast&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const inGameChatBroadcast& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const inGameChatBroadcast* internal_default_instance() {
    return reinterpret_cast<const inGameChatBroadcast*>(
               &_inGameChatBroadcast_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(inGameChatBroadcast* other);
  friend void swap(inGameChatBroadcast& a, inGameChatBroadcast& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline inGameChatBroadcast* New() const PROTOBUF_FINAL { return New(NULL); }

  inGameChatBroadcast* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const inGameChatBroadcast& from);
  void MergeFrom(const inGameChatBroadcast& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(inGameChatBroadcast* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string chat = 1;
  bool has_chat() const;
  void clear_chat();
  static const int kChatFieldNumber = 1;
  const ::std::string& chat() const;
  void set_chat(const ::std::string& value);
  #if LANG_CXX11
  void set_chat(::std::string&& value);
  #endif
  void set_chat(const char* value);
  void set_chat(const char* value, size_t size);
  ::std::string* mutable_chat();
  ::std::string* release_chat();
  void set_allocated_chat(::std::string* chat);

  // @@protoc_insertion_point(class_scope:proto.inGameChatBroadcast)
 private:
  void set_has_chat();
  void clear_has_chat();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr chat_;
  friend struct ::protobuf_protoPack_2eproto::TableStruct;
  friend void ::protobuf_protoPack_2eproto::InitDefaultsinGameChatBroadcastImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// msgLobby

// required int32 uid = 1;
inline bool msgLobby::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msgLobby::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msgLobby::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msgLobby::clear_uid() {
  uid_ = 0;
  clear_has_uid();
}
inline ::google::protobuf::int32 msgLobby::uid() const {
  // @@protoc_insertion_point(field_get:proto.msgLobby.uid)
  return uid_;
}
inline void msgLobby::set_uid(::google::protobuf::int32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.msgLobby.uid)
}

// required string name = 2;
inline bool msgLobby::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msgLobby::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msgLobby::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msgLobby::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& msgLobby::name() const {
  // @@protoc_insertion_point(field_get:proto.msgLobby.name)
  return name_.GetNoArena();
}
inline void msgLobby::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.msgLobby.name)
}
#if LANG_CXX11
inline void msgLobby::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.msgLobby.name)
}
#endif
inline void msgLobby::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.msgLobby.name)
}
inline void msgLobby::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.msgLobby.name)
}
inline ::std::string* msgLobby::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:proto.msgLobby.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* msgLobby::release_name() {
  // @@protoc_insertion_point(field_release:proto.msgLobby.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msgLobby::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.msgLobby.name)
}

// required int32 userNum = 3;
inline bool msgLobby::has_usernum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msgLobby::set_has_usernum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msgLobby::clear_has_usernum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msgLobby::clear_usernum() {
  usernum_ = 0;
  clear_has_usernum();
}
inline ::google::protobuf::int32 msgLobby::usernum() const {
  // @@protoc_insertion_point(field_get:proto.msgLobby.userNum)
  return usernum_;
}
inline void msgLobby::set_usernum(::google::protobuf::int32 value) {
  set_has_usernum();
  usernum_ = value;
  // @@protoc_insertion_point(field_set:proto.msgLobby.userNum)
}

// required int32 useraMaxNum = 4;
inline bool msgLobby::has_useramaxnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void msgLobby::set_has_useramaxnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void msgLobby::clear_has_useramaxnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void msgLobby::clear_useramaxnum() {
  useramaxnum_ = 0;
  clear_has_useramaxnum();
}
inline ::google::protobuf::int32 msgLobby::useramaxnum() const {
  // @@protoc_insertion_point(field_get:proto.msgLobby.useraMaxNum)
  return useramaxnum_;
}
inline void msgLobby::set_useramaxnum(::google::protobuf::int32 value) {
  set_has_useramaxnum();
  useramaxnum_ = value;
  // @@protoc_insertion_point(field_set:proto.msgLobby.useraMaxNum)
}

// required bool closed = 5;
inline bool msgLobby::has_closed() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void msgLobby::set_has_closed() {
  _has_bits_[0] |= 0x00000010u;
}
inline void msgLobby::clear_has_closed() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void msgLobby::clear_closed() {
  closed_ = false;
  clear_has_closed();
}
inline bool msgLobby::closed() const {
  // @@protoc_insertion_point(field_get:proto.msgLobby.closed)
  return closed_;
}
inline void msgLobby::set_closed(bool value) {
  set_has_closed();
  closed_ = value;
  // @@protoc_insertion_point(field_set:proto.msgLobby.closed)
}

// -------------------------------------------------------------------

// msgRoom

// required int32 uid = 1;
inline bool msgRoom::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msgRoom::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msgRoom::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msgRoom::clear_uid() {
  uid_ = 0;
  clear_has_uid();
}
inline ::google::protobuf::int32 msgRoom::uid() const {
  // @@protoc_insertion_point(field_get:proto.msgRoom.uid)
  return uid_;
}
inline void msgRoom::set_uid(::google::protobuf::int32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.msgRoom.uid)
}

// required string name = 2;
inline bool msgRoom::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msgRoom::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msgRoom::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msgRoom::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& msgRoom::name() const {
  // @@protoc_insertion_point(field_get:proto.msgRoom.name)
  return name_.GetNoArena();
}
inline void msgRoom::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.msgRoom.name)
}
#if LANG_CXX11
inline void msgRoom::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.msgRoom.name)
}
#endif
inline void msgRoom::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.msgRoom.name)
}
inline void msgRoom::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.msgRoom.name)
}
inline ::std::string* msgRoom::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:proto.msgRoom.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* msgRoom::release_name() {
  // @@protoc_insertion_point(field_release:proto.msgRoom.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msgRoom::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.msgRoom.name)
}

// required int32 userNum = 3;
inline bool msgRoom::has_usernum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msgRoom::set_has_usernum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msgRoom::clear_has_usernum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msgRoom::clear_usernum() {
  usernum_ = 0;
  clear_has_usernum();
}
inline ::google::protobuf::int32 msgRoom::usernum() const {
  // @@protoc_insertion_point(field_get:proto.msgRoom.userNum)
  return usernum_;
}
inline void msgRoom::set_usernum(::google::protobuf::int32 value) {
  set_has_usernum();
  usernum_ = value;
  // @@protoc_insertion_point(field_set:proto.msgRoom.userNum)
}

// required int32 useraMaxNum = 4;
inline bool msgRoom::has_useramaxnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void msgRoom::set_has_useramaxnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void msgRoom::clear_has_useramaxnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void msgRoom::clear_useramaxnum() {
  useramaxnum_ = 0;
  clear_has_useramaxnum();
}
inline ::google::protobuf::int32 msgRoom::useramaxnum() const {
  // @@protoc_insertion_point(field_get:proto.msgRoom.useraMaxNum)
  return useramaxnum_;
}
inline void msgRoom::set_useramaxnum(::google::protobuf::int32 value) {
  set_has_useramaxnum();
  useramaxnum_ = value;
  // @@protoc_insertion_point(field_set:proto.msgRoom.useraMaxNum)
}

// -------------------------------------------------------------------

// msgGame

// required int32 uid = 1;
inline bool msgGame::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msgGame::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msgGame::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msgGame::clear_uid() {
  uid_ = 0;
  clear_has_uid();
}
inline ::google::protobuf::int32 msgGame::uid() const {
  // @@protoc_insertion_point(field_get:proto.msgGame.uid)
  return uid_;
}
inline void msgGame::set_uid(::google::protobuf::int32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.msgGame.uid)
}

// required string number = 2;
inline bool msgGame::has_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msgGame::set_has_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msgGame::clear_has_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msgGame::clear_number() {
  number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_number();
}
inline const ::std::string& msgGame::number() const {
  // @@protoc_insertion_point(field_get:proto.msgGame.number)
  return number_.GetNoArena();
}
inline void msgGame::set_number(const ::std::string& value) {
  set_has_number();
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.msgGame.number)
}
#if LANG_CXX11
inline void msgGame::set_number(::std::string&& value) {
  set_has_number();
  number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.msgGame.number)
}
#endif
inline void msgGame::set_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_number();
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.msgGame.number)
}
inline void msgGame::set_number(const char* value, size_t size) {
  set_has_number();
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.msgGame.number)
}
inline ::std::string* msgGame::mutable_number() {
  set_has_number();
  // @@protoc_insertion_point(field_mutable:proto.msgGame.number)
  return number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* msgGame::release_number() {
  // @@protoc_insertion_point(field_release:proto.msgGame.number)
  clear_has_number();
  return number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msgGame::set_allocated_number(::std::string* number) {
  if (number != NULL) {
    set_has_number();
  } else {
    clear_has_number();
  }
  number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), number);
  // @@protoc_insertion_point(field_set_allocated:proto.msgGame.number)
}

// repeated .proto.msgUserInfo userList = 3;
inline int msgGame::userlist_size() const {
  return userlist_.size();
}
inline void msgGame::clear_userlist() {
  userlist_.Clear();
}
inline const ::proto::msgUserInfo& msgGame::userlist(int index) const {
  // @@protoc_insertion_point(field_get:proto.msgGame.userList)
  return userlist_.Get(index);
}
inline ::proto::msgUserInfo* msgGame::mutable_userlist(int index) {
  // @@protoc_insertion_point(field_mutable:proto.msgGame.userList)
  return userlist_.Mutable(index);
}
inline ::proto::msgUserInfo* msgGame::add_userlist() {
  // @@protoc_insertion_point(field_add:proto.msgGame.userList)
  return userlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::msgUserInfo >*
msgGame::mutable_userlist() {
  // @@protoc_insertion_point(field_mutable_list:proto.msgGame.userList)
  return &userlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::msgUserInfo >&
msgGame::userlist() const {
  // @@protoc_insertion_point(field_list:proto.msgGame.userList)
  return userlist_;
}

// -------------------------------------------------------------------

// msgUserInfo

// required int32 uid = 1;
inline bool msgUserInfo::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msgUserInfo::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msgUserInfo::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msgUserInfo::clear_uid() {
  uid_ = 0;
  clear_has_uid();
}
inline ::google::protobuf::int32 msgUserInfo::uid() const {
  // @@protoc_insertion_point(field_get:proto.msgUserInfo.uid)
  return uid_;
}
inline void msgUserInfo::set_uid(::google::protobuf::int32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.msgUserInfo.uid)
}

// required int32 id = 2;
inline bool msgUserInfo::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msgUserInfo::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msgUserInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msgUserInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 msgUserInfo::id() const {
  // @@protoc_insertion_point(field_get:proto.msgUserInfo.id)
  return id_;
}
inline void msgUserInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.msgUserInfo.id)
}

// required string Nickname = 3;
inline bool msgUserInfo::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msgUserInfo::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msgUserInfo::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msgUserInfo::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& msgUserInfo::nickname() const {
  // @@protoc_insertion_point(field_get:proto.msgUserInfo.Nickname)
  return nickname_.GetNoArena();
}
inline void msgUserInfo::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.msgUserInfo.Nickname)
}
#if LANG_CXX11
inline void msgUserInfo::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.msgUserInfo.Nickname)
}
#endif
inline void msgUserInfo::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.msgUserInfo.Nickname)
}
inline void msgUserInfo::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.msgUserInfo.Nickname)
}
inline ::std::string* msgUserInfo::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:proto.msgUserInfo.Nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* msgUserInfo::release_nickname() {
  // @@protoc_insertion_point(field_release:proto.msgUserInfo.Nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msgUserInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.msgUserInfo.Nickname)
}

// -------------------------------------------------------------------

// msgUserInGameInfo

// required int32 userUid = 1;
inline bool msgUserInGameInfo::has_useruid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msgUserInGameInfo::set_has_useruid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msgUserInGameInfo::clear_has_useruid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msgUserInGameInfo::clear_useruid() {
  useruid_ = 0;
  clear_has_useruid();
}
inline ::google::protobuf::int32 msgUserInGameInfo::useruid() const {
  // @@protoc_insertion_point(field_get:proto.msgUserInGameInfo.userUid)
  return useruid_;
}
inline void msgUserInGameInfo::set_useruid(::google::protobuf::int32 value) {
  set_has_useruid();
  useruid_ = value;
  // @@protoc_insertion_point(field_set:proto.msgUserInGameInfo.userUid)
}

// required float x = 2;
inline bool msgUserInGameInfo::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msgUserInGameInfo::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msgUserInGameInfo::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msgUserInGameInfo::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float msgUserInGameInfo::x() const {
  // @@protoc_insertion_point(field_get:proto.msgUserInGameInfo.x)
  return x_;
}
inline void msgUserInGameInfo::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:proto.msgUserInGameInfo.x)
}

// required float y = 3;
inline bool msgUserInGameInfo::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msgUserInGameInfo::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msgUserInGameInfo::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msgUserInGameInfo::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float msgUserInGameInfo::y() const {
  // @@protoc_insertion_point(field_get:proto.msgUserInGameInfo.y)
  return y_;
}
inline void msgUserInGameInfo::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:proto.msgUserInGameInfo.y)
}

// required float z = 4;
inline bool msgUserInGameInfo::has_z() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void msgUserInGameInfo::set_has_z() {
  _has_bits_[0] |= 0x00000008u;
}
inline void msgUserInGameInfo::clear_has_z() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void msgUserInGameInfo::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline float msgUserInGameInfo::z() const {
  // @@protoc_insertion_point(field_get:proto.msgUserInGameInfo.z)
  return z_;
}
inline void msgUserInGameInfo::set_z(float value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:proto.msgUserInGameInfo.z)
}

// required float qx = 5;
inline bool msgUserInGameInfo::has_qx() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void msgUserInGameInfo::set_has_qx() {
  _has_bits_[0] |= 0x00000010u;
}
inline void msgUserInGameInfo::clear_has_qx() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void msgUserInGameInfo::clear_qx() {
  qx_ = 0;
  clear_has_qx();
}
inline float msgUserInGameInfo::qx() const {
  // @@protoc_insertion_point(field_get:proto.msgUserInGameInfo.qx)
  return qx_;
}
inline void msgUserInGameInfo::set_qx(float value) {
  set_has_qx();
  qx_ = value;
  // @@protoc_insertion_point(field_set:proto.msgUserInGameInfo.qx)
}

// required float qy = 6;
inline bool msgUserInGameInfo::has_qy() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void msgUserInGameInfo::set_has_qy() {
  _has_bits_[0] |= 0x00000020u;
}
inline void msgUserInGameInfo::clear_has_qy() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void msgUserInGameInfo::clear_qy() {
  qy_ = 0;
  clear_has_qy();
}
inline float msgUserInGameInfo::qy() const {
  // @@protoc_insertion_point(field_get:proto.msgUserInGameInfo.qy)
  return qy_;
}
inline void msgUserInGameInfo::set_qy(float value) {
  set_has_qy();
  qy_ = value;
  // @@protoc_insertion_point(field_set:proto.msgUserInGameInfo.qy)
}

// required float qz = 7;
inline bool msgUserInGameInfo::has_qz() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void msgUserInGameInfo::set_has_qz() {
  _has_bits_[0] |= 0x00000040u;
}
inline void msgUserInGameInfo::clear_has_qz() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void msgUserInGameInfo::clear_qz() {
  qz_ = 0;
  clear_has_qz();
}
inline float msgUserInGameInfo::qz() const {
  // @@protoc_insertion_point(field_get:proto.msgUserInGameInfo.qz)
  return qz_;
}
inline void msgUserInGameInfo::set_qz(float value) {
  set_has_qz();
  qz_ = value;
  // @@protoc_insertion_point(field_set:proto.msgUserInGameInfo.qz)
}

// required float qw = 8;
inline bool msgUserInGameInfo::has_qw() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void msgUserInGameInfo::set_has_qw() {
  _has_bits_[0] |= 0x00000080u;
}
inline void msgUserInGameInfo::clear_has_qw() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void msgUserInGameInfo::clear_qw() {
  qw_ = 0;
  clear_has_qw();
}
inline float msgUserInGameInfo::qw() const {
  // @@protoc_insertion_point(field_get:proto.msgUserInGameInfo.qw)
  return qw_;
}
inline void msgUserInGameInfo::set_qw(float value) {
  set_has_qw();
  qw_ = value;
  // @@protoc_insertion_point(field_set:proto.msgUserInGameInfo.qw)
}

// -------------------------------------------------------------------

// msgUserInGameStateInfo

// required int32 userUid = 1;
inline bool msgUserInGameStateInfo::has_useruid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msgUserInGameStateInfo::set_has_useruid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msgUserInGameStateInfo::clear_has_useruid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msgUserInGameStateInfo::clear_useruid() {
  useruid_ = 0;
  clear_has_useruid();
}
inline ::google::protobuf::int32 msgUserInGameStateInfo::useruid() const {
  // @@protoc_insertion_point(field_get:proto.msgUserInGameStateInfo.userUid)
  return useruid_;
}
inline void msgUserInGameStateInfo::set_useruid(::google::protobuf::int32 value) {
  set_has_useruid();
  useruid_ = value;
  // @@protoc_insertion_point(field_set:proto.msgUserInGameStateInfo.userUid)
}

// required int32 stateBit32 = 2;
inline bool msgUserInGameStateInfo::has_statebit32() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msgUserInGameStateInfo::set_has_statebit32() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msgUserInGameStateInfo::clear_has_statebit32() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msgUserInGameStateInfo::clear_statebit32() {
  statebit32_ = 0;
  clear_has_statebit32();
}
inline ::google::protobuf::int32 msgUserInGameStateInfo::statebit32() const {
  // @@protoc_insertion_point(field_get:proto.msgUserInGameStateInfo.stateBit32)
  return statebit32_;
}
inline void msgUserInGameStateInfo::set_statebit32(::google::protobuf::int32 value) {
  set_has_statebit32();
  statebit32_ = value;
  // @@protoc_insertion_point(field_set:proto.msgUserInGameStateInfo.stateBit32)
}

// -------------------------------------------------------------------

// accountCreate

// required string id = 1;
inline bool accountCreate::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void accountCreate::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void accountCreate::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void accountCreate::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& accountCreate::id() const {
  // @@protoc_insertion_point(field_get:proto.accountCreate.id)
  return id_.GetNoArena();
}
inline void accountCreate::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.accountCreate.id)
}
#if LANG_CXX11
inline void accountCreate::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.accountCreate.id)
}
#endif
inline void accountCreate::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.accountCreate.id)
}
inline void accountCreate::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.accountCreate.id)
}
inline ::std::string* accountCreate::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:proto.accountCreate.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* accountCreate::release_id() {
  // @@protoc_insertion_point(field_release:proto.accountCreate.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void accountCreate::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:proto.accountCreate.id)
}

// required string password = 2;
inline bool accountCreate::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void accountCreate::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void accountCreate::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void accountCreate::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& accountCreate::password() const {
  // @@protoc_insertion_point(field_get:proto.accountCreate.password)
  return password_.GetNoArena();
}
inline void accountCreate::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.accountCreate.password)
}
#if LANG_CXX11
inline void accountCreate::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.accountCreate.password)
}
#endif
inline void accountCreate::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.accountCreate.password)
}
inline void accountCreate::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.accountCreate.password)
}
inline ::std::string* accountCreate::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:proto.accountCreate.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* accountCreate::release_password() {
  // @@protoc_insertion_point(field_release:proto.accountCreate.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void accountCreate::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:proto.accountCreate.password)
}

// required string nickname = 3;
inline bool accountCreate::has_nickname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void accountCreate::set_has_nickname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void accountCreate::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void accountCreate::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& accountCreate::nickname() const {
  // @@protoc_insertion_point(field_get:proto.accountCreate.nickname)
  return nickname_.GetNoArena();
}
inline void accountCreate::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.accountCreate.nickname)
}
#if LANG_CXX11
inline void accountCreate::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.accountCreate.nickname)
}
#endif
inline void accountCreate::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.accountCreate.nickname)
}
inline void accountCreate::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.accountCreate.nickname)
}
inline ::std::string* accountCreate::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:proto.accountCreate.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* accountCreate::release_nickname() {
  // @@protoc_insertion_point(field_release:proto.accountCreate.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void accountCreate::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.accountCreate.nickname)
}

// -------------------------------------------------------------------

// accountLogin

// required string id = 1;
inline bool accountLogin::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void accountLogin::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void accountLogin::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void accountLogin::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& accountLogin::id() const {
  // @@protoc_insertion_point(field_get:proto.accountLogin.id)
  return id_.GetNoArena();
}
inline void accountLogin::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.accountLogin.id)
}
#if LANG_CXX11
inline void accountLogin::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.accountLogin.id)
}
#endif
inline void accountLogin::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.accountLogin.id)
}
inline void accountLogin::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.accountLogin.id)
}
inline ::std::string* accountLogin::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:proto.accountLogin.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* accountLogin::release_id() {
  // @@protoc_insertion_point(field_release:proto.accountLogin.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void accountLogin::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:proto.accountLogin.id)
}

// required string password = 2;
inline bool accountLogin::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void accountLogin::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void accountLogin::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void accountLogin::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& accountLogin::password() const {
  // @@protoc_insertion_point(field_get:proto.accountLogin.password)
  return password_.GetNoArena();
}
inline void accountLogin::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.accountLogin.password)
}
#if LANG_CXX11
inline void accountLogin::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.accountLogin.password)
}
#endif
inline void accountLogin::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.accountLogin.password)
}
inline void accountLogin::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.accountLogin.password)
}
inline ::std::string* accountLogin::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:proto.accountLogin.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* accountLogin::release_password() {
  // @@protoc_insertion_point(field_release:proto.accountLogin.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void accountLogin::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:proto.accountLogin.password)
}

// -------------------------------------------------------------------

// accountLogout

// required int32 empty = 1;
inline bool accountLogout::has_empty() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void accountLogout::set_has_empty() {
  _has_bits_[0] |= 0x00000001u;
}
inline void accountLogout::clear_has_empty() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void accountLogout::clear_empty() {
  empty_ = 0;
  clear_has_empty();
}
inline ::google::protobuf::int32 accountLogout::empty() const {
  // @@protoc_insertion_point(field_get:proto.accountLogout.empty)
  return empty_;
}
inline void accountLogout::set_empty(::google::protobuf::int32 value) {
  set_has_empty();
  empty_ = value;
  // @@protoc_insertion_point(field_set:proto.accountLogout.empty)
}

// -------------------------------------------------------------------

// anyPlayerInfoSelfRequest

// required int32 empty = 1;
inline bool anyPlayerInfoSelfRequest::has_empty() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void anyPlayerInfoSelfRequest::set_has_empty() {
  _has_bits_[0] |= 0x00000001u;
}
inline void anyPlayerInfoSelfRequest::clear_has_empty() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void anyPlayerInfoSelfRequest::clear_empty() {
  empty_ = 0;
  clear_has_empty();
}
inline ::google::protobuf::int32 anyPlayerInfoSelfRequest::empty() const {
  // @@protoc_insertion_point(field_get:proto.anyPlayerInfoSelfRequest.empty)
  return empty_;
}
inline void anyPlayerInfoSelfRequest::set_empty(::google::protobuf::int32 value) {
  set_has_empty();
  empty_ = value;
  // @@protoc_insertion_point(field_set:proto.anyPlayerInfoSelfRequest.empty)
}

// -------------------------------------------------------------------

// anyPlayerInfoOtherRequestWithID

// required string otherID = 1;
inline bool anyPlayerInfoOtherRequestWithID::has_otherid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void anyPlayerInfoOtherRequestWithID::set_has_otherid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void anyPlayerInfoOtherRequestWithID::clear_has_otherid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void anyPlayerInfoOtherRequestWithID::clear_otherid() {
  otherid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_otherid();
}
inline const ::std::string& anyPlayerInfoOtherRequestWithID::otherid() const {
  // @@protoc_insertion_point(field_get:proto.anyPlayerInfoOtherRequestWithID.otherID)
  return otherid_.GetNoArena();
}
inline void anyPlayerInfoOtherRequestWithID::set_otherid(const ::std::string& value) {
  set_has_otherid();
  otherid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.anyPlayerInfoOtherRequestWithID.otherID)
}
#if LANG_CXX11
inline void anyPlayerInfoOtherRequestWithID::set_otherid(::std::string&& value) {
  set_has_otherid();
  otherid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.anyPlayerInfoOtherRequestWithID.otherID)
}
#endif
inline void anyPlayerInfoOtherRequestWithID::set_otherid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_otherid();
  otherid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.anyPlayerInfoOtherRequestWithID.otherID)
}
inline void anyPlayerInfoOtherRequestWithID::set_otherid(const char* value, size_t size) {
  set_has_otherid();
  otherid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.anyPlayerInfoOtherRequestWithID.otherID)
}
inline ::std::string* anyPlayerInfoOtherRequestWithID::mutable_otherid() {
  set_has_otherid();
  // @@protoc_insertion_point(field_mutable:proto.anyPlayerInfoOtherRequestWithID.otherID)
  return otherid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* anyPlayerInfoOtherRequestWithID::release_otherid() {
  // @@protoc_insertion_point(field_release:proto.anyPlayerInfoOtherRequestWithID.otherID)
  clear_has_otherid();
  return otherid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void anyPlayerInfoOtherRequestWithID::set_allocated_otherid(::std::string* otherid) {
  if (otherid != NULL) {
    set_has_otherid();
  } else {
    clear_has_otherid();
  }
  otherid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), otherid);
  // @@protoc_insertion_point(field_set_allocated:proto.anyPlayerInfoOtherRequestWithID.otherID)
}

// -------------------------------------------------------------------

// anyPlayerInfoOtherRequestWithNickName

// required string otherNickname = 1;
inline bool anyPlayerInfoOtherRequestWithNickName::has_othernickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void anyPlayerInfoOtherRequestWithNickName::set_has_othernickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void anyPlayerInfoOtherRequestWithNickName::clear_has_othernickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void anyPlayerInfoOtherRequestWithNickName::clear_othernickname() {
  othernickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_othernickname();
}
inline const ::std::string& anyPlayerInfoOtherRequestWithNickName::othernickname() const {
  // @@protoc_insertion_point(field_get:proto.anyPlayerInfoOtherRequestWithNickName.otherNickname)
  return othernickname_.GetNoArena();
}
inline void anyPlayerInfoOtherRequestWithNickName::set_othernickname(const ::std::string& value) {
  set_has_othernickname();
  othernickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.anyPlayerInfoOtherRequestWithNickName.otherNickname)
}
#if LANG_CXX11
inline void anyPlayerInfoOtherRequestWithNickName::set_othernickname(::std::string&& value) {
  set_has_othernickname();
  othernickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.anyPlayerInfoOtherRequestWithNickName.otherNickname)
}
#endif
inline void anyPlayerInfoOtherRequestWithNickName::set_othernickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_othernickname();
  othernickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.anyPlayerInfoOtherRequestWithNickName.otherNickname)
}
inline void anyPlayerInfoOtherRequestWithNickName::set_othernickname(const char* value, size_t size) {
  set_has_othernickname();
  othernickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.anyPlayerInfoOtherRequestWithNickName.otherNickname)
}
inline ::std::string* anyPlayerInfoOtherRequestWithNickName::mutable_othernickname() {
  set_has_othernickname();
  // @@protoc_insertion_point(field_mutable:proto.anyPlayerInfoOtherRequestWithNickName.otherNickname)
  return othernickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* anyPlayerInfoOtherRequestWithNickName::release_othernickname() {
  // @@protoc_insertion_point(field_release:proto.anyPlayerInfoOtherRequestWithNickName.otherNickname)
  clear_has_othernickname();
  return othernickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void anyPlayerInfoOtherRequestWithNickName::set_allocated_othernickname(::std::string* othernickname) {
  if (othernickname != NULL) {
    set_has_othernickname();
  } else {
    clear_has_othernickname();
  }
  othernickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), othernickname);
  // @@protoc_insertion_point(field_set_allocated:proto.anyPlayerInfoOtherRequestWithNickName.otherNickname)
}

// -------------------------------------------------------------------

// anyPlayerInfoResponse

// required .proto.msgUserInfo userInfo = 1;
inline bool anyPlayerInfoResponse::has_userinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void anyPlayerInfoResponse::set_has_userinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void anyPlayerInfoResponse::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void anyPlayerInfoResponse::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->Clear();
  clear_has_userinfo();
}
inline const ::proto::msgUserInfo& anyPlayerInfoResponse::userinfo() const {
  const ::proto::msgUserInfo* p = userinfo_;
  // @@protoc_insertion_point(field_get:proto.anyPlayerInfoResponse.userInfo)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::msgUserInfo*>(
      &::proto::_msgUserInfo_default_instance_);
}
inline ::proto::msgUserInfo* anyPlayerInfoResponse::release_userinfo() {
  // @@protoc_insertion_point(field_release:proto.anyPlayerInfoResponse.userInfo)
  clear_has_userinfo();
  ::proto::msgUserInfo* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline ::proto::msgUserInfo* anyPlayerInfoResponse::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) {
    userinfo_ = new ::proto::msgUserInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.anyPlayerInfoResponse.userInfo)
  return userinfo_;
}
inline void anyPlayerInfoResponse::set_allocated_userinfo(::proto::msgUserInfo* userinfo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete userinfo_;
  }
  if (userinfo) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      userinfo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, userinfo, submessage_arena);
    }
    set_has_userinfo();
  } else {
    clear_has_userinfo();
  }
  userinfo_ = userinfo;
  // @@protoc_insertion_point(field_set_allocated:proto.anyPlayerInfoResponse.userInfo)
}

// -------------------------------------------------------------------

// anyWhisperRequestWithUID

// required int32 otherUID = 1;
inline bool anyWhisperRequestWithUID::has_otheruid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void anyWhisperRequestWithUID::set_has_otheruid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void anyWhisperRequestWithUID::clear_has_otheruid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void anyWhisperRequestWithUID::clear_otheruid() {
  otheruid_ = 0;
  clear_has_otheruid();
}
inline ::google::protobuf::int32 anyWhisperRequestWithUID::otheruid() const {
  // @@protoc_insertion_point(field_get:proto.anyWhisperRequestWithUID.otherUID)
  return otheruid_;
}
inline void anyWhisperRequestWithUID::set_otheruid(::google::protobuf::int32 value) {
  set_has_otheruid();
  otheruid_ = value;
  // @@protoc_insertion_point(field_set:proto.anyWhisperRequestWithUID.otherUID)
}

// required string chat = 2;
inline bool anyWhisperRequestWithUID::has_chat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void anyWhisperRequestWithUID::set_has_chat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void anyWhisperRequestWithUID::clear_has_chat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void anyWhisperRequestWithUID::clear_chat() {
  chat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat();
}
inline const ::std::string& anyWhisperRequestWithUID::chat() const {
  // @@protoc_insertion_point(field_get:proto.anyWhisperRequestWithUID.chat)
  return chat_.GetNoArena();
}
inline void anyWhisperRequestWithUID::set_chat(const ::std::string& value) {
  set_has_chat();
  chat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.anyWhisperRequestWithUID.chat)
}
#if LANG_CXX11
inline void anyWhisperRequestWithUID::set_chat(::std::string&& value) {
  set_has_chat();
  chat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.anyWhisperRequestWithUID.chat)
}
#endif
inline void anyWhisperRequestWithUID::set_chat(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat();
  chat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.anyWhisperRequestWithUID.chat)
}
inline void anyWhisperRequestWithUID::set_chat(const char* value, size_t size) {
  set_has_chat();
  chat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.anyWhisperRequestWithUID.chat)
}
inline ::std::string* anyWhisperRequestWithUID::mutable_chat() {
  set_has_chat();
  // @@protoc_insertion_point(field_mutable:proto.anyWhisperRequestWithUID.chat)
  return chat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* anyWhisperRequestWithUID::release_chat() {
  // @@protoc_insertion_point(field_release:proto.anyWhisperRequestWithUID.chat)
  clear_has_chat();
  return chat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void anyWhisperRequestWithUID::set_allocated_chat(::std::string* chat) {
  if (chat != NULL) {
    set_has_chat();
  } else {
    clear_has_chat();
  }
  chat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat);
  // @@protoc_insertion_point(field_set_allocated:proto.anyWhisperRequestWithUID.chat)
}

// -------------------------------------------------------------------

// anyWhisperRequestWithID

// required string otherID = 1;
inline bool anyWhisperRequestWithID::has_otherid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void anyWhisperRequestWithID::set_has_otherid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void anyWhisperRequestWithID::clear_has_otherid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void anyWhisperRequestWithID::clear_otherid() {
  otherid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_otherid();
}
inline const ::std::string& anyWhisperRequestWithID::otherid() const {
  // @@protoc_insertion_point(field_get:proto.anyWhisperRequestWithID.otherID)
  return otherid_.GetNoArena();
}
inline void anyWhisperRequestWithID::set_otherid(const ::std::string& value) {
  set_has_otherid();
  otherid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.anyWhisperRequestWithID.otherID)
}
#if LANG_CXX11
inline void anyWhisperRequestWithID::set_otherid(::std::string&& value) {
  set_has_otherid();
  otherid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.anyWhisperRequestWithID.otherID)
}
#endif
inline void anyWhisperRequestWithID::set_otherid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_otherid();
  otherid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.anyWhisperRequestWithID.otherID)
}
inline void anyWhisperRequestWithID::set_otherid(const char* value, size_t size) {
  set_has_otherid();
  otherid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.anyWhisperRequestWithID.otherID)
}
inline ::std::string* anyWhisperRequestWithID::mutable_otherid() {
  set_has_otherid();
  // @@protoc_insertion_point(field_mutable:proto.anyWhisperRequestWithID.otherID)
  return otherid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* anyWhisperRequestWithID::release_otherid() {
  // @@protoc_insertion_point(field_release:proto.anyWhisperRequestWithID.otherID)
  clear_has_otherid();
  return otherid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void anyWhisperRequestWithID::set_allocated_otherid(::std::string* otherid) {
  if (otherid != NULL) {
    set_has_otherid();
  } else {
    clear_has_otherid();
  }
  otherid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), otherid);
  // @@protoc_insertion_point(field_set_allocated:proto.anyWhisperRequestWithID.otherID)
}

// required string chat = 2;
inline bool anyWhisperRequestWithID::has_chat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void anyWhisperRequestWithID::set_has_chat() {
  _has_bits_[0] |= 0x00000002u;
}
inline void anyWhisperRequestWithID::clear_has_chat() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void anyWhisperRequestWithID::clear_chat() {
  chat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat();
}
inline const ::std::string& anyWhisperRequestWithID::chat() const {
  // @@protoc_insertion_point(field_get:proto.anyWhisperRequestWithID.chat)
  return chat_.GetNoArena();
}
inline void anyWhisperRequestWithID::set_chat(const ::std::string& value) {
  set_has_chat();
  chat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.anyWhisperRequestWithID.chat)
}
#if LANG_CXX11
inline void anyWhisperRequestWithID::set_chat(::std::string&& value) {
  set_has_chat();
  chat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.anyWhisperRequestWithID.chat)
}
#endif
inline void anyWhisperRequestWithID::set_chat(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat();
  chat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.anyWhisperRequestWithID.chat)
}
inline void anyWhisperRequestWithID::set_chat(const char* value, size_t size) {
  set_has_chat();
  chat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.anyWhisperRequestWithID.chat)
}
inline ::std::string* anyWhisperRequestWithID::mutable_chat() {
  set_has_chat();
  // @@protoc_insertion_point(field_mutable:proto.anyWhisperRequestWithID.chat)
  return chat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* anyWhisperRequestWithID::release_chat() {
  // @@protoc_insertion_point(field_release:proto.anyWhisperRequestWithID.chat)
  clear_has_chat();
  return chat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void anyWhisperRequestWithID::set_allocated_chat(::std::string* chat) {
  if (chat != NULL) {
    set_has_chat();
  } else {
    clear_has_chat();
  }
  chat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat);
  // @@protoc_insertion_point(field_set_allocated:proto.anyWhisperRequestWithID.chat)
}

// -------------------------------------------------------------------

// anyWhisperRequestWithNickName

// required string otherNickname = 1;
inline bool anyWhisperRequestWithNickName::has_othernickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void anyWhisperRequestWithNickName::set_has_othernickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void anyWhisperRequestWithNickName::clear_has_othernickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void anyWhisperRequestWithNickName::clear_othernickname() {
  othernickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_othernickname();
}
inline const ::std::string& anyWhisperRequestWithNickName::othernickname() const {
  // @@protoc_insertion_point(field_get:proto.anyWhisperRequestWithNickName.otherNickname)
  return othernickname_.GetNoArena();
}
inline void anyWhisperRequestWithNickName::set_othernickname(const ::std::string& value) {
  set_has_othernickname();
  othernickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.anyWhisperRequestWithNickName.otherNickname)
}
#if LANG_CXX11
inline void anyWhisperRequestWithNickName::set_othernickname(::std::string&& value) {
  set_has_othernickname();
  othernickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.anyWhisperRequestWithNickName.otherNickname)
}
#endif
inline void anyWhisperRequestWithNickName::set_othernickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_othernickname();
  othernickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.anyWhisperRequestWithNickName.otherNickname)
}
inline void anyWhisperRequestWithNickName::set_othernickname(const char* value, size_t size) {
  set_has_othernickname();
  othernickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.anyWhisperRequestWithNickName.otherNickname)
}
inline ::std::string* anyWhisperRequestWithNickName::mutable_othernickname() {
  set_has_othernickname();
  // @@protoc_insertion_point(field_mutable:proto.anyWhisperRequestWithNickName.otherNickname)
  return othernickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* anyWhisperRequestWithNickName::release_othernickname() {
  // @@protoc_insertion_point(field_release:proto.anyWhisperRequestWithNickName.otherNickname)
  clear_has_othernickname();
  return othernickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void anyWhisperRequestWithNickName::set_allocated_othernickname(::std::string* othernickname) {
  if (othernickname != NULL) {
    set_has_othernickname();
  } else {
    clear_has_othernickname();
  }
  othernickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), othernickname);
  // @@protoc_insertion_point(field_set_allocated:proto.anyWhisperRequestWithNickName.otherNickname)
}

// required string chat = 2;
inline bool anyWhisperRequestWithNickName::has_chat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void anyWhisperRequestWithNickName::set_has_chat() {
  _has_bits_[0] |= 0x00000002u;
}
inline void anyWhisperRequestWithNickName::clear_has_chat() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void anyWhisperRequestWithNickName::clear_chat() {
  chat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat();
}
inline const ::std::string& anyWhisperRequestWithNickName::chat() const {
  // @@protoc_insertion_point(field_get:proto.anyWhisperRequestWithNickName.chat)
  return chat_.GetNoArena();
}
inline void anyWhisperRequestWithNickName::set_chat(const ::std::string& value) {
  set_has_chat();
  chat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.anyWhisperRequestWithNickName.chat)
}
#if LANG_CXX11
inline void anyWhisperRequestWithNickName::set_chat(::std::string&& value) {
  set_has_chat();
  chat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.anyWhisperRequestWithNickName.chat)
}
#endif
inline void anyWhisperRequestWithNickName::set_chat(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat();
  chat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.anyWhisperRequestWithNickName.chat)
}
inline void anyWhisperRequestWithNickName::set_chat(const char* value, size_t size) {
  set_has_chat();
  chat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.anyWhisperRequestWithNickName.chat)
}
inline ::std::string* anyWhisperRequestWithNickName::mutable_chat() {
  set_has_chat();
  // @@protoc_insertion_point(field_mutable:proto.anyWhisperRequestWithNickName.chat)
  return chat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* anyWhisperRequestWithNickName::release_chat() {
  // @@protoc_insertion_point(field_release:proto.anyWhisperRequestWithNickName.chat)
  clear_has_chat();
  return chat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void anyWhisperRequestWithNickName::set_allocated_chat(::std::string* chat) {
  if (chat != NULL) {
    set_has_chat();
  } else {
    clear_has_chat();
  }
  chat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat);
  // @@protoc_insertion_point(field_set_allocated:proto.anyWhisperRequestWithNickName.chat)
}

// -------------------------------------------------------------------

// anyWhisperResponse

// required bool success = 1;
inline bool anyWhisperResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void anyWhisperResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void anyWhisperResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void anyWhisperResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool anyWhisperResponse::success() const {
  // @@protoc_insertion_point(field_get:proto.anyWhisperResponse.success)
  return success_;
}
inline void anyWhisperResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.anyWhisperResponse.success)
}

// -------------------------------------------------------------------

// outLobbyLobbylistRequest

// required int32 empty = 1;
inline bool outLobbyLobbylistRequest::has_empty() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void outLobbyLobbylistRequest::set_has_empty() {
  _has_bits_[0] |= 0x00000001u;
}
inline void outLobbyLobbylistRequest::clear_has_empty() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void outLobbyLobbylistRequest::clear_empty() {
  empty_ = 0;
  clear_has_empty();
}
inline ::google::protobuf::int32 outLobbyLobbylistRequest::empty() const {
  // @@protoc_insertion_point(field_get:proto.outLobbyLobbylistRequest.empty)
  return empty_;
}
inline void outLobbyLobbylistRequest::set_empty(::google::protobuf::int32 value) {
  set_has_empty();
  empty_ = value;
  // @@protoc_insertion_point(field_set:proto.outLobbyLobbylistRequest.empty)
}

// -------------------------------------------------------------------

// outLobbyLobbylistResponse

// required bool success = 1;
inline bool outLobbyLobbylistResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void outLobbyLobbylistResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void outLobbyLobbylistResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void outLobbyLobbylistResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool outLobbyLobbylistResponse::success() const {
  // @@protoc_insertion_point(field_get:proto.outLobbyLobbylistResponse.success)
  return success_;
}
inline void outLobbyLobbylistResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.outLobbyLobbylistResponse.success)
}

// repeated .proto.msgLobby lobbyList = 2;
inline int outLobbyLobbylistResponse::lobbylist_size() const {
  return lobbylist_.size();
}
inline void outLobbyLobbylistResponse::clear_lobbylist() {
  lobbylist_.Clear();
}
inline const ::proto::msgLobby& outLobbyLobbylistResponse::lobbylist(int index) const {
  // @@protoc_insertion_point(field_get:proto.outLobbyLobbylistResponse.lobbyList)
  return lobbylist_.Get(index);
}
inline ::proto::msgLobby* outLobbyLobbylistResponse::mutable_lobbylist(int index) {
  // @@protoc_insertion_point(field_mutable:proto.outLobbyLobbylistResponse.lobbyList)
  return lobbylist_.Mutable(index);
}
inline ::proto::msgLobby* outLobbyLobbylistResponse::add_lobbylist() {
  // @@protoc_insertion_point(field_add:proto.outLobbyLobbylistResponse.lobbyList)
  return lobbylist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::msgLobby >*
outLobbyLobbylistResponse::mutable_lobbylist() {
  // @@protoc_insertion_point(field_mutable_list:proto.outLobbyLobbylistResponse.lobbyList)
  return &lobbylist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::msgLobby >&
outLobbyLobbylistResponse::lobbylist() const {
  // @@protoc_insertion_point(field_list:proto.outLobbyLobbylistResponse.lobbyList)
  return lobbylist_;
}

// -------------------------------------------------------------------

// outLobbyEnterLobbyRequest

// required int32 lobbyUID = 1;
inline bool outLobbyEnterLobbyRequest::has_lobbyuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void outLobbyEnterLobbyRequest::set_has_lobbyuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void outLobbyEnterLobbyRequest::clear_has_lobbyuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void outLobbyEnterLobbyRequest::clear_lobbyuid() {
  lobbyuid_ = 0;
  clear_has_lobbyuid();
}
inline ::google::protobuf::int32 outLobbyEnterLobbyRequest::lobbyuid() const {
  // @@protoc_insertion_point(field_get:proto.outLobbyEnterLobbyRequest.lobbyUID)
  return lobbyuid_;
}
inline void outLobbyEnterLobbyRequest::set_lobbyuid(::google::protobuf::int32 value) {
  set_has_lobbyuid();
  lobbyuid_ = value;
  // @@protoc_insertion_point(field_set:proto.outLobbyEnterLobbyRequest.lobbyUID)
}

// -------------------------------------------------------------------

// outLobbyEnterLobbyResponse

// required bool success = 1;
inline bool outLobbyEnterLobbyResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void outLobbyEnterLobbyResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void outLobbyEnterLobbyResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void outLobbyEnterLobbyResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool outLobbyEnterLobbyResponse::success() const {
  // @@protoc_insertion_point(field_get:proto.outLobbyEnterLobbyResponse.success)
  return success_;
}
inline void outLobbyEnterLobbyResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.outLobbyEnterLobbyResponse.success)
}

// required int32 lobbyUID = 2;
inline bool outLobbyEnterLobbyResponse::has_lobbyuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void outLobbyEnterLobbyResponse::set_has_lobbyuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void outLobbyEnterLobbyResponse::clear_has_lobbyuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void outLobbyEnterLobbyResponse::clear_lobbyuid() {
  lobbyuid_ = 0;
  clear_has_lobbyuid();
}
inline ::google::protobuf::int32 outLobbyEnterLobbyResponse::lobbyuid() const {
  // @@protoc_insertion_point(field_get:proto.outLobbyEnterLobbyResponse.lobbyUID)
  return lobbyuid_;
}
inline void outLobbyEnterLobbyResponse::set_lobbyuid(::google::protobuf::int32 value) {
  set_has_lobbyuid();
  lobbyuid_ = value;
  // @@protoc_insertion_point(field_set:proto.outLobbyEnterLobbyResponse.lobbyUID)
}

// -------------------------------------------------------------------

// inLobbyPlayerlistRequest

// required int32 lobbyUID = 1;
inline bool inLobbyPlayerlistRequest::has_lobbyuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void inLobbyPlayerlistRequest::set_has_lobbyuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void inLobbyPlayerlistRequest::clear_has_lobbyuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void inLobbyPlayerlistRequest::clear_lobbyuid() {
  lobbyuid_ = 0;
  clear_has_lobbyuid();
}
inline ::google::protobuf::int32 inLobbyPlayerlistRequest::lobbyuid() const {
  // @@protoc_insertion_point(field_get:proto.inLobbyPlayerlistRequest.lobbyUID)
  return lobbyuid_;
}
inline void inLobbyPlayerlistRequest::set_lobbyuid(::google::protobuf::int32 value) {
  set_has_lobbyuid();
  lobbyuid_ = value;
  // @@protoc_insertion_point(field_set:proto.inLobbyPlayerlistRequest.lobbyUID)
}

// -------------------------------------------------------------------

// inLobbyPlayerlistResponse

// required bool success = 1;
inline bool inLobbyPlayerlistResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void inLobbyPlayerlistResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void inLobbyPlayerlistResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void inLobbyPlayerlistResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool inLobbyPlayerlistResponse::success() const {
  // @@protoc_insertion_point(field_get:proto.inLobbyPlayerlistResponse.success)
  return success_;
}
inline void inLobbyPlayerlistResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.inLobbyPlayerlistResponse.success)
}

// required int32 lobbyUID = 2;
inline bool inLobbyPlayerlistResponse::has_lobbyuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void inLobbyPlayerlistResponse::set_has_lobbyuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void inLobbyPlayerlistResponse::clear_has_lobbyuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void inLobbyPlayerlistResponse::clear_lobbyuid() {
  lobbyuid_ = 0;
  clear_has_lobbyuid();
}
inline ::google::protobuf::int32 inLobbyPlayerlistResponse::lobbyuid() const {
  // @@protoc_insertion_point(field_get:proto.inLobbyPlayerlistResponse.lobbyUID)
  return lobbyuid_;
}
inline void inLobbyPlayerlistResponse::set_lobbyuid(::google::protobuf::int32 value) {
  set_has_lobbyuid();
  lobbyuid_ = value;
  // @@protoc_insertion_point(field_set:proto.inLobbyPlayerlistResponse.lobbyUID)
}

// repeated .proto.msgUserInfo userList = 3;
inline int inLobbyPlayerlistResponse::userlist_size() const {
  return userlist_.size();
}
inline void inLobbyPlayerlistResponse::clear_userlist() {
  userlist_.Clear();
}
inline const ::proto::msgUserInfo& inLobbyPlayerlistResponse::userlist(int index) const {
  // @@protoc_insertion_point(field_get:proto.inLobbyPlayerlistResponse.userList)
  return userlist_.Get(index);
}
inline ::proto::msgUserInfo* inLobbyPlayerlistResponse::mutable_userlist(int index) {
  // @@protoc_insertion_point(field_mutable:proto.inLobbyPlayerlistResponse.userList)
  return userlist_.Mutable(index);
}
inline ::proto::msgUserInfo* inLobbyPlayerlistResponse::add_userlist() {
  // @@protoc_insertion_point(field_add:proto.inLobbyPlayerlistResponse.userList)
  return userlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::msgUserInfo >*
inLobbyPlayerlistResponse::mutable_userlist() {
  // @@protoc_insertion_point(field_mutable_list:proto.inLobbyPlayerlistResponse.userList)
  return &userlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::msgUserInfo >&
inLobbyPlayerlistResponse::userlist() const {
  // @@protoc_insertion_point(field_list:proto.inLobbyPlayerlistResponse.userList)
  return userlist_;
}

// -------------------------------------------------------------------

// inLobbyEnterRoomRequest

// required int32 roomUID = 2;
inline bool inLobbyEnterRoomRequest::has_roomuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void inLobbyEnterRoomRequest::set_has_roomuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void inLobbyEnterRoomRequest::clear_has_roomuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void inLobbyEnterRoomRequest::clear_roomuid() {
  roomuid_ = 0;
  clear_has_roomuid();
}
inline ::google::protobuf::int32 inLobbyEnterRoomRequest::roomuid() const {
  // @@protoc_insertion_point(field_get:proto.inLobbyEnterRoomRequest.roomUID)
  return roomuid_;
}
inline void inLobbyEnterRoomRequest::set_roomuid(::google::protobuf::int32 value) {
  set_has_roomuid();
  roomuid_ = value;
  // @@protoc_insertion_point(field_set:proto.inLobbyEnterRoomRequest.roomUID)
}

// -------------------------------------------------------------------

// inLobbyEnterRoomResponse

// required bool success = 1;
inline bool inLobbyEnterRoomResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void inLobbyEnterRoomResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void inLobbyEnterRoomResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void inLobbyEnterRoomResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool inLobbyEnterRoomResponse::success() const {
  // @@protoc_insertion_point(field_get:proto.inLobbyEnterRoomResponse.success)
  return success_;
}
inline void inLobbyEnterRoomResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.inLobbyEnterRoomResponse.success)
}

// required int32 roomUID = 2;
inline bool inLobbyEnterRoomResponse::has_roomuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void inLobbyEnterRoomResponse::set_has_roomuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void inLobbyEnterRoomResponse::clear_has_roomuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void inLobbyEnterRoomResponse::clear_roomuid() {
  roomuid_ = 0;
  clear_has_roomuid();
}
inline ::google::protobuf::int32 inLobbyEnterRoomResponse::roomuid() const {
  // @@protoc_insertion_point(field_get:proto.inLobbyEnterRoomResponse.roomUID)
  return roomuid_;
}
inline void inLobbyEnterRoomResponse::set_roomuid(::google::protobuf::int32 value) {
  set_has_roomuid();
  roomuid_ = value;
  // @@protoc_insertion_point(field_set:proto.inLobbyEnterRoomResponse.roomUID)
}

// -------------------------------------------------------------------

// inLobbyLeaveLobbyRequest

// required int32 lobbyUID = 1;
inline bool inLobbyLeaveLobbyRequest::has_lobbyuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void inLobbyLeaveLobbyRequest::set_has_lobbyuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void inLobbyLeaveLobbyRequest::clear_has_lobbyuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void inLobbyLeaveLobbyRequest::clear_lobbyuid() {
  lobbyuid_ = 0;
  clear_has_lobbyuid();
}
inline ::google::protobuf::int32 inLobbyLeaveLobbyRequest::lobbyuid() const {
  // @@protoc_insertion_point(field_get:proto.inLobbyLeaveLobbyRequest.lobbyUID)
  return lobbyuid_;
}
inline void inLobbyLeaveLobbyRequest::set_lobbyuid(::google::protobuf::int32 value) {
  set_has_lobbyuid();
  lobbyuid_ = value;
  // @@protoc_insertion_point(field_set:proto.inLobbyLeaveLobbyRequest.lobbyUID)
}

// -------------------------------------------------------------------

// inLobbyLeaveLobbyResponse

// required bool success = 1;
inline bool inLobbyLeaveLobbyResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void inLobbyLeaveLobbyResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void inLobbyLeaveLobbyResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void inLobbyLeaveLobbyResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool inLobbyLeaveLobbyResponse::success() const {
  // @@protoc_insertion_point(field_get:proto.inLobbyLeaveLobbyResponse.success)
  return success_;
}
inline void inLobbyLeaveLobbyResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.inLobbyLeaveLobbyResponse.success)
}

// required int32 lobbyUID = 2;
inline bool inLobbyLeaveLobbyResponse::has_lobbyuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void inLobbyLeaveLobbyResponse::set_has_lobbyuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void inLobbyLeaveLobbyResponse::clear_has_lobbyuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void inLobbyLeaveLobbyResponse::clear_lobbyuid() {
  lobbyuid_ = 0;
  clear_has_lobbyuid();
}
inline ::google::protobuf::int32 inLobbyLeaveLobbyResponse::lobbyuid() const {
  // @@protoc_insertion_point(field_get:proto.inLobbyLeaveLobbyResponse.lobbyUID)
  return lobbyuid_;
}
inline void inLobbyLeaveLobbyResponse::set_lobbyuid(::google::protobuf::int32 value) {
  set_has_lobbyuid();
  lobbyuid_ = value;
  // @@protoc_insertion_point(field_set:proto.inLobbyLeaveLobbyResponse.lobbyUID)
}

// -------------------------------------------------------------------

// inLobbyChatRequest

// required int32 lobbyUID = 1;
inline bool inLobbyChatRequest::has_lobbyuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void inLobbyChatRequest::set_has_lobbyuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void inLobbyChatRequest::clear_has_lobbyuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void inLobbyChatRequest::clear_lobbyuid() {
  lobbyuid_ = 0;
  clear_has_lobbyuid();
}
inline ::google::protobuf::int32 inLobbyChatRequest::lobbyuid() const {
  // @@protoc_insertion_point(field_get:proto.inLobbyChatRequest.lobbyUID)
  return lobbyuid_;
}
inline void inLobbyChatRequest::set_lobbyuid(::google::protobuf::int32 value) {
  set_has_lobbyuid();
  lobbyuid_ = value;
  // @@protoc_insertion_point(field_set:proto.inLobbyChatRequest.lobbyUID)
}

// required string chat = 2;
inline bool inLobbyChatRequest::has_chat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void inLobbyChatRequest::set_has_chat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void inLobbyChatRequest::clear_has_chat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void inLobbyChatRequest::clear_chat() {
  chat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat();
}
inline const ::std::string& inLobbyChatRequest::chat() const {
  // @@protoc_insertion_point(field_get:proto.inLobbyChatRequest.chat)
  return chat_.GetNoArena();
}
inline void inLobbyChatRequest::set_chat(const ::std::string& value) {
  set_has_chat();
  chat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.inLobbyChatRequest.chat)
}
#if LANG_CXX11
inline void inLobbyChatRequest::set_chat(::std::string&& value) {
  set_has_chat();
  chat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.inLobbyChatRequest.chat)
}
#endif
inline void inLobbyChatRequest::set_chat(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat();
  chat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.inLobbyChatRequest.chat)
}
inline void inLobbyChatRequest::set_chat(const char* value, size_t size) {
  set_has_chat();
  chat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.inLobbyChatRequest.chat)
}
inline ::std::string* inLobbyChatRequest::mutable_chat() {
  set_has_chat();
  // @@protoc_insertion_point(field_mutable:proto.inLobbyChatRequest.chat)
  return chat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* inLobbyChatRequest::release_chat() {
  // @@protoc_insertion_point(field_release:proto.inLobbyChatRequest.chat)
  clear_has_chat();
  return chat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void inLobbyChatRequest::set_allocated_chat(::std::string* chat) {
  if (chat != NULL) {
    set_has_chat();
  } else {
    clear_has_chat();
  }
  chat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat);
  // @@protoc_insertion_point(field_set_allocated:proto.inLobbyChatRequest.chat)
}

// -------------------------------------------------------------------

// inLobbyChatResponse

// required bool success = 1;
inline bool inLobbyChatResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void inLobbyChatResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void inLobbyChatResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void inLobbyChatResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool inLobbyChatResponse::success() const {
  // @@protoc_insertion_point(field_get:proto.inLobbyChatResponse.success)
  return success_;
}
inline void inLobbyChatResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.inLobbyChatResponse.success)
}

// -------------------------------------------------------------------

// inLobbyChatBroadcast

// required int32 lobbyUID = 1;
inline bool inLobbyChatBroadcast::has_lobbyuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void inLobbyChatBroadcast::set_has_lobbyuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void inLobbyChatBroadcast::clear_has_lobbyuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void inLobbyChatBroadcast::clear_lobbyuid() {
  lobbyuid_ = 0;
  clear_has_lobbyuid();
}
inline ::google::protobuf::int32 inLobbyChatBroadcast::lobbyuid() const {
  // @@protoc_insertion_point(field_get:proto.inLobbyChatBroadcast.lobbyUID)
  return lobbyuid_;
}
inline void inLobbyChatBroadcast::set_lobbyuid(::google::protobuf::int32 value) {
  set_has_lobbyuid();
  lobbyuid_ = value;
  // @@protoc_insertion_point(field_set:proto.inLobbyChatBroadcast.lobbyUID)
}

// required string chat = 2;
inline bool inLobbyChatBroadcast::has_chat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void inLobbyChatBroadcast::set_has_chat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void inLobbyChatBroadcast::clear_has_chat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void inLobbyChatBroadcast::clear_chat() {
  chat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat();
}
inline const ::std::string& inLobbyChatBroadcast::chat() const {
  // @@protoc_insertion_point(field_get:proto.inLobbyChatBroadcast.chat)
  return chat_.GetNoArena();
}
inline void inLobbyChatBroadcast::set_chat(const ::std::string& value) {
  set_has_chat();
  chat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.inLobbyChatBroadcast.chat)
}
#if LANG_CXX11
inline void inLobbyChatBroadcast::set_chat(::std::string&& value) {
  set_has_chat();
  chat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.inLobbyChatBroadcast.chat)
}
#endif
inline void inLobbyChatBroadcast::set_chat(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat();
  chat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.inLobbyChatBroadcast.chat)
}
inline void inLobbyChatBroadcast::set_chat(const char* value, size_t size) {
  set_has_chat();
  chat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.inLobbyChatBroadcast.chat)
}
inline ::std::string* inLobbyChatBroadcast::mutable_chat() {
  set_has_chat();
  // @@protoc_insertion_point(field_mutable:proto.inLobbyChatBroadcast.chat)
  return chat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* inLobbyChatBroadcast::release_chat() {
  // @@protoc_insertion_point(field_release:proto.inLobbyChatBroadcast.chat)
  clear_has_chat();
  return chat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void inLobbyChatBroadcast::set_allocated_chat(::std::string* chat) {
  if (chat != NULL) {
    set_has_chat();
  } else {
    clear_has_chat();
  }
  chat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat);
  // @@protoc_insertion_point(field_set_allocated:proto.inLobbyChatBroadcast.chat)
}

// -------------------------------------------------------------------

// inRoomChatRequest

// required int32 roomUID = 1;
inline bool inRoomChatRequest::has_roomuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void inRoomChatRequest::set_has_roomuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void inRoomChatRequest::clear_has_roomuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void inRoomChatRequest::clear_roomuid() {
  roomuid_ = 0;
  clear_has_roomuid();
}
inline ::google::protobuf::int32 inRoomChatRequest::roomuid() const {
  // @@protoc_insertion_point(field_get:proto.inRoomChatRequest.roomUID)
  return roomuid_;
}
inline void inRoomChatRequest::set_roomuid(::google::protobuf::int32 value) {
  set_has_roomuid();
  roomuid_ = value;
  // @@protoc_insertion_point(field_set:proto.inRoomChatRequest.roomUID)
}

// required string chat = 2;
inline bool inRoomChatRequest::has_chat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void inRoomChatRequest::set_has_chat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void inRoomChatRequest::clear_has_chat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void inRoomChatRequest::clear_chat() {
  chat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat();
}
inline const ::std::string& inRoomChatRequest::chat() const {
  // @@protoc_insertion_point(field_get:proto.inRoomChatRequest.chat)
  return chat_.GetNoArena();
}
inline void inRoomChatRequest::set_chat(const ::std::string& value) {
  set_has_chat();
  chat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.inRoomChatRequest.chat)
}
#if LANG_CXX11
inline void inRoomChatRequest::set_chat(::std::string&& value) {
  set_has_chat();
  chat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.inRoomChatRequest.chat)
}
#endif
inline void inRoomChatRequest::set_chat(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat();
  chat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.inRoomChatRequest.chat)
}
inline void inRoomChatRequest::set_chat(const char* value, size_t size) {
  set_has_chat();
  chat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.inRoomChatRequest.chat)
}
inline ::std::string* inRoomChatRequest::mutable_chat() {
  set_has_chat();
  // @@protoc_insertion_point(field_mutable:proto.inRoomChatRequest.chat)
  return chat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* inRoomChatRequest::release_chat() {
  // @@protoc_insertion_point(field_release:proto.inRoomChatRequest.chat)
  clear_has_chat();
  return chat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void inRoomChatRequest::set_allocated_chat(::std::string* chat) {
  if (chat != NULL) {
    set_has_chat();
  } else {
    clear_has_chat();
  }
  chat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat);
  // @@protoc_insertion_point(field_set_allocated:proto.inRoomChatRequest.chat)
}

// -------------------------------------------------------------------

// inRoomChatResponse

// required bool success = 1;
inline bool inRoomChatResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void inRoomChatResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void inRoomChatResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void inRoomChatResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool inRoomChatResponse::success() const {
  // @@protoc_insertion_point(field_get:proto.inRoomChatResponse.success)
  return success_;
}
inline void inRoomChatResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.inRoomChatResponse.success)
}

// -------------------------------------------------------------------

// inRoomChatBroadcast

// required int32 roomUID = 1;
inline bool inRoomChatBroadcast::has_roomuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void inRoomChatBroadcast::set_has_roomuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void inRoomChatBroadcast::clear_has_roomuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void inRoomChatBroadcast::clear_roomuid() {
  roomuid_ = 0;
  clear_has_roomuid();
}
inline ::google::protobuf::int32 inRoomChatBroadcast::roomuid() const {
  // @@protoc_insertion_point(field_get:proto.inRoomChatBroadcast.roomUID)
  return roomuid_;
}
inline void inRoomChatBroadcast::set_roomuid(::google::protobuf::int32 value) {
  set_has_roomuid();
  roomuid_ = value;
  // @@protoc_insertion_point(field_set:proto.inRoomChatBroadcast.roomUID)
}

// required string chat = 2;
inline bool inRoomChatBroadcast::has_chat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void inRoomChatBroadcast::set_has_chat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void inRoomChatBroadcast::clear_has_chat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void inRoomChatBroadcast::clear_chat() {
  chat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat();
}
inline const ::std::string& inRoomChatBroadcast::chat() const {
  // @@protoc_insertion_point(field_get:proto.inRoomChatBroadcast.chat)
  return chat_.GetNoArena();
}
inline void inRoomChatBroadcast::set_chat(const ::std::string& value) {
  set_has_chat();
  chat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.inRoomChatBroadcast.chat)
}
#if LANG_CXX11
inline void inRoomChatBroadcast::set_chat(::std::string&& value) {
  set_has_chat();
  chat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.inRoomChatBroadcast.chat)
}
#endif
inline void inRoomChatBroadcast::set_chat(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat();
  chat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.inRoomChatBroadcast.chat)
}
inline void inRoomChatBroadcast::set_chat(const char* value, size_t size) {
  set_has_chat();
  chat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.inRoomChatBroadcast.chat)
}
inline ::std::string* inRoomChatBroadcast::mutable_chat() {
  set_has_chat();
  // @@protoc_insertion_point(field_mutable:proto.inRoomChatBroadcast.chat)
  return chat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* inRoomChatBroadcast::release_chat() {
  // @@protoc_insertion_point(field_release:proto.inRoomChatBroadcast.chat)
  clear_has_chat();
  return chat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void inRoomChatBroadcast::set_allocated_chat(::std::string* chat) {
  if (chat != NULL) {
    set_has_chat();
  } else {
    clear_has_chat();
  }
  chat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat);
  // @@protoc_insertion_point(field_set_allocated:proto.inRoomChatBroadcast.chat)
}

// -------------------------------------------------------------------

// inRoomLeaveRoomRequest

// required int32 roomUID = 1;
inline bool inRoomLeaveRoomRequest::has_roomuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void inRoomLeaveRoomRequest::set_has_roomuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void inRoomLeaveRoomRequest::clear_has_roomuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void inRoomLeaveRoomRequest::clear_roomuid() {
  roomuid_ = 0;
  clear_has_roomuid();
}
inline ::google::protobuf::int32 inRoomLeaveRoomRequest::roomuid() const {
  // @@protoc_insertion_point(field_get:proto.inRoomLeaveRoomRequest.roomUID)
  return roomuid_;
}
inline void inRoomLeaveRoomRequest::set_roomuid(::google::protobuf::int32 value) {
  set_has_roomuid();
  roomuid_ = value;
  // @@protoc_insertion_point(field_set:proto.inRoomLeaveRoomRequest.roomUID)
}

// -------------------------------------------------------------------

// inRoomLeaveRoomResponse

// required bool success = 1;
inline bool inRoomLeaveRoomResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void inRoomLeaveRoomResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void inRoomLeaveRoomResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void inRoomLeaveRoomResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool inRoomLeaveRoomResponse::success() const {
  // @@protoc_insertion_point(field_get:proto.inRoomLeaveRoomResponse.success)
  return success_;
}
inline void inRoomLeaveRoomResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.inRoomLeaveRoomResponse.success)
}

// required int32 roomUID = 2;
inline bool inRoomLeaveRoomResponse::has_roomuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void inRoomLeaveRoomResponse::set_has_roomuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void inRoomLeaveRoomResponse::clear_has_roomuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void inRoomLeaveRoomResponse::clear_roomuid() {
  roomuid_ = 0;
  clear_has_roomuid();
}
inline ::google::protobuf::int32 inRoomLeaveRoomResponse::roomuid() const {
  // @@protoc_insertion_point(field_get:proto.inRoomLeaveRoomResponse.roomUID)
  return roomuid_;
}
inline void inRoomLeaveRoomResponse::set_roomuid(::google::protobuf::int32 value) {
  set_has_roomuid();
  roomuid_ = value;
  // @@protoc_insertion_point(field_set:proto.inRoomLeaveRoomResponse.roomUID)
}

// required int32 lobbyUID = 3;
inline bool inRoomLeaveRoomResponse::has_lobbyuid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void inRoomLeaveRoomResponse::set_has_lobbyuid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void inRoomLeaveRoomResponse::clear_has_lobbyuid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void inRoomLeaveRoomResponse::clear_lobbyuid() {
  lobbyuid_ = 0;
  clear_has_lobbyuid();
}
inline ::google::protobuf::int32 inRoomLeaveRoomResponse::lobbyuid() const {
  // @@protoc_insertion_point(field_get:proto.inRoomLeaveRoomResponse.lobbyUID)
  return lobbyuid_;
}
inline void inRoomLeaveRoomResponse::set_lobbyuid(::google::protobuf::int32 value) {
  set_has_lobbyuid();
  lobbyuid_ = value;
  // @@protoc_insertion_point(field_set:proto.inRoomLeaveRoomResponse.lobbyUID)
}

// -------------------------------------------------------------------

// inRoomReadyRequest

// required bool ready = 1;
inline bool inRoomReadyRequest::has_ready() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void inRoomReadyRequest::set_has_ready() {
  _has_bits_[0] |= 0x00000001u;
}
inline void inRoomReadyRequest::clear_has_ready() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void inRoomReadyRequest::clear_ready() {
  ready_ = false;
  clear_has_ready();
}
inline bool inRoomReadyRequest::ready() const {
  // @@protoc_insertion_point(field_get:proto.inRoomReadyRequest.ready)
  return ready_;
}
inline void inRoomReadyRequest::set_ready(bool value) {
  set_has_ready();
  ready_ = value;
  // @@protoc_insertion_point(field_set:proto.inRoomReadyRequest.ready)
}

// -------------------------------------------------------------------

// inRoomReadyResponse

// required bool success = 1;
inline bool inRoomReadyResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void inRoomReadyResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void inRoomReadyResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void inRoomReadyResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool inRoomReadyResponse::success() const {
  // @@protoc_insertion_point(field_get:proto.inRoomReadyResponse.success)
  return success_;
}
inline void inRoomReadyResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.inRoomReadyResponse.success)
}

// -------------------------------------------------------------------

// inRoomStartRequest

// required bool start = 1;
inline bool inRoomStartRequest::has_start() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void inRoomStartRequest::set_has_start() {
  _has_bits_[0] |= 0x00000001u;
}
inline void inRoomStartRequest::clear_has_start() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void inRoomStartRequest::clear_start() {
  start_ = false;
  clear_has_start();
}
inline bool inRoomStartRequest::start() const {
  // @@protoc_insertion_point(field_get:proto.inRoomStartRequest.start)
  return start_;
}
inline void inRoomStartRequest::set_start(bool value) {
  set_has_start();
  start_ = value;
  // @@protoc_insertion_point(field_set:proto.inRoomStartRequest.start)
}

// -------------------------------------------------------------------

// inRoomStartResponse

// required bool success = 1;
inline bool inRoomStartResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void inRoomStartResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void inRoomStartResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void inRoomStartResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool inRoomStartResponse::success() const {
  // @@protoc_insertion_point(field_get:proto.inRoomStartResponse.success)
  return success_;
}
inline void inRoomStartResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.inRoomStartResponse.success)
}

// -------------------------------------------------------------------

// inRoomStartBroadcast

// required int32 inGameUID = 1;
inline bool inRoomStartBroadcast::has_ingameuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void inRoomStartBroadcast::set_has_ingameuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void inRoomStartBroadcast::clear_has_ingameuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void inRoomStartBroadcast::clear_ingameuid() {
  ingameuid_ = 0;
  clear_has_ingameuid();
}
inline ::google::protobuf::int32 inRoomStartBroadcast::ingameuid() const {
  // @@protoc_insertion_point(field_get:proto.inRoomStartBroadcast.inGameUID)
  return ingameuid_;
}
inline void inRoomStartBroadcast::set_ingameuid(::google::protobuf::int32 value) {
  set_has_ingameuid();
  ingameuid_ = value;
  // @@protoc_insertion_point(field_set:proto.inRoomStartBroadcast.inGameUID)
}

// -------------------------------------------------------------------

// inGameSyncPlayerPosToServer

// required int32 inGameUID = 1;
inline bool inGameSyncPlayerPosToServer::has_ingameuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void inGameSyncPlayerPosToServer::set_has_ingameuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void inGameSyncPlayerPosToServer::clear_has_ingameuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void inGameSyncPlayerPosToServer::clear_ingameuid() {
  ingameuid_ = 0;
  clear_has_ingameuid();
}
inline ::google::protobuf::int32 inGameSyncPlayerPosToServer::ingameuid() const {
  // @@protoc_insertion_point(field_get:proto.inGameSyncPlayerPosToServer.inGameUID)
  return ingameuid_;
}
inline void inGameSyncPlayerPosToServer::set_ingameuid(::google::protobuf::int32 value) {
  set_has_ingameuid();
  ingameuid_ = value;
  // @@protoc_insertion_point(field_set:proto.inGameSyncPlayerPosToServer.inGameUID)
}

// required .proto.msgUserInGameInfo userInGameInfo = 2;
inline bool inGameSyncPlayerPosToServer::has_useringameinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void inGameSyncPlayerPosToServer::set_has_useringameinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void inGameSyncPlayerPosToServer::clear_has_useringameinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void inGameSyncPlayerPosToServer::clear_useringameinfo() {
  if (useringameinfo_ != NULL) useringameinfo_->Clear();
  clear_has_useringameinfo();
}
inline const ::proto::msgUserInGameInfo& inGameSyncPlayerPosToServer::useringameinfo() const {
  const ::proto::msgUserInGameInfo* p = useringameinfo_;
  // @@protoc_insertion_point(field_get:proto.inGameSyncPlayerPosToServer.userInGameInfo)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::msgUserInGameInfo*>(
      &::proto::_msgUserInGameInfo_default_instance_);
}
inline ::proto::msgUserInGameInfo* inGameSyncPlayerPosToServer::release_useringameinfo() {
  // @@protoc_insertion_point(field_release:proto.inGameSyncPlayerPosToServer.userInGameInfo)
  clear_has_useringameinfo();
  ::proto::msgUserInGameInfo* temp = useringameinfo_;
  useringameinfo_ = NULL;
  return temp;
}
inline ::proto::msgUserInGameInfo* inGameSyncPlayerPosToServer::mutable_useringameinfo() {
  set_has_useringameinfo();
  if (useringameinfo_ == NULL) {
    useringameinfo_ = new ::proto::msgUserInGameInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.inGameSyncPlayerPosToServer.userInGameInfo)
  return useringameinfo_;
}
inline void inGameSyncPlayerPosToServer::set_allocated_useringameinfo(::proto::msgUserInGameInfo* useringameinfo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete useringameinfo_;
  }
  if (useringameinfo) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      useringameinfo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, useringameinfo, submessage_arena);
    }
    set_has_useringameinfo();
  } else {
    clear_has_useringameinfo();
  }
  useringameinfo_ = useringameinfo;
  // @@protoc_insertion_point(field_set_allocated:proto.inGameSyncPlayerPosToServer.userInGameInfo)
}

// -------------------------------------------------------------------

// inGameSyncPlayersPosFromServer

// required int32 inGameUID = 1;
inline bool inGameSyncPlayersPosFromServer::has_ingameuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void inGameSyncPlayersPosFromServer::set_has_ingameuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void inGameSyncPlayersPosFromServer::clear_has_ingameuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void inGameSyncPlayersPosFromServer::clear_ingameuid() {
  ingameuid_ = 0;
  clear_has_ingameuid();
}
inline ::google::protobuf::int32 inGameSyncPlayersPosFromServer::ingameuid() const {
  // @@protoc_insertion_point(field_get:proto.inGameSyncPlayersPosFromServer.inGameUID)
  return ingameuid_;
}
inline void inGameSyncPlayersPosFromServer::set_ingameuid(::google::protobuf::int32 value) {
  set_has_ingameuid();
  ingameuid_ = value;
  // @@protoc_insertion_point(field_set:proto.inGameSyncPlayersPosFromServer.inGameUID)
}

// repeated .proto.msgUserInGameInfo usersInGameInfo = 2;
inline int inGameSyncPlayersPosFromServer::usersingameinfo_size() const {
  return usersingameinfo_.size();
}
inline void inGameSyncPlayersPosFromServer::clear_usersingameinfo() {
  usersingameinfo_.Clear();
}
inline const ::proto::msgUserInGameInfo& inGameSyncPlayersPosFromServer::usersingameinfo(int index) const {
  // @@protoc_insertion_point(field_get:proto.inGameSyncPlayersPosFromServer.usersInGameInfo)
  return usersingameinfo_.Get(index);
}
inline ::proto::msgUserInGameInfo* inGameSyncPlayersPosFromServer::mutable_usersingameinfo(int index) {
  // @@protoc_insertion_point(field_mutable:proto.inGameSyncPlayersPosFromServer.usersInGameInfo)
  return usersingameinfo_.Mutable(index);
}
inline ::proto::msgUserInGameInfo* inGameSyncPlayersPosFromServer::add_usersingameinfo() {
  // @@protoc_insertion_point(field_add:proto.inGameSyncPlayersPosFromServer.usersInGameInfo)
  return usersingameinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::msgUserInGameInfo >*
inGameSyncPlayersPosFromServer::mutable_usersingameinfo() {
  // @@protoc_insertion_point(field_mutable_list:proto.inGameSyncPlayersPosFromServer.usersInGameInfo)
  return &usersingameinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::msgUserInGameInfo >&
inGameSyncPlayersPosFromServer::usersingameinfo() const {
  // @@protoc_insertion_point(field_list:proto.inGameSyncPlayersPosFromServer.usersInGameInfo)
  return usersingameinfo_;
}

// -------------------------------------------------------------------

// inGameSyncPlayerStateToServer

// required int32 inGameUID = 1;
inline bool inGameSyncPlayerStateToServer::has_ingameuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void inGameSyncPlayerStateToServer::set_has_ingameuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void inGameSyncPlayerStateToServer::clear_has_ingameuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void inGameSyncPlayerStateToServer::clear_ingameuid() {
  ingameuid_ = 0;
  clear_has_ingameuid();
}
inline ::google::protobuf::int32 inGameSyncPlayerStateToServer::ingameuid() const {
  // @@protoc_insertion_point(field_get:proto.inGameSyncPlayerStateToServer.inGameUID)
  return ingameuid_;
}
inline void inGameSyncPlayerStateToServer::set_ingameuid(::google::protobuf::int32 value) {
  set_has_ingameuid();
  ingameuid_ = value;
  // @@protoc_insertion_point(field_set:proto.inGameSyncPlayerStateToServer.inGameUID)
}

// required .proto.msgUserInGameStateInfo userStateInfo = 2;
inline bool inGameSyncPlayerStateToServer::has_userstateinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void inGameSyncPlayerStateToServer::set_has_userstateinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void inGameSyncPlayerStateToServer::clear_has_userstateinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void inGameSyncPlayerStateToServer::clear_userstateinfo() {
  if (userstateinfo_ != NULL) userstateinfo_->Clear();
  clear_has_userstateinfo();
}
inline const ::proto::msgUserInGameStateInfo& inGameSyncPlayerStateToServer::userstateinfo() const {
  const ::proto::msgUserInGameStateInfo* p = userstateinfo_;
  // @@protoc_insertion_point(field_get:proto.inGameSyncPlayerStateToServer.userStateInfo)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::msgUserInGameStateInfo*>(
      &::proto::_msgUserInGameStateInfo_default_instance_);
}
inline ::proto::msgUserInGameStateInfo* inGameSyncPlayerStateToServer::release_userstateinfo() {
  // @@protoc_insertion_point(field_release:proto.inGameSyncPlayerStateToServer.userStateInfo)
  clear_has_userstateinfo();
  ::proto::msgUserInGameStateInfo* temp = userstateinfo_;
  userstateinfo_ = NULL;
  return temp;
}
inline ::proto::msgUserInGameStateInfo* inGameSyncPlayerStateToServer::mutable_userstateinfo() {
  set_has_userstateinfo();
  if (userstateinfo_ == NULL) {
    userstateinfo_ = new ::proto::msgUserInGameStateInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.inGameSyncPlayerStateToServer.userStateInfo)
  return userstateinfo_;
}
inline void inGameSyncPlayerStateToServer::set_allocated_userstateinfo(::proto::msgUserInGameStateInfo* userstateinfo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete userstateinfo_;
  }
  if (userstateinfo) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      userstateinfo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, userstateinfo, submessage_arena);
    }
    set_has_userstateinfo();
  } else {
    clear_has_userstateinfo();
  }
  userstateinfo_ = userstateinfo;
  // @@protoc_insertion_point(field_set_allocated:proto.inGameSyncPlayerStateToServer.userStateInfo)
}

// -------------------------------------------------------------------

// inGameSyncPlayersStateFromServer

// required int32 inGameUID = 1;
inline bool inGameSyncPlayersStateFromServer::has_ingameuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void inGameSyncPlayersStateFromServer::set_has_ingameuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void inGameSyncPlayersStateFromServer::clear_has_ingameuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void inGameSyncPlayersStateFromServer::clear_ingameuid() {
  ingameuid_ = 0;
  clear_has_ingameuid();
}
inline ::google::protobuf::int32 inGameSyncPlayersStateFromServer::ingameuid() const {
  // @@protoc_insertion_point(field_get:proto.inGameSyncPlayersStateFromServer.inGameUID)
  return ingameuid_;
}
inline void inGameSyncPlayersStateFromServer::set_ingameuid(::google::protobuf::int32 value) {
  set_has_ingameuid();
  ingameuid_ = value;
  // @@protoc_insertion_point(field_set:proto.inGameSyncPlayersStateFromServer.inGameUID)
}

// repeated .proto.msgUserInGameStateInfo userStateInfoList = 2;
inline int inGameSyncPlayersStateFromServer::userstateinfolist_size() const {
  return userstateinfolist_.size();
}
inline void inGameSyncPlayersStateFromServer::clear_userstateinfolist() {
  userstateinfolist_.Clear();
}
inline const ::proto::msgUserInGameStateInfo& inGameSyncPlayersStateFromServer::userstateinfolist(int index) const {
  // @@protoc_insertion_point(field_get:proto.inGameSyncPlayersStateFromServer.userStateInfoList)
  return userstateinfolist_.Get(index);
}
inline ::proto::msgUserInGameStateInfo* inGameSyncPlayersStateFromServer::mutable_userstateinfolist(int index) {
  // @@protoc_insertion_point(field_mutable:proto.inGameSyncPlayersStateFromServer.userStateInfoList)
  return userstateinfolist_.Mutable(index);
}
inline ::proto::msgUserInGameStateInfo* inGameSyncPlayersStateFromServer::add_userstateinfolist() {
  // @@protoc_insertion_point(field_add:proto.inGameSyncPlayersStateFromServer.userStateInfoList)
  return userstateinfolist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::msgUserInGameStateInfo >*
inGameSyncPlayersStateFromServer::mutable_userstateinfolist() {
  // @@protoc_insertion_point(field_mutable_list:proto.inGameSyncPlayersStateFromServer.userStateInfoList)
  return &userstateinfolist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::msgUserInGameStateInfo >&
inGameSyncPlayersStateFromServer::userstateinfolist() const {
  // @@protoc_insertion_point(field_list:proto.inGameSyncPlayersStateFromServer.userStateInfoList)
  return userstateinfolist_;
}

// -------------------------------------------------------------------

// inGameChatRequest

// required int32 inGameUID = 1;
inline bool inGameChatRequest::has_ingameuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void inGameChatRequest::set_has_ingameuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void inGameChatRequest::clear_has_ingameuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void inGameChatRequest::clear_ingameuid() {
  ingameuid_ = 0;
  clear_has_ingameuid();
}
inline ::google::protobuf::int32 inGameChatRequest::ingameuid() const {
  // @@protoc_insertion_point(field_get:proto.inGameChatRequest.inGameUID)
  return ingameuid_;
}
inline void inGameChatRequest::set_ingameuid(::google::protobuf::int32 value) {
  set_has_ingameuid();
  ingameuid_ = value;
  // @@protoc_insertion_point(field_set:proto.inGameChatRequest.inGameUID)
}

// required string chat = 2;
inline bool inGameChatRequest::has_chat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void inGameChatRequest::set_has_chat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void inGameChatRequest::clear_has_chat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void inGameChatRequest::clear_chat() {
  chat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat();
}
inline const ::std::string& inGameChatRequest::chat() const {
  // @@protoc_insertion_point(field_get:proto.inGameChatRequest.chat)
  return chat_.GetNoArena();
}
inline void inGameChatRequest::set_chat(const ::std::string& value) {
  set_has_chat();
  chat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.inGameChatRequest.chat)
}
#if LANG_CXX11
inline void inGameChatRequest::set_chat(::std::string&& value) {
  set_has_chat();
  chat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.inGameChatRequest.chat)
}
#endif
inline void inGameChatRequest::set_chat(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat();
  chat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.inGameChatRequest.chat)
}
inline void inGameChatRequest::set_chat(const char* value, size_t size) {
  set_has_chat();
  chat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.inGameChatRequest.chat)
}
inline ::std::string* inGameChatRequest::mutable_chat() {
  set_has_chat();
  // @@protoc_insertion_point(field_mutable:proto.inGameChatRequest.chat)
  return chat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* inGameChatRequest::release_chat() {
  // @@protoc_insertion_point(field_release:proto.inGameChatRequest.chat)
  clear_has_chat();
  return chat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void inGameChatRequest::set_allocated_chat(::std::string* chat) {
  if (chat != NULL) {
    set_has_chat();
  } else {
    clear_has_chat();
  }
  chat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat);
  // @@protoc_insertion_point(field_set_allocated:proto.inGameChatRequest.chat)
}

// -------------------------------------------------------------------

// inGameChatResponse

// required bool success = 1;
inline bool inGameChatResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void inGameChatResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void inGameChatResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void inGameChatResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool inGameChatResponse::success() const {
  // @@protoc_insertion_point(field_get:proto.inGameChatResponse.success)
  return success_;
}
inline void inGameChatResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.inGameChatResponse.success)
}

// -------------------------------------------------------------------

// inGameChatBroadcast

// required string chat = 1;
inline bool inGameChatBroadcast::has_chat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void inGameChatBroadcast::set_has_chat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void inGameChatBroadcast::clear_has_chat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void inGameChatBroadcast::clear_chat() {
  chat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat();
}
inline const ::std::string& inGameChatBroadcast::chat() const {
  // @@protoc_insertion_point(field_get:proto.inGameChatBroadcast.chat)
  return chat_.GetNoArena();
}
inline void inGameChatBroadcast::set_chat(const ::std::string& value) {
  set_has_chat();
  chat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.inGameChatBroadcast.chat)
}
#if LANG_CXX11
inline void inGameChatBroadcast::set_chat(::std::string&& value) {
  set_has_chat();
  chat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.inGameChatBroadcast.chat)
}
#endif
inline void inGameChatBroadcast::set_chat(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat();
  chat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.inGameChatBroadcast.chat)
}
inline void inGameChatBroadcast::set_chat(const char* value, size_t size) {
  set_has_chat();
  chat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.inGameChatBroadcast.chat)
}
inline ::std::string* inGameChatBroadcast::mutable_chat() {
  set_has_chat();
  // @@protoc_insertion_point(field_mutable:proto.inGameChatBroadcast.chat)
  return chat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* inGameChatBroadcast::release_chat() {
  // @@protoc_insertion_point(field_release:proto.inGameChatBroadcast.chat)
  clear_has_chat();
  return chat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void inGameChatBroadcast::set_allocated_chat(::std::string* chat) {
  if (chat != NULL) {
    set_has_chat();
  } else {
    clear_has_chat();
  }
  chat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat);
  // @@protoc_insertion_point(field_set_allocated:proto.inGameChatBroadcast.chat)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_protoPack_2eproto__INCLUDED
