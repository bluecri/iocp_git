// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protoPack.proto

#include "protoPack.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace proto {
class msgLobbyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<msgLobby>
      _instance;
} _msgLobby_default_instance_;
class msgRoomDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<msgRoom>
      _instance;
} _msgRoom_default_instance_;
class msgGameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<msgGame>
      _instance;
} _msgGame_default_instance_;
class msgUserInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<msgUserInfo>
      _instance;
} _msgUserInfo_default_instance_;
class msgUserInGameInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<msgUserInGameInfo>
      _instance;
} _msgUserInGameInfo_default_instance_;
class msgUserInGameStateInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<msgUserInGameStateInfo>
      _instance;
} _msgUserInGameStateInfo_default_instance_;
class accountCreateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<accountCreate>
      _instance;
} _accountCreate_default_instance_;
class accountLoginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<accountLogin>
      _instance;
} _accountLogin_default_instance_;
class accountLogoutDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<accountLogout>
      _instance;
} _accountLogout_default_instance_;
class anyPlayerInfoSelfRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<anyPlayerInfoSelfRequest>
      _instance;
} _anyPlayerInfoSelfRequest_default_instance_;
class anyPlayerInfoOtherRequestWithIDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<anyPlayerInfoOtherRequestWithID>
      _instance;
} _anyPlayerInfoOtherRequestWithID_default_instance_;
class anyPlayerInfoOtherRequestWithNickNameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<anyPlayerInfoOtherRequestWithNickName>
      _instance;
} _anyPlayerInfoOtherRequestWithNickName_default_instance_;
class anyPlayerInfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<anyPlayerInfoResponse>
      _instance;
} _anyPlayerInfoResponse_default_instance_;
class anyWhisperRequestWithUIDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<anyWhisperRequestWithUID>
      _instance;
} _anyWhisperRequestWithUID_default_instance_;
class anyWhisperRequestWithIDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<anyWhisperRequestWithID>
      _instance;
} _anyWhisperRequestWithID_default_instance_;
class anyWhisperRequestWithNickNameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<anyWhisperRequestWithNickName>
      _instance;
} _anyWhisperRequestWithNickName_default_instance_;
class anyWhisperResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<anyWhisperResponse>
      _instance;
} _anyWhisperResponse_default_instance_;
class outLobbyLobbylistRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<outLobbyLobbylistRequest>
      _instance;
} _outLobbyLobbylistRequest_default_instance_;
class outLobbyLobbylistResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<outLobbyLobbylistResponse>
      _instance;
} _outLobbyLobbylistResponse_default_instance_;
class outLobbyEnterLobbyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<outLobbyEnterLobbyRequest>
      _instance;
} _outLobbyEnterLobbyRequest_default_instance_;
class outLobbyEnterLobbyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<outLobbyEnterLobbyResponse>
      _instance;
} _outLobbyEnterLobbyResponse_default_instance_;
class inLobbyPlayerlistRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<inLobbyPlayerlistRequest>
      _instance;
} _inLobbyPlayerlistRequest_default_instance_;
class inLobbyPlayerlistResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<inLobbyPlayerlistResponse>
      _instance;
} _inLobbyPlayerlistResponse_default_instance_;
class inLobbyEnterRoomRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<inLobbyEnterRoomRequest>
      _instance;
} _inLobbyEnterRoomRequest_default_instance_;
class inLobbyEnterRoomResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<inLobbyEnterRoomResponse>
      _instance;
} _inLobbyEnterRoomResponse_default_instance_;
class inLobbyLeaveLobbyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<inLobbyLeaveLobbyRequest>
      _instance;
} _inLobbyLeaveLobbyRequest_default_instance_;
class inLobbyLeaveLobbyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<inLobbyLeaveLobbyResponse>
      _instance;
} _inLobbyLeaveLobbyResponse_default_instance_;
class inLobbyChatRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<inLobbyChatRequest>
      _instance;
} _inLobbyChatRequest_default_instance_;
class inLobbyChatResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<inLobbyChatResponse>
      _instance;
} _inLobbyChatResponse_default_instance_;
class inLobbyChatBroadcastDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<inLobbyChatBroadcast>
      _instance;
} _inLobbyChatBroadcast_default_instance_;
class inRoomChatRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<inRoomChatRequest>
      _instance;
} _inRoomChatRequest_default_instance_;
class inRoomChatResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<inRoomChatResponse>
      _instance;
} _inRoomChatResponse_default_instance_;
class inRoomChatBroadcastDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<inRoomChatBroadcast>
      _instance;
} _inRoomChatBroadcast_default_instance_;
class inRoomLeaveRoomRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<inRoomLeaveRoomRequest>
      _instance;
} _inRoomLeaveRoomRequest_default_instance_;
class inRoomLeaveRoomResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<inRoomLeaveRoomResponse>
      _instance;
} _inRoomLeaveRoomResponse_default_instance_;
class inRoomReadyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<inRoomReadyRequest>
      _instance;
} _inRoomReadyRequest_default_instance_;
class inRoomReadyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<inRoomReadyResponse>
      _instance;
} _inRoomReadyResponse_default_instance_;
class inRoomStartRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<inRoomStartRequest>
      _instance;
} _inRoomStartRequest_default_instance_;
class inRoomStartResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<inRoomStartResponse>
      _instance;
} _inRoomStartResponse_default_instance_;
class inRoomStartBroadcastDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<inRoomStartBroadcast>
      _instance;
} _inRoomStartBroadcast_default_instance_;
class inGameSyncPlayerPosToServerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<inGameSyncPlayerPosToServer>
      _instance;
} _inGameSyncPlayerPosToServer_default_instance_;
class inGameSyncPlayersPosFromServerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<inGameSyncPlayersPosFromServer>
      _instance;
} _inGameSyncPlayersPosFromServer_default_instance_;
class inGameSyncPlayerStateToServerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<inGameSyncPlayerStateToServer>
      _instance;
} _inGameSyncPlayerStateToServer_default_instance_;
class inGameSyncPlayersStateFromServerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<inGameSyncPlayersStateFromServer>
      _instance;
} _inGameSyncPlayersStateFromServer_default_instance_;
class inGameChatRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<inGameChatRequest>
      _instance;
} _inGameChatRequest_default_instance_;
class inGameChatResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<inGameChatResponse>
      _instance;
} _inGameChatResponse_default_instance_;
class inGameChatBroadcastDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<inGameChatBroadcast>
      _instance;
} _inGameChatBroadcast_default_instance_;
}  // namespace proto
namespace protobuf_protoPack_2eproto {
void InitDefaultsmsgLobbyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_msgLobby_default_instance_;
    new (ptr) ::proto::msgLobby();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::msgLobby::InitAsDefaultInstance();
}

void InitDefaultsmsgLobby() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsmsgLobbyImpl);
}

void InitDefaultsmsgRoomImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_msgRoom_default_instance_;
    new (ptr) ::proto::msgRoom();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::msgRoom::InitAsDefaultInstance();
}

void InitDefaultsmsgRoom() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsmsgRoomImpl);
}

void InitDefaultsmsgGameImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_protoPack_2eproto::InitDefaultsmsgUserInfo();
  {
    void* ptr = &::proto::_msgGame_default_instance_;
    new (ptr) ::proto::msgGame();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::msgGame::InitAsDefaultInstance();
}

void InitDefaultsmsgGame() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsmsgGameImpl);
}

void InitDefaultsmsgUserInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_msgUserInfo_default_instance_;
    new (ptr) ::proto::msgUserInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::msgUserInfo::InitAsDefaultInstance();
}

void InitDefaultsmsgUserInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsmsgUserInfoImpl);
}

void InitDefaultsmsgUserInGameInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_msgUserInGameInfo_default_instance_;
    new (ptr) ::proto::msgUserInGameInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::msgUserInGameInfo::InitAsDefaultInstance();
}

void InitDefaultsmsgUserInGameInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsmsgUserInGameInfoImpl);
}

void InitDefaultsmsgUserInGameStateInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_msgUserInGameStateInfo_default_instance_;
    new (ptr) ::proto::msgUserInGameStateInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::msgUserInGameStateInfo::InitAsDefaultInstance();
}

void InitDefaultsmsgUserInGameStateInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsmsgUserInGameStateInfoImpl);
}

void InitDefaultsaccountCreateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_accountCreate_default_instance_;
    new (ptr) ::proto::accountCreate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::accountCreate::InitAsDefaultInstance();
}

void InitDefaultsaccountCreate() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsaccountCreateImpl);
}

void InitDefaultsaccountLoginImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_accountLogin_default_instance_;
    new (ptr) ::proto::accountLogin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::accountLogin::InitAsDefaultInstance();
}

void InitDefaultsaccountLogin() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsaccountLoginImpl);
}

void InitDefaultsaccountLogoutImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_accountLogout_default_instance_;
    new (ptr) ::proto::accountLogout();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::accountLogout::InitAsDefaultInstance();
}

void InitDefaultsaccountLogout() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsaccountLogoutImpl);
}

void InitDefaultsanyPlayerInfoSelfRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_anyPlayerInfoSelfRequest_default_instance_;
    new (ptr) ::proto::anyPlayerInfoSelfRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::anyPlayerInfoSelfRequest::InitAsDefaultInstance();
}

void InitDefaultsanyPlayerInfoSelfRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsanyPlayerInfoSelfRequestImpl);
}

void InitDefaultsanyPlayerInfoOtherRequestWithIDImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_anyPlayerInfoOtherRequestWithID_default_instance_;
    new (ptr) ::proto::anyPlayerInfoOtherRequestWithID();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::anyPlayerInfoOtherRequestWithID::InitAsDefaultInstance();
}

void InitDefaultsanyPlayerInfoOtherRequestWithID() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsanyPlayerInfoOtherRequestWithIDImpl);
}

void InitDefaultsanyPlayerInfoOtherRequestWithNickNameImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_anyPlayerInfoOtherRequestWithNickName_default_instance_;
    new (ptr) ::proto::anyPlayerInfoOtherRequestWithNickName();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::anyPlayerInfoOtherRequestWithNickName::InitAsDefaultInstance();
}

void InitDefaultsanyPlayerInfoOtherRequestWithNickName() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsanyPlayerInfoOtherRequestWithNickNameImpl);
}

void InitDefaultsanyPlayerInfoResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_protoPack_2eproto::InitDefaultsmsgUserInfo();
  {
    void* ptr = &::proto::_anyPlayerInfoResponse_default_instance_;
    new (ptr) ::proto::anyPlayerInfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::anyPlayerInfoResponse::InitAsDefaultInstance();
}

void InitDefaultsanyPlayerInfoResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsanyPlayerInfoResponseImpl);
}

void InitDefaultsanyWhisperRequestWithUIDImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_anyWhisperRequestWithUID_default_instance_;
    new (ptr) ::proto::anyWhisperRequestWithUID();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::anyWhisperRequestWithUID::InitAsDefaultInstance();
}

void InitDefaultsanyWhisperRequestWithUID() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsanyWhisperRequestWithUIDImpl);
}

void InitDefaultsanyWhisperRequestWithIDImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_anyWhisperRequestWithID_default_instance_;
    new (ptr) ::proto::anyWhisperRequestWithID();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::anyWhisperRequestWithID::InitAsDefaultInstance();
}

void InitDefaultsanyWhisperRequestWithID() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsanyWhisperRequestWithIDImpl);
}

void InitDefaultsanyWhisperRequestWithNickNameImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_anyWhisperRequestWithNickName_default_instance_;
    new (ptr) ::proto::anyWhisperRequestWithNickName();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::anyWhisperRequestWithNickName::InitAsDefaultInstance();
}

void InitDefaultsanyWhisperRequestWithNickName() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsanyWhisperRequestWithNickNameImpl);
}

void InitDefaultsanyWhisperResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_anyWhisperResponse_default_instance_;
    new (ptr) ::proto::anyWhisperResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::anyWhisperResponse::InitAsDefaultInstance();
}

void InitDefaultsanyWhisperResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsanyWhisperResponseImpl);
}

void InitDefaultsoutLobbyLobbylistRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_outLobbyLobbylistRequest_default_instance_;
    new (ptr) ::proto::outLobbyLobbylistRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::outLobbyLobbylistRequest::InitAsDefaultInstance();
}

void InitDefaultsoutLobbyLobbylistRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsoutLobbyLobbylistRequestImpl);
}

void InitDefaultsoutLobbyLobbylistResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_protoPack_2eproto::InitDefaultsmsgLobby();
  {
    void* ptr = &::proto::_outLobbyLobbylistResponse_default_instance_;
    new (ptr) ::proto::outLobbyLobbylistResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::outLobbyLobbylistResponse::InitAsDefaultInstance();
}

void InitDefaultsoutLobbyLobbylistResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsoutLobbyLobbylistResponseImpl);
}

void InitDefaultsoutLobbyEnterLobbyRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_outLobbyEnterLobbyRequest_default_instance_;
    new (ptr) ::proto::outLobbyEnterLobbyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::outLobbyEnterLobbyRequest::InitAsDefaultInstance();
}

void InitDefaultsoutLobbyEnterLobbyRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsoutLobbyEnterLobbyRequestImpl);
}

void InitDefaultsoutLobbyEnterLobbyResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_outLobbyEnterLobbyResponse_default_instance_;
    new (ptr) ::proto::outLobbyEnterLobbyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::outLobbyEnterLobbyResponse::InitAsDefaultInstance();
}

void InitDefaultsoutLobbyEnterLobbyResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsoutLobbyEnterLobbyResponseImpl);
}

void InitDefaultsinLobbyPlayerlistRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_inLobbyPlayerlistRequest_default_instance_;
    new (ptr) ::proto::inLobbyPlayerlistRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::inLobbyPlayerlistRequest::InitAsDefaultInstance();
}

void InitDefaultsinLobbyPlayerlistRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsinLobbyPlayerlistRequestImpl);
}

void InitDefaultsinLobbyPlayerlistResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_protoPack_2eproto::InitDefaultsmsgUserInfo();
  {
    void* ptr = &::proto::_inLobbyPlayerlistResponse_default_instance_;
    new (ptr) ::proto::inLobbyPlayerlistResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::inLobbyPlayerlistResponse::InitAsDefaultInstance();
}

void InitDefaultsinLobbyPlayerlistResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsinLobbyPlayerlistResponseImpl);
}

void InitDefaultsinLobbyEnterRoomRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_inLobbyEnterRoomRequest_default_instance_;
    new (ptr) ::proto::inLobbyEnterRoomRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::inLobbyEnterRoomRequest::InitAsDefaultInstance();
}

void InitDefaultsinLobbyEnterRoomRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsinLobbyEnterRoomRequestImpl);
}

void InitDefaultsinLobbyEnterRoomResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_inLobbyEnterRoomResponse_default_instance_;
    new (ptr) ::proto::inLobbyEnterRoomResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::inLobbyEnterRoomResponse::InitAsDefaultInstance();
}

void InitDefaultsinLobbyEnterRoomResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsinLobbyEnterRoomResponseImpl);
}

void InitDefaultsinLobbyLeaveLobbyRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_inLobbyLeaveLobbyRequest_default_instance_;
    new (ptr) ::proto::inLobbyLeaveLobbyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::inLobbyLeaveLobbyRequest::InitAsDefaultInstance();
}

void InitDefaultsinLobbyLeaveLobbyRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsinLobbyLeaveLobbyRequestImpl);
}

void InitDefaultsinLobbyLeaveLobbyResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_inLobbyLeaveLobbyResponse_default_instance_;
    new (ptr) ::proto::inLobbyLeaveLobbyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::inLobbyLeaveLobbyResponse::InitAsDefaultInstance();
}

void InitDefaultsinLobbyLeaveLobbyResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsinLobbyLeaveLobbyResponseImpl);
}

void InitDefaultsinLobbyChatRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_inLobbyChatRequest_default_instance_;
    new (ptr) ::proto::inLobbyChatRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::inLobbyChatRequest::InitAsDefaultInstance();
}

void InitDefaultsinLobbyChatRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsinLobbyChatRequestImpl);
}

void InitDefaultsinLobbyChatResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_inLobbyChatResponse_default_instance_;
    new (ptr) ::proto::inLobbyChatResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::inLobbyChatResponse::InitAsDefaultInstance();
}

void InitDefaultsinLobbyChatResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsinLobbyChatResponseImpl);
}

void InitDefaultsinLobbyChatBroadcastImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_inLobbyChatBroadcast_default_instance_;
    new (ptr) ::proto::inLobbyChatBroadcast();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::inLobbyChatBroadcast::InitAsDefaultInstance();
}

void InitDefaultsinLobbyChatBroadcast() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsinLobbyChatBroadcastImpl);
}

void InitDefaultsinRoomChatRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_inRoomChatRequest_default_instance_;
    new (ptr) ::proto::inRoomChatRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::inRoomChatRequest::InitAsDefaultInstance();
}

void InitDefaultsinRoomChatRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsinRoomChatRequestImpl);
}

void InitDefaultsinRoomChatResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_inRoomChatResponse_default_instance_;
    new (ptr) ::proto::inRoomChatResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::inRoomChatResponse::InitAsDefaultInstance();
}

void InitDefaultsinRoomChatResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsinRoomChatResponseImpl);
}

void InitDefaultsinRoomChatBroadcastImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_inRoomChatBroadcast_default_instance_;
    new (ptr) ::proto::inRoomChatBroadcast();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::inRoomChatBroadcast::InitAsDefaultInstance();
}

void InitDefaultsinRoomChatBroadcast() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsinRoomChatBroadcastImpl);
}

void InitDefaultsinRoomLeaveRoomRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_inRoomLeaveRoomRequest_default_instance_;
    new (ptr) ::proto::inRoomLeaveRoomRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::inRoomLeaveRoomRequest::InitAsDefaultInstance();
}

void InitDefaultsinRoomLeaveRoomRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsinRoomLeaveRoomRequestImpl);
}

void InitDefaultsinRoomLeaveRoomResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_inRoomLeaveRoomResponse_default_instance_;
    new (ptr) ::proto::inRoomLeaveRoomResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::inRoomLeaveRoomResponse::InitAsDefaultInstance();
}

void InitDefaultsinRoomLeaveRoomResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsinRoomLeaveRoomResponseImpl);
}

void InitDefaultsinRoomReadyRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_inRoomReadyRequest_default_instance_;
    new (ptr) ::proto::inRoomReadyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::inRoomReadyRequest::InitAsDefaultInstance();
}

void InitDefaultsinRoomReadyRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsinRoomReadyRequestImpl);
}

void InitDefaultsinRoomReadyResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_inRoomReadyResponse_default_instance_;
    new (ptr) ::proto::inRoomReadyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::inRoomReadyResponse::InitAsDefaultInstance();
}

void InitDefaultsinRoomReadyResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsinRoomReadyResponseImpl);
}

void InitDefaultsinRoomStartRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_inRoomStartRequest_default_instance_;
    new (ptr) ::proto::inRoomStartRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::inRoomStartRequest::InitAsDefaultInstance();
}

void InitDefaultsinRoomStartRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsinRoomStartRequestImpl);
}

void InitDefaultsinRoomStartResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_inRoomStartResponse_default_instance_;
    new (ptr) ::proto::inRoomStartResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::inRoomStartResponse::InitAsDefaultInstance();
}

void InitDefaultsinRoomStartResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsinRoomStartResponseImpl);
}

void InitDefaultsinRoomStartBroadcastImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_inRoomStartBroadcast_default_instance_;
    new (ptr) ::proto::inRoomStartBroadcast();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::inRoomStartBroadcast::InitAsDefaultInstance();
}

void InitDefaultsinRoomStartBroadcast() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsinRoomStartBroadcastImpl);
}

void InitDefaultsinGameSyncPlayerPosToServerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_protoPack_2eproto::InitDefaultsmsgUserInGameInfo();
  {
    void* ptr = &::proto::_inGameSyncPlayerPosToServer_default_instance_;
    new (ptr) ::proto::inGameSyncPlayerPosToServer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::inGameSyncPlayerPosToServer::InitAsDefaultInstance();
}

void InitDefaultsinGameSyncPlayerPosToServer() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsinGameSyncPlayerPosToServerImpl);
}

void InitDefaultsinGameSyncPlayersPosFromServerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_protoPack_2eproto::InitDefaultsmsgUserInGameInfo();
  {
    void* ptr = &::proto::_inGameSyncPlayersPosFromServer_default_instance_;
    new (ptr) ::proto::inGameSyncPlayersPosFromServer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::inGameSyncPlayersPosFromServer::InitAsDefaultInstance();
}

void InitDefaultsinGameSyncPlayersPosFromServer() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsinGameSyncPlayersPosFromServerImpl);
}

void InitDefaultsinGameSyncPlayerStateToServerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_protoPack_2eproto::InitDefaultsmsgUserInGameStateInfo();
  {
    void* ptr = &::proto::_inGameSyncPlayerStateToServer_default_instance_;
    new (ptr) ::proto::inGameSyncPlayerStateToServer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::inGameSyncPlayerStateToServer::InitAsDefaultInstance();
}

void InitDefaultsinGameSyncPlayerStateToServer() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsinGameSyncPlayerStateToServerImpl);
}

void InitDefaultsinGameSyncPlayersStateFromServerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_protoPack_2eproto::InitDefaultsmsgUserInGameStateInfo();
  {
    void* ptr = &::proto::_inGameSyncPlayersStateFromServer_default_instance_;
    new (ptr) ::proto::inGameSyncPlayersStateFromServer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::inGameSyncPlayersStateFromServer::InitAsDefaultInstance();
}

void InitDefaultsinGameSyncPlayersStateFromServer() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsinGameSyncPlayersStateFromServerImpl);
}

void InitDefaultsinGameChatRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_inGameChatRequest_default_instance_;
    new (ptr) ::proto::inGameChatRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::inGameChatRequest::InitAsDefaultInstance();
}

void InitDefaultsinGameChatRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsinGameChatRequestImpl);
}

void InitDefaultsinGameChatResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_inGameChatResponse_default_instance_;
    new (ptr) ::proto::inGameChatResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::inGameChatResponse::InitAsDefaultInstance();
}

void InitDefaultsinGameChatResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsinGameChatResponseImpl);
}

void InitDefaultsinGameChatBroadcastImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto::_inGameChatBroadcast_default_instance_;
    new (ptr) ::proto::inGameChatBroadcast();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::inGameChatBroadcast::InitAsDefaultInstance();
}

void InitDefaultsinGameChatBroadcast() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsinGameChatBroadcastImpl);
}

::google::protobuf::Metadata file_level_metadata[47];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgLobby, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgLobby, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgLobby, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgLobby, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgLobby, usernum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgLobby, useramaxnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgLobby, closed_),
  1,
  0,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgRoom, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgRoom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgRoom, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgRoom, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgRoom, usernum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgRoom, useramaxnum_),
  1,
  0,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgGame, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgGame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgGame, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgGame, number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgGame, userlist_),
  1,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgUserInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgUserInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgUserInfo, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgUserInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgUserInfo, nickname_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgUserInGameInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgUserInGameInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgUserInGameInfo, useruid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgUserInGameInfo, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgUserInGameInfo, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgUserInGameInfo, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgUserInGameInfo, qx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgUserInGameInfo, qy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgUserInGameInfo, qz_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgUserInGameInfo, qw_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgUserInGameStateInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgUserInGameStateInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgUserInGameStateInfo, useruid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::msgUserInGameStateInfo, statebit32_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::accountCreate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::accountCreate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::accountCreate, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::accountCreate, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::accountCreate, nickname_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::accountLogin, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::accountLogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::accountLogin, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::accountLogin, password_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::accountLogout, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::accountLogout, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::accountLogout, empty_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::anyPlayerInfoSelfRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::anyPlayerInfoSelfRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::anyPlayerInfoSelfRequest, empty_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::anyPlayerInfoOtherRequestWithID, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::anyPlayerInfoOtherRequestWithID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::anyPlayerInfoOtherRequestWithID, otherid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::anyPlayerInfoOtherRequestWithNickName, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::anyPlayerInfoOtherRequestWithNickName, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::anyPlayerInfoOtherRequestWithNickName, othernickname_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::anyPlayerInfoResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::anyPlayerInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::anyPlayerInfoResponse, userinfo_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::anyWhisperRequestWithUID, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::anyWhisperRequestWithUID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::anyWhisperRequestWithUID, otheruid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::anyWhisperRequestWithUID, chat_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::anyWhisperRequestWithID, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::anyWhisperRequestWithID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::anyWhisperRequestWithID, otherid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::anyWhisperRequestWithID, chat_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::anyWhisperRequestWithNickName, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::anyWhisperRequestWithNickName, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::anyWhisperRequestWithNickName, othernickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::anyWhisperRequestWithNickName, chat_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::anyWhisperResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::anyWhisperResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::anyWhisperResponse, success_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::outLobbyLobbylistRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::outLobbyLobbylistRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::outLobbyLobbylistRequest, empty_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::outLobbyLobbylistResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::outLobbyLobbylistResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::outLobbyLobbylistResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::outLobbyLobbylistResponse, lobbylist_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::outLobbyEnterLobbyRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::outLobbyEnterLobbyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::outLobbyEnterLobbyRequest, lobbyuid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::outLobbyEnterLobbyResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::outLobbyEnterLobbyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::outLobbyEnterLobbyResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::outLobbyEnterLobbyResponse, lobbyuid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inLobbyPlayerlistRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inLobbyPlayerlistRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inLobbyPlayerlistRequest, lobbyuid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inLobbyPlayerlistResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inLobbyPlayerlistResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inLobbyPlayerlistResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inLobbyPlayerlistResponse, lobbyuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inLobbyPlayerlistResponse, userlist_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inLobbyEnterRoomRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inLobbyEnterRoomRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inLobbyEnterRoomRequest, roomuid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inLobbyEnterRoomResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inLobbyEnterRoomResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inLobbyEnterRoomResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inLobbyEnterRoomResponse, roomuid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inLobbyLeaveLobbyRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inLobbyLeaveLobbyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inLobbyLeaveLobbyRequest, lobbyuid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inLobbyLeaveLobbyResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inLobbyLeaveLobbyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inLobbyLeaveLobbyResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inLobbyLeaveLobbyResponse, lobbyuid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inLobbyChatRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inLobbyChatRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inLobbyChatRequest, lobbyuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inLobbyChatRequest, chat_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inLobbyChatResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inLobbyChatResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inLobbyChatResponse, success_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inLobbyChatBroadcast, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inLobbyChatBroadcast, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inLobbyChatBroadcast, lobbyuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inLobbyChatBroadcast, chat_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inRoomChatRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inRoomChatRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inRoomChatRequest, roomuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inRoomChatRequest, chat_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inRoomChatResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inRoomChatResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inRoomChatResponse, success_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inRoomChatBroadcast, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inRoomChatBroadcast, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inRoomChatBroadcast, roomuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inRoomChatBroadcast, chat_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inRoomLeaveRoomRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inRoomLeaveRoomRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inRoomLeaveRoomRequest, roomuid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inRoomLeaveRoomResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inRoomLeaveRoomResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inRoomLeaveRoomResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inRoomLeaveRoomResponse, roomuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inRoomLeaveRoomResponse, lobbyuid_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inRoomReadyRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inRoomReadyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inRoomReadyRequest, ready_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inRoomReadyResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inRoomReadyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inRoomReadyResponse, success_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inRoomStartRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inRoomStartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inRoomStartRequest, start_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inRoomStartResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inRoomStartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inRoomStartResponse, success_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inRoomStartBroadcast, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inRoomStartBroadcast, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inRoomStartBroadcast, ingameuid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inGameSyncPlayerPosToServer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inGameSyncPlayerPosToServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inGameSyncPlayerPosToServer, ingameuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inGameSyncPlayerPosToServer, useringameinfo_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inGameSyncPlayersPosFromServer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inGameSyncPlayersPosFromServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inGameSyncPlayersPosFromServer, ingameuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inGameSyncPlayersPosFromServer, usersingameinfo_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inGameSyncPlayerStateToServer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inGameSyncPlayerStateToServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inGameSyncPlayerStateToServer, ingameuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inGameSyncPlayerStateToServer, userstateinfo_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inGameSyncPlayersStateFromServer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inGameSyncPlayersStateFromServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inGameSyncPlayersStateFromServer, ingameuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inGameSyncPlayersStateFromServer, userstateinfolist_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inGameChatRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inGameChatRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inGameChatRequest, ingameuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inGameChatRequest, chat_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inGameChatResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inGameChatResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inGameChatResponse, success_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inGameChatBroadcast, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inGameChatBroadcast, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::inGameChatBroadcast, chat_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(::proto::msgLobby)},
  { 15, 24, sizeof(::proto::msgRoom)},
  { 28, 36, sizeof(::proto::msgGame)},
  { 39, 47, sizeof(::proto::msgUserInfo)},
  { 50, 63, sizeof(::proto::msgUserInGameInfo)},
  { 71, 78, sizeof(::proto::msgUserInGameStateInfo)},
  { 80, 88, sizeof(::proto::accountCreate)},
  { 91, 98, sizeof(::proto::accountLogin)},
  { 100, 106, sizeof(::proto::accountLogout)},
  { 107, 113, sizeof(::proto::anyPlayerInfoSelfRequest)},
  { 114, 120, sizeof(::proto::anyPlayerInfoOtherRequestWithID)},
  { 121, 127, sizeof(::proto::anyPlayerInfoOtherRequestWithNickName)},
  { 128, 134, sizeof(::proto::anyPlayerInfoResponse)},
  { 135, 142, sizeof(::proto::anyWhisperRequestWithUID)},
  { 144, 151, sizeof(::proto::anyWhisperRequestWithID)},
  { 153, 160, sizeof(::proto::anyWhisperRequestWithNickName)},
  { 162, 168, sizeof(::proto::anyWhisperResponse)},
  { 169, 175, sizeof(::proto::outLobbyLobbylistRequest)},
  { 176, 183, sizeof(::proto::outLobbyLobbylistResponse)},
  { 185, 191, sizeof(::proto::outLobbyEnterLobbyRequest)},
  { 192, 199, sizeof(::proto::outLobbyEnterLobbyResponse)},
  { 201, 207, sizeof(::proto::inLobbyPlayerlistRequest)},
  { 208, 216, sizeof(::proto::inLobbyPlayerlistResponse)},
  { 219, 225, sizeof(::proto::inLobbyEnterRoomRequest)},
  { 226, 233, sizeof(::proto::inLobbyEnterRoomResponse)},
  { 235, 241, sizeof(::proto::inLobbyLeaveLobbyRequest)},
  { 242, 249, sizeof(::proto::inLobbyLeaveLobbyResponse)},
  { 251, 258, sizeof(::proto::inLobbyChatRequest)},
  { 260, 266, sizeof(::proto::inLobbyChatResponse)},
  { 267, 274, sizeof(::proto::inLobbyChatBroadcast)},
  { 276, 283, sizeof(::proto::inRoomChatRequest)},
  { 285, 291, sizeof(::proto::inRoomChatResponse)},
  { 292, 299, sizeof(::proto::inRoomChatBroadcast)},
  { 301, 307, sizeof(::proto::inRoomLeaveRoomRequest)},
  { 308, 316, sizeof(::proto::inRoomLeaveRoomResponse)},
  { 319, 325, sizeof(::proto::inRoomReadyRequest)},
  { 326, 332, sizeof(::proto::inRoomReadyResponse)},
  { 333, 339, sizeof(::proto::inRoomStartRequest)},
  { 340, 346, sizeof(::proto::inRoomStartResponse)},
  { 347, 353, sizeof(::proto::inRoomStartBroadcast)},
  { 354, 361, sizeof(::proto::inGameSyncPlayerPosToServer)},
  { 363, 370, sizeof(::proto::inGameSyncPlayersPosFromServer)},
  { 372, 379, sizeof(::proto::inGameSyncPlayerStateToServer)},
  { 381, 388, sizeof(::proto::inGameSyncPlayersStateFromServer)},
  { 390, 397, sizeof(::proto::inGameChatRequest)},
  { 399, 405, sizeof(::proto::inGameChatResponse)},
  { 406, 412, sizeof(::proto::inGameChatBroadcast)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_msgLobby_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_msgRoom_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_msgGame_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_msgUserInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_msgUserInGameInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_msgUserInGameStateInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_accountCreate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_accountLogin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_accountLogout_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_anyPlayerInfoSelfRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_anyPlayerInfoOtherRequestWithID_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_anyPlayerInfoOtherRequestWithNickName_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_anyPlayerInfoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_anyWhisperRequestWithUID_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_anyWhisperRequestWithID_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_anyWhisperRequestWithNickName_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_anyWhisperResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_outLobbyLobbylistRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_outLobbyLobbylistResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_outLobbyEnterLobbyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_outLobbyEnterLobbyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_inLobbyPlayerlistRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_inLobbyPlayerlistResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_inLobbyEnterRoomRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_inLobbyEnterRoomResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_inLobbyLeaveLobbyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_inLobbyLeaveLobbyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_inLobbyChatRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_inLobbyChatResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_inLobbyChatBroadcast_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_inRoomChatRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_inRoomChatResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_inRoomChatBroadcast_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_inRoomLeaveRoomRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_inRoomLeaveRoomResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_inRoomReadyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_inRoomReadyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_inRoomStartRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_inRoomStartResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_inRoomStartBroadcast_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_inGameSyncPlayerPosToServer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_inGameSyncPlayersPosFromServer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_inGameSyncPlayerStateToServer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_inGameSyncPlayersStateFromServer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_inGameChatRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_inGameChatResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_inGameChatBroadcast_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "protoPack.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 47);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017protoPack.proto\022\005proto\"[\n\010msgLobby\022\013\n\003"
      "uid\030\001 \002(\005\022\014\n\004name\030\002 \002(\t\022\017\n\007userNum\030\003 \002(\005"
      "\022\023\n\013useraMaxNum\030\004 \002(\005\022\016\n\006closed\030\005 \002(\010\"J\n"
      "\007msgRoom\022\013\n\003uid\030\001 \002(\005\022\014\n\004name\030\002 \002(\t\022\017\n\007u"
      "serNum\030\003 \002(\005\022\023\n\013useraMaxNum\030\004 \002(\005\"L\n\007msg"
      "Game\022\013\n\003uid\030\001 \002(\005\022\016\n\006number\030\002 \002(\t\022$\n\010use"
      "rList\030\003 \003(\0132\022.proto.msgUserInfo\"8\n\013msgUs"
      "erInfo\022\013\n\003uid\030\001 \002(\005\022\n\n\002id\030\002 \002(\005\022\020\n\010Nickn"
      "ame\030\003 \002(\t\"u\n\021msgUserInGameInfo\022\017\n\007userUi"
      "d\030\001 \002(\005\022\t\n\001x\030\002 \002(\002\022\t\n\001y\030\003 \002(\002\022\t\n\001z\030\004 \002(\002"
      "\022\n\n\002qx\030\005 \002(\002\022\n\n\002qy\030\006 \002(\002\022\n\n\002qz\030\007 \002(\002\022\n\n\002"
      "qw\030\010 \002(\002\"=\n\026msgUserInGameStateInfo\022\017\n\007us"
      "erUid\030\001 \002(\005\022\022\n\nstateBit32\030\002 \002(\005\"\?\n\raccou"
      "ntCreate\022\n\n\002id\030\001 \002(\t\022\020\n\010password\030\002 \002(\t\022\020"
      "\n\010nickname\030\003 \002(\t\",\n\014accountLogin\022\n\n\002id\030\001"
      " \002(\t\022\020\n\010password\030\002 \002(\t\"\036\n\raccountLogout\022"
      "\r\n\005empty\030\001 \002(\005\")\n\030anyPlayerInfoSelfReque"
      "st\022\r\n\005empty\030\001 \002(\005\"2\n\037anyPlayerInfoOtherR"
      "equestWithID\022\017\n\007otherID\030\001 \002(\t\">\n%anyPlay"
      "erInfoOtherRequestWithNickName\022\025\n\rotherN"
      "ickname\030\001 \002(\t\"=\n\025anyPlayerInfoResponse\022$"
      "\n\010userInfo\030\001 \002(\0132\022.proto.msgUserInfo\":\n\030"
      "anyWhisperRequestWithUID\022\020\n\010otherUID\030\001 \002"
      "(\005\022\014\n\004chat\030\002 \002(\t\"8\n\027anyWhisperRequestWit"
      "hID\022\017\n\007otherID\030\001 \002(\t\022\014\n\004chat\030\002 \002(\t\"D\n\035an"
      "yWhisperRequestWithNickName\022\025\n\rotherNick"
      "name\030\001 \002(\t\022\014\n\004chat\030\002 \002(\t\"%\n\022anyWhisperRe"
      "sponse\022\017\n\007success\030\001 \002(\010\")\n\030outLobbyLobby"
      "listRequest\022\r\n\005empty\030\001 \002(\005\"P\n\031outLobbyLo"
      "bbylistResponse\022\017\n\007success\030\001 \002(\010\022\"\n\tlobb"
      "yList\030\002 \003(\0132\017.proto.msgLobby\"-\n\031outLobby"
      "EnterLobbyRequest\022\020\n\010lobbyUID\030\001 \002(\005\"\?\n\032o"
      "utLobbyEnterLobbyResponse\022\017\n\007success\030\001 \002"
      "(\010\022\020\n\010lobbyUID\030\002 \002(\005\",\n\030inLobbyPlayerlis"
      "tRequest\022\020\n\010lobbyUID\030\001 \002(\005\"d\n\031inLobbyPla"
      "yerlistResponse\022\017\n\007success\030\001 \002(\010\022\020\n\010lobb"
      "yUID\030\002 \002(\005\022$\n\010userList\030\003 \003(\0132\022.proto.msg"
      "UserInfo\"*\n\027inLobbyEnterRoomRequest\022\017\n\007r"
      "oomUID\030\002 \002(\005\"<\n\030inLobbyEnterRoomResponse"
      "\022\017\n\007success\030\001 \002(\010\022\017\n\007roomUID\030\002 \002(\005\",\n\030in"
      "LobbyLeaveLobbyRequest\022\020\n\010lobbyUID\030\001 \002(\005"
      "\">\n\031inLobbyLeaveLobbyResponse\022\017\n\007success"
      "\030\001 \002(\010\022\020\n\010lobbyUID\030\002 \002(\005\"4\n\022inLobbyChatR"
      "equest\022\020\n\010lobbyUID\030\001 \002(\005\022\014\n\004chat\030\002 \002(\t\"&"
      "\n\023inLobbyChatResponse\022\017\n\007success\030\001 \002(\010\"6"
      "\n\024inLobbyChatBroadcast\022\020\n\010lobbyUID\030\001 \002(\005"
      "\022\014\n\004chat\030\002 \002(\t\"2\n\021inRoomChatRequest\022\017\n\007r"
      "oomUID\030\001 \002(\005\022\014\n\004chat\030\002 \002(\t\"%\n\022inRoomChat"
      "Response\022\017\n\007success\030\001 \002(\010\"4\n\023inRoomChatB"
      "roadcast\022\017\n\007roomUID\030\001 \002(\005\022\014\n\004chat\030\002 \002(\t\""
      ")\n\026inRoomLeaveRoomRequest\022\017\n\007roomUID\030\001 \002"
      "(\005\"M\n\027inRoomLeaveRoomResponse\022\017\n\007success"
      "\030\001 \002(\010\022\017\n\007roomUID\030\002 \002(\005\022\020\n\010lobbyUID\030\003 \002("
      "\005\"#\n\022inRoomReadyRequest\022\r\n\005ready\030\001 \002(\010\"&"
      "\n\023inRoomReadyResponse\022\017\n\007success\030\001 \002(\010\"#"
      "\n\022inRoomStartRequest\022\r\n\005start\030\001 \002(\010\"&\n\023i"
      "nRoomStartResponse\022\017\n\007success\030\001 \002(\010\")\n\024i"
      "nRoomStartBroadcast\022\021\n\tinGameUID\030\001 \002(\005\"b"
      "\n\033inGameSyncPlayerPosToServer\022\021\n\tinGameU"
      "ID\030\001 \002(\005\0220\n\016userInGameInfo\030\002 \002(\0132\030.proto"
      ".msgUserInGameInfo\"f\n\036inGameSyncPlayersP"
      "osFromServer\022\021\n\tinGameUID\030\001 \002(\005\0221\n\017users"
      "InGameInfo\030\002 \003(\0132\030.proto.msgUserInGameIn"
      "fo\"h\n\035inGameSyncPlayerStateToServer\022\021\n\ti"
      "nGameUID\030\001 \002(\005\0224\n\ruserStateInfo\030\002 \002(\0132\035."
      "proto.msgUserInGameStateInfo\"o\n inGameSy"
      "ncPlayersStateFromServer\022\021\n\tinGameUID\030\001 "
      "\002(\005\0228\n\021userStateInfoList\030\002 \003(\0132\035.proto.m"
      "sgUserInGameStateInfo\"4\n\021inGameChatReque"
      "st\022\021\n\tinGameUID\030\001 \002(\005\022\014\n\004chat\030\002 \002(\t\"%\n\022i"
      "nGameChatResponse\022\017\n\007success\030\001 \002(\010\"#\n\023in"
      "GameChatBroadcast\022\014\n\004chat\030\001 \002(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2871);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protoPack.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_protoPack_2eproto
namespace proto {

// ===================================================================

void msgLobby::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int msgLobby::kUidFieldNumber;
const int msgLobby::kNameFieldNumber;
const int msgLobby::kUserNumFieldNumber;
const int msgLobby::kUseraMaxNumFieldNumber;
const int msgLobby::kClosedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

msgLobby::msgLobby()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsmsgLobby();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.msgLobby)
}
msgLobby::msgLobby(const msgLobby& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&closed_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(closed_));
  // @@protoc_insertion_point(copy_constructor:proto.msgLobby)
}

void msgLobby::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&closed_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(closed_));
}

msgLobby::~msgLobby() {
  // @@protoc_insertion_point(destructor:proto.msgLobby)
  SharedDtor();
}

void msgLobby::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void msgLobby::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* msgLobby::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const msgLobby& msgLobby::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsmsgLobby();
  return *internal_default_instance();
}

msgLobby* msgLobby::New(::google::protobuf::Arena* arena) const {
  msgLobby* n = new msgLobby;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void msgLobby::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.msgLobby)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 30u) {
    ::memset(&uid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&closed_) -
        reinterpret_cast<char*>(&uid_)) + sizeof(closed_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool msgLobby::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.msgLobby)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.msgLobby.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 userNum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_usernum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &usernum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 useraMaxNum = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_useramaxnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &useramaxnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool closed = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_closed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &closed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.msgLobby)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.msgLobby)
  return false;
#undef DO_
}

void msgLobby::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.msgLobby)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 uid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->uid(), output);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.msgLobby.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // required int32 userNum = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->usernum(), output);
  }

  // required int32 useraMaxNum = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->useramaxnum(), output);
  }

  // required bool closed = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->closed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.msgLobby)
}

::google::protobuf::uint8* msgLobby::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.msgLobby)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 uid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->uid(), target);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.msgLobby.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // required int32 userNum = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->usernum(), target);
  }

  // required int32 useraMaxNum = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->useramaxnum(), target);
  }

  // required bool closed = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->closed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.msgLobby)
  return target;
}

size_t msgLobby::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:proto.msgLobby)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_uid()) {
    // required int32 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());
  }

  if (has_usernum()) {
    // required int32 userNum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->usernum());
  }

  if (has_useramaxnum()) {
    // required int32 useraMaxNum = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->useramaxnum());
  }

  if (has_closed()) {
    // required bool closed = 5;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t msgLobby::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.msgLobby)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required int32 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());

    // required int32 userNum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->usernum());

    // required int32 useraMaxNum = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->useramaxnum());

    // required bool closed = 5;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void msgLobby::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.msgLobby)
  GOOGLE_DCHECK_NE(&from, this);
  const msgLobby* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const msgLobby>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.msgLobby)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.msgLobby)
    MergeFrom(*source);
  }
}

void msgLobby::MergeFrom(const msgLobby& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.msgLobby)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      uid_ = from.uid_;
    }
    if (cached_has_bits & 0x00000004u) {
      usernum_ = from.usernum_;
    }
    if (cached_has_bits & 0x00000008u) {
      useramaxnum_ = from.useramaxnum_;
    }
    if (cached_has_bits & 0x00000010u) {
      closed_ = from.closed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void msgLobby::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.msgLobby)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void msgLobby::CopyFrom(const msgLobby& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.msgLobby)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool msgLobby::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void msgLobby::Swap(msgLobby* other) {
  if (other == this) return;
  InternalSwap(other);
}
void msgLobby::InternalSwap(msgLobby* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(uid_, other->uid_);
  swap(usernum_, other->usernum_);
  swap(useramaxnum_, other->useramaxnum_);
  swap(closed_, other->closed_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata msgLobby::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void msgRoom::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int msgRoom::kUidFieldNumber;
const int msgRoom::kNameFieldNumber;
const int msgRoom::kUserNumFieldNumber;
const int msgRoom::kUseraMaxNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

msgRoom::msgRoom()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsmsgRoom();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.msgRoom)
}
msgRoom::msgRoom(const msgRoom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&useramaxnum_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(useramaxnum_));
  // @@protoc_insertion_point(copy_constructor:proto.msgRoom)
}

void msgRoom::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&useramaxnum_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(useramaxnum_));
}

msgRoom::~msgRoom() {
  // @@protoc_insertion_point(destructor:proto.msgRoom)
  SharedDtor();
}

void msgRoom::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void msgRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* msgRoom::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const msgRoom& msgRoom::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsmsgRoom();
  return *internal_default_instance();
}

msgRoom* msgRoom::New(::google::protobuf::Arena* arena) const {
  msgRoom* n = new msgRoom;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void msgRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.msgRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 14u) {
    ::memset(&uid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&useramaxnum_) -
        reinterpret_cast<char*>(&uid_)) + sizeof(useramaxnum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool msgRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.msgRoom)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.msgRoom.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 userNum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_usernum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &usernum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 useraMaxNum = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_useramaxnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &useramaxnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.msgRoom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.msgRoom)
  return false;
#undef DO_
}

void msgRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.msgRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 uid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->uid(), output);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.msgRoom.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // required int32 userNum = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->usernum(), output);
  }

  // required int32 useraMaxNum = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->useramaxnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.msgRoom)
}

::google::protobuf::uint8* msgRoom::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.msgRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 uid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->uid(), target);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.msgRoom.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // required int32 userNum = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->usernum(), target);
  }

  // required int32 useraMaxNum = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->useramaxnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.msgRoom)
  return target;
}

size_t msgRoom::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:proto.msgRoom)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_uid()) {
    // required int32 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());
  }

  if (has_usernum()) {
    // required int32 userNum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->usernum());
  }

  if (has_useramaxnum()) {
    // required int32 useraMaxNum = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->useramaxnum());
  }

  return total_size;
}
size_t msgRoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.msgRoom)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required int32 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());

    // required int32 userNum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->usernum());

    // required int32 useraMaxNum = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->useramaxnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void msgRoom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.msgRoom)
  GOOGLE_DCHECK_NE(&from, this);
  const msgRoom* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const msgRoom>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.msgRoom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.msgRoom)
    MergeFrom(*source);
  }
}

void msgRoom::MergeFrom(const msgRoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.msgRoom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      uid_ = from.uid_;
    }
    if (cached_has_bits & 0x00000004u) {
      usernum_ = from.usernum_;
    }
    if (cached_has_bits & 0x00000008u) {
      useramaxnum_ = from.useramaxnum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void msgRoom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.msgRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void msgRoom::CopyFrom(const msgRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.msgRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool msgRoom::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void msgRoom::Swap(msgRoom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void msgRoom::InternalSwap(msgRoom* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(uid_, other->uid_);
  swap(usernum_, other->usernum_);
  swap(useramaxnum_, other->useramaxnum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata msgRoom::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void msgGame::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int msgGame::kUidFieldNumber;
const int msgGame::kNumberFieldNumber;
const int msgGame::kUserListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

msgGame::msgGame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsmsgGame();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.msgGame)
}
msgGame::msgGame(const msgGame& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      userlist_(from.userlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_number()) {
    number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.number_);
  }
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:proto.msgGame)
}

void msgGame::SharedCtor() {
  _cached_size_ = 0;
  number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uid_ = 0;
}

msgGame::~msgGame() {
  // @@protoc_insertion_point(destructor:proto.msgGame)
  SharedDtor();
}

void msgGame::SharedDtor() {
  number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void msgGame::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* msgGame::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const msgGame& msgGame::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsmsgGame();
  return *internal_default_instance();
}

msgGame* msgGame::New(::google::protobuf::Arena* arena) const {
  msgGame* n = new msgGame;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void msgGame::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.msgGame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userlist_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!number_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*number_.UnsafeRawStringPointer())->clear();
  }
  uid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool msgGame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.msgGame)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_number()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->number().data(), static_cast<int>(this->number().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.msgGame.number");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.msgUserInfo userList = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_userlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.msgGame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.msgGame)
  return false;
#undef DO_
}

void msgGame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.msgGame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 uid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->uid(), output);
  }

  // required string number = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->number().data(), static_cast<int>(this->number().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.msgGame.number");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->number(), output);
  }

  // repeated .proto.msgUserInfo userList = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->userlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->userlist(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.msgGame)
}

::google::protobuf::uint8* msgGame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.msgGame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 uid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->uid(), target);
  }

  // required string number = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->number().data(), static_cast<int>(this->number().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.msgGame.number");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->number(), target);
  }

  // repeated .proto.msgUserInfo userList = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->userlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->userlist(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.msgGame)
  return target;
}

size_t msgGame::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:proto.msgGame)
  size_t total_size = 0;

  if (has_number()) {
    // required string number = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->number());
  }

  if (has_uid()) {
    // required int32 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());
  }

  return total_size;
}
size_t msgGame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.msgGame)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string number = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->number());

    // required int32 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .proto.msgUserInfo userList = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->userlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->userlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void msgGame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.msgGame)
  GOOGLE_DCHECK_NE(&from, this);
  const msgGame* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const msgGame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.msgGame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.msgGame)
    MergeFrom(*source);
  }
}

void msgGame::MergeFrom(const msgGame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.msgGame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  userlist_.MergeFrom(from.userlist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_number();
      number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.number_);
    }
    if (cached_has_bits & 0x00000002u) {
      uid_ = from.uid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void msgGame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.msgGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void msgGame::CopyFrom(const msgGame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.msgGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool msgGame::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->userlist())) return false;
  return true;
}

void msgGame::Swap(msgGame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void msgGame::InternalSwap(msgGame* other) {
  using std::swap;
  userlist_.InternalSwap(&other->userlist_);
  number_.Swap(&other->number_);
  swap(uid_, other->uid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata msgGame::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void msgUserInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int msgUserInfo::kUidFieldNumber;
const int msgUserInfo::kIdFieldNumber;
const int msgUserInfo::kNicknameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

msgUserInfo::msgUserInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsmsgUserInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.msgUserInfo)
}
msgUserInfo::msgUserInfo(const msgUserInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:proto.msgUserInfo)
}

void msgUserInfo::SharedCtor() {
  _cached_size_ = 0;
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(id_));
}

msgUserInfo::~msgUserInfo() {
  // @@protoc_insertion_point(destructor:proto.msgUserInfo)
  SharedDtor();
}

void msgUserInfo::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void msgUserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* msgUserInfo::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const msgUserInfo& msgUserInfo::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsmsgUserInfo();
  return *internal_default_instance();
}

msgUserInfo* msgUserInfo::New(::google::protobuf::Arena* arena) const {
  msgUserInfo* n = new msgUserInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void msgUserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.msgUserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!nickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*nickname_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&uid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&id_) -
        reinterpret_cast<char*>(&uid_)) + sizeof(id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool msgUserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.msgUserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string Nickname = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.msgUserInfo.Nickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.msgUserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.msgUserInfo)
  return false;
#undef DO_
}

void msgUserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.msgUserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 uid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->uid(), output);
  }

  // required int32 id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // required string Nickname = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.msgUserInfo.Nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->nickname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.msgUserInfo)
}

::google::protobuf::uint8* msgUserInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.msgUserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 uid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->uid(), target);
  }

  // required int32 id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // required string Nickname = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.msgUserInfo.Nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->nickname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.msgUserInfo)
  return target;
}

size_t msgUserInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:proto.msgUserInfo)
  size_t total_size = 0;

  if (has_nickname()) {
    // required string Nickname = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  if (has_uid()) {
    // required int32 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());
  }

  if (has_id()) {
    // required int32 id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  return total_size;
}
size_t msgUserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.msgUserInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string Nickname = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());

    // required int32 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());

    // required int32 id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void msgUserInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.msgUserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const msgUserInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const msgUserInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.msgUserInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.msgUserInfo)
    MergeFrom(*source);
  }
}

void msgUserInfo::MergeFrom(const msgUserInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.msgUserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (cached_has_bits & 0x00000002u) {
      uid_ = from.uid_;
    }
    if (cached_has_bits & 0x00000004u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void msgUserInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.msgUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void msgUserInfo::CopyFrom(const msgUserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.msgUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool msgUserInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void msgUserInfo::Swap(msgUserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void msgUserInfo::InternalSwap(msgUserInfo* other) {
  using std::swap;
  nickname_.Swap(&other->nickname_);
  swap(uid_, other->uid_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata msgUserInfo::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void msgUserInGameInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int msgUserInGameInfo::kUserUidFieldNumber;
const int msgUserInGameInfo::kXFieldNumber;
const int msgUserInGameInfo::kYFieldNumber;
const int msgUserInGameInfo::kZFieldNumber;
const int msgUserInGameInfo::kQxFieldNumber;
const int msgUserInGameInfo::kQyFieldNumber;
const int msgUserInGameInfo::kQzFieldNumber;
const int msgUserInGameInfo::kQwFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

msgUserInGameInfo::msgUserInGameInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsmsgUserInGameInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.msgUserInGameInfo)
}
msgUserInGameInfo::msgUserInGameInfo(const msgUserInGameInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&useruid_, &from.useruid_,
    static_cast<size_t>(reinterpret_cast<char*>(&qw_) -
    reinterpret_cast<char*>(&useruid_)) + sizeof(qw_));
  // @@protoc_insertion_point(copy_constructor:proto.msgUserInGameInfo)
}

void msgUserInGameInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&useruid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&qw_) -
      reinterpret_cast<char*>(&useruid_)) + sizeof(qw_));
}

msgUserInGameInfo::~msgUserInGameInfo() {
  // @@protoc_insertion_point(destructor:proto.msgUserInGameInfo)
  SharedDtor();
}

void msgUserInGameInfo::SharedDtor() {
}

void msgUserInGameInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* msgUserInGameInfo::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const msgUserInGameInfo& msgUserInGameInfo::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsmsgUserInGameInfo();
  return *internal_default_instance();
}

msgUserInGameInfo* msgUserInGameInfo::New(::google::protobuf::Arena* arena) const {
  msgUserInGameInfo* n = new msgUserInGameInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void msgUserInGameInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.msgUserInGameInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&useruid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&qw_) -
        reinterpret_cast<char*>(&useruid_)) + sizeof(qw_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool msgUserInGameInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.msgUserInGameInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 userUid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_useruid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &useruid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float z = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float qx = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_qx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &qx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float qy = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          set_has_qy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &qy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float qz = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          set_has_qz();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &qz_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float qw = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {
          set_has_qw();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &qw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.msgUserInGameInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.msgUserInGameInfo)
  return false;
#undef DO_
}

void msgUserInGameInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.msgUserInGameInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 userUid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->useruid(), output);
  }

  // required float x = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->x(), output);
  }

  // required float y = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->y(), output);
  }

  // required float z = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->z(), output);
  }

  // required float qx = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->qx(), output);
  }

  // required float qy = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->qy(), output);
  }

  // required float qz = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->qz(), output);
  }

  // required float qw = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->qw(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.msgUserInGameInfo)
}

::google::protobuf::uint8* msgUserInGameInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.msgUserInGameInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 userUid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->useruid(), target);
  }

  // required float x = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->x(), target);
  }

  // required float y = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->y(), target);
  }

  // required float z = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->z(), target);
  }

  // required float qx = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->qx(), target);
  }

  // required float qy = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->qy(), target);
  }

  // required float qz = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->qz(), target);
  }

  // required float qw = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->qw(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.msgUserInGameInfo)
  return target;
}

size_t msgUserInGameInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:proto.msgUserInGameInfo)
  size_t total_size = 0;

  if (has_useruid()) {
    // required int32 userUid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->useruid());
  }

  if (has_x()) {
    // required float x = 2;
    total_size += 1 + 4;
  }

  if (has_y()) {
    // required float y = 3;
    total_size += 1 + 4;
  }

  if (has_z()) {
    // required float z = 4;
    total_size += 1 + 4;
  }

  if (has_qx()) {
    // required float qx = 5;
    total_size += 1 + 4;
  }

  if (has_qy()) {
    // required float qy = 6;
    total_size += 1 + 4;
  }

  if (has_qz()) {
    // required float qz = 7;
    total_size += 1 + 4;
  }

  if (has_qw()) {
    // required float qw = 8;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t msgUserInGameInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.msgUserInGameInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000000ff) ^ 0x000000ff) == 0) {  // All required fields are present.
    // required int32 userUid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->useruid());

    // required float x = 2;
    total_size += 1 + 4;

    // required float y = 3;
    total_size += 1 + 4;

    // required float z = 4;
    total_size += 1 + 4;

    // required float qx = 5;
    total_size += 1 + 4;

    // required float qy = 6;
    total_size += 1 + 4;

    // required float qz = 7;
    total_size += 1 + 4;

    // required float qw = 8;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void msgUserInGameInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.msgUserInGameInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const msgUserInGameInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const msgUserInGameInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.msgUserInGameInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.msgUserInGameInfo)
    MergeFrom(*source);
  }
}

void msgUserInGameInfo::MergeFrom(const msgUserInGameInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.msgUserInGameInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      useruid_ = from.useruid_;
    }
    if (cached_has_bits & 0x00000002u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000004u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000008u) {
      z_ = from.z_;
    }
    if (cached_has_bits & 0x00000010u) {
      qx_ = from.qx_;
    }
    if (cached_has_bits & 0x00000020u) {
      qy_ = from.qy_;
    }
    if (cached_has_bits & 0x00000040u) {
      qz_ = from.qz_;
    }
    if (cached_has_bits & 0x00000080u) {
      qw_ = from.qw_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void msgUserInGameInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.msgUserInGameInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void msgUserInGameInfo::CopyFrom(const msgUserInGameInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.msgUserInGameInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool msgUserInGameInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;
  return true;
}

void msgUserInGameInfo::Swap(msgUserInGameInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void msgUserInGameInfo::InternalSwap(msgUserInGameInfo* other) {
  using std::swap;
  swap(useruid_, other->useruid_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(qx_, other->qx_);
  swap(qy_, other->qy_);
  swap(qz_, other->qz_);
  swap(qw_, other->qw_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata msgUserInGameInfo::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void msgUserInGameStateInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int msgUserInGameStateInfo::kUserUidFieldNumber;
const int msgUserInGameStateInfo::kStateBit32FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

msgUserInGameStateInfo::msgUserInGameStateInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsmsgUserInGameStateInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.msgUserInGameStateInfo)
}
msgUserInGameStateInfo::msgUserInGameStateInfo(const msgUserInGameStateInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&useruid_, &from.useruid_,
    static_cast<size_t>(reinterpret_cast<char*>(&statebit32_) -
    reinterpret_cast<char*>(&useruid_)) + sizeof(statebit32_));
  // @@protoc_insertion_point(copy_constructor:proto.msgUserInGameStateInfo)
}

void msgUserInGameStateInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&useruid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&statebit32_) -
      reinterpret_cast<char*>(&useruid_)) + sizeof(statebit32_));
}

msgUserInGameStateInfo::~msgUserInGameStateInfo() {
  // @@protoc_insertion_point(destructor:proto.msgUserInGameStateInfo)
  SharedDtor();
}

void msgUserInGameStateInfo::SharedDtor() {
}

void msgUserInGameStateInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* msgUserInGameStateInfo::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const msgUserInGameStateInfo& msgUserInGameStateInfo::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsmsgUserInGameStateInfo();
  return *internal_default_instance();
}

msgUserInGameStateInfo* msgUserInGameStateInfo::New(::google::protobuf::Arena* arena) const {
  msgUserInGameStateInfo* n = new msgUserInGameStateInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void msgUserInGameStateInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.msgUserInGameStateInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&useruid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&statebit32_) -
        reinterpret_cast<char*>(&useruid_)) + sizeof(statebit32_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool msgUserInGameStateInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.msgUserInGameStateInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 userUid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_useruid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &useruid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 stateBit32 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_statebit32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &statebit32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.msgUserInGameStateInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.msgUserInGameStateInfo)
  return false;
#undef DO_
}

void msgUserInGameStateInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.msgUserInGameStateInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 userUid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->useruid(), output);
  }

  // required int32 stateBit32 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->statebit32(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.msgUserInGameStateInfo)
}

::google::protobuf::uint8* msgUserInGameStateInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.msgUserInGameStateInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 userUid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->useruid(), target);
  }

  // required int32 stateBit32 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->statebit32(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.msgUserInGameStateInfo)
  return target;
}

size_t msgUserInGameStateInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:proto.msgUserInGameStateInfo)
  size_t total_size = 0;

  if (has_useruid()) {
    // required int32 userUid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->useruid());
  }

  if (has_statebit32()) {
    // required int32 stateBit32 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->statebit32());
  }

  return total_size;
}
size_t msgUserInGameStateInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.msgUserInGameStateInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 userUid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->useruid());

    // required int32 stateBit32 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->statebit32());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void msgUserInGameStateInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.msgUserInGameStateInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const msgUserInGameStateInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const msgUserInGameStateInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.msgUserInGameStateInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.msgUserInGameStateInfo)
    MergeFrom(*source);
  }
}

void msgUserInGameStateInfo::MergeFrom(const msgUserInGameStateInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.msgUserInGameStateInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      useruid_ = from.useruid_;
    }
    if (cached_has_bits & 0x00000002u) {
      statebit32_ = from.statebit32_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void msgUserInGameStateInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.msgUserInGameStateInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void msgUserInGameStateInfo::CopyFrom(const msgUserInGameStateInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.msgUserInGameStateInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool msgUserInGameStateInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void msgUserInGameStateInfo::Swap(msgUserInGameStateInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void msgUserInGameStateInfo::InternalSwap(msgUserInGameStateInfo* other) {
  using std::swap;
  swap(useruid_, other->useruid_);
  swap(statebit32_, other->statebit32_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata msgUserInGameStateInfo::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void accountCreate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int accountCreate::kIdFieldNumber;
const int accountCreate::kPasswordFieldNumber;
const int accountCreate::kNicknameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

accountCreate::accountCreate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsaccountCreate();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.accountCreate)
}
accountCreate::accountCreate(const accountCreate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.accountCreate)
}

void accountCreate::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

accountCreate::~accountCreate() {
  // @@protoc_insertion_point(destructor:proto.accountCreate)
  SharedDtor();
}

void accountCreate::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void accountCreate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* accountCreate::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const accountCreate& accountCreate::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsaccountCreate();
  return *internal_default_instance();
}

accountCreate* accountCreate::New(::google::protobuf::Arena* arena) const {
  accountCreate* n = new accountCreate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void accountCreate::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.accountCreate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!nickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*nickname_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool accountCreate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.accountCreate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.accountCreate.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.accountCreate.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string nickname = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.accountCreate.nickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.accountCreate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.accountCreate)
  return false;
#undef DO_
}

void accountCreate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.accountCreate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.accountCreate.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.accountCreate.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // required string nickname = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.accountCreate.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->nickname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.accountCreate)
}

::google::protobuf::uint8* accountCreate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.accountCreate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.accountCreate.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.accountCreate.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // required string nickname = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.accountCreate.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->nickname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.accountCreate)
  return target;
}

size_t accountCreate::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:proto.accountCreate)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_password()) {
    // required string password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  if (has_nickname()) {
    // required string nickname = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  return total_size;
}
size_t accountCreate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.accountCreate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required string password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());

    // required string nickname = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void accountCreate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.accountCreate)
  GOOGLE_DCHECK_NE(&from, this);
  const accountCreate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const accountCreate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.accountCreate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.accountCreate)
    MergeFrom(*source);
  }
}

void accountCreate::MergeFrom(const accountCreate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.accountCreate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
  }
}

void accountCreate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.accountCreate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void accountCreate::CopyFrom(const accountCreate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.accountCreate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool accountCreate::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void accountCreate::Swap(accountCreate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void accountCreate::InternalSwap(accountCreate* other) {
  using std::swap;
  id_.Swap(&other->id_);
  password_.Swap(&other->password_);
  nickname_.Swap(&other->nickname_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata accountCreate::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void accountLogin::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int accountLogin::kIdFieldNumber;
const int accountLogin::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

accountLogin::accountLogin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsaccountLogin();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.accountLogin)
}
accountLogin::accountLogin(const accountLogin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.accountLogin)
}

void accountLogin::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

accountLogin::~accountLogin() {
  // @@protoc_insertion_point(destructor:proto.accountLogin)
  SharedDtor();
}

void accountLogin::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void accountLogin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* accountLogin::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const accountLogin& accountLogin::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsaccountLogin();
  return *internal_default_instance();
}

accountLogin* accountLogin::New(::google::protobuf::Arena* arena) const {
  accountLogin* n = new accountLogin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void accountLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.accountLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool accountLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.accountLogin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.accountLogin.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.accountLogin.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.accountLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.accountLogin)
  return false;
#undef DO_
}

void accountLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.accountLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.accountLogin.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.accountLogin.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.accountLogin)
}

::google::protobuf::uint8* accountLogin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.accountLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.accountLogin.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.accountLogin.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.accountLogin)
  return target;
}

size_t accountLogin::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:proto.accountLogin)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_password()) {
    // required string password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  return total_size;
}
size_t accountLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.accountLogin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required string password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void accountLogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.accountLogin)
  GOOGLE_DCHECK_NE(&from, this);
  const accountLogin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const accountLogin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.accountLogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.accountLogin)
    MergeFrom(*source);
  }
}

void accountLogin::MergeFrom(const accountLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.accountLogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
  }
}

void accountLogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.accountLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void accountLogin::CopyFrom(const accountLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.accountLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool accountLogin::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void accountLogin::Swap(accountLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void accountLogin::InternalSwap(accountLogin* other) {
  using std::swap;
  id_.Swap(&other->id_);
  password_.Swap(&other->password_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata accountLogin::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void accountLogout::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int accountLogout::kEmptyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

accountLogout::accountLogout()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsaccountLogout();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.accountLogout)
}
accountLogout::accountLogout(const accountLogout& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  empty_ = from.empty_;
  // @@protoc_insertion_point(copy_constructor:proto.accountLogout)
}

void accountLogout::SharedCtor() {
  _cached_size_ = 0;
  empty_ = 0;
}

accountLogout::~accountLogout() {
  // @@protoc_insertion_point(destructor:proto.accountLogout)
  SharedDtor();
}

void accountLogout::SharedDtor() {
}

void accountLogout::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* accountLogout::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const accountLogout& accountLogout::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsaccountLogout();
  return *internal_default_instance();
}

accountLogout* accountLogout::New(::google::protobuf::Arena* arena) const {
  accountLogout* n = new accountLogout;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void accountLogout::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.accountLogout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  empty_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool accountLogout::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.accountLogout)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 empty = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_empty();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &empty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.accountLogout)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.accountLogout)
  return false;
#undef DO_
}

void accountLogout::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.accountLogout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 empty = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->empty(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.accountLogout)
}

::google::protobuf::uint8* accountLogout::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.accountLogout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 empty = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->empty(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.accountLogout)
  return target;
}

size_t accountLogout::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.accountLogout)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 empty = 1;
  if (has_empty()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->empty());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void accountLogout::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.accountLogout)
  GOOGLE_DCHECK_NE(&from, this);
  const accountLogout* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const accountLogout>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.accountLogout)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.accountLogout)
    MergeFrom(*source);
  }
}

void accountLogout::MergeFrom(const accountLogout& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.accountLogout)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_empty()) {
    set_empty(from.empty());
  }
}

void accountLogout::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.accountLogout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void accountLogout::CopyFrom(const accountLogout& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.accountLogout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool accountLogout::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void accountLogout::Swap(accountLogout* other) {
  if (other == this) return;
  InternalSwap(other);
}
void accountLogout::InternalSwap(accountLogout* other) {
  using std::swap;
  swap(empty_, other->empty_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata accountLogout::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void anyPlayerInfoSelfRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int anyPlayerInfoSelfRequest::kEmptyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

anyPlayerInfoSelfRequest::anyPlayerInfoSelfRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsanyPlayerInfoSelfRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.anyPlayerInfoSelfRequest)
}
anyPlayerInfoSelfRequest::anyPlayerInfoSelfRequest(const anyPlayerInfoSelfRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  empty_ = from.empty_;
  // @@protoc_insertion_point(copy_constructor:proto.anyPlayerInfoSelfRequest)
}

void anyPlayerInfoSelfRequest::SharedCtor() {
  _cached_size_ = 0;
  empty_ = 0;
}

anyPlayerInfoSelfRequest::~anyPlayerInfoSelfRequest() {
  // @@protoc_insertion_point(destructor:proto.anyPlayerInfoSelfRequest)
  SharedDtor();
}

void anyPlayerInfoSelfRequest::SharedDtor() {
}

void anyPlayerInfoSelfRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* anyPlayerInfoSelfRequest::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const anyPlayerInfoSelfRequest& anyPlayerInfoSelfRequest::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsanyPlayerInfoSelfRequest();
  return *internal_default_instance();
}

anyPlayerInfoSelfRequest* anyPlayerInfoSelfRequest::New(::google::protobuf::Arena* arena) const {
  anyPlayerInfoSelfRequest* n = new anyPlayerInfoSelfRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void anyPlayerInfoSelfRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.anyPlayerInfoSelfRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  empty_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool anyPlayerInfoSelfRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.anyPlayerInfoSelfRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 empty = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_empty();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &empty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.anyPlayerInfoSelfRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.anyPlayerInfoSelfRequest)
  return false;
#undef DO_
}

void anyPlayerInfoSelfRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.anyPlayerInfoSelfRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 empty = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->empty(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.anyPlayerInfoSelfRequest)
}

::google::protobuf::uint8* anyPlayerInfoSelfRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.anyPlayerInfoSelfRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 empty = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->empty(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.anyPlayerInfoSelfRequest)
  return target;
}

size_t anyPlayerInfoSelfRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.anyPlayerInfoSelfRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 empty = 1;
  if (has_empty()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->empty());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void anyPlayerInfoSelfRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.anyPlayerInfoSelfRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const anyPlayerInfoSelfRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const anyPlayerInfoSelfRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.anyPlayerInfoSelfRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.anyPlayerInfoSelfRequest)
    MergeFrom(*source);
  }
}

void anyPlayerInfoSelfRequest::MergeFrom(const anyPlayerInfoSelfRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.anyPlayerInfoSelfRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_empty()) {
    set_empty(from.empty());
  }
}

void anyPlayerInfoSelfRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.anyPlayerInfoSelfRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void anyPlayerInfoSelfRequest::CopyFrom(const anyPlayerInfoSelfRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.anyPlayerInfoSelfRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool anyPlayerInfoSelfRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void anyPlayerInfoSelfRequest::Swap(anyPlayerInfoSelfRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void anyPlayerInfoSelfRequest::InternalSwap(anyPlayerInfoSelfRequest* other) {
  using std::swap;
  swap(empty_, other->empty_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata anyPlayerInfoSelfRequest::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void anyPlayerInfoOtherRequestWithID::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int anyPlayerInfoOtherRequestWithID::kOtherIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

anyPlayerInfoOtherRequestWithID::anyPlayerInfoOtherRequestWithID()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsanyPlayerInfoOtherRequestWithID();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.anyPlayerInfoOtherRequestWithID)
}
anyPlayerInfoOtherRequestWithID::anyPlayerInfoOtherRequestWithID(const anyPlayerInfoOtherRequestWithID& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  otherid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_otherid()) {
    otherid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otherid_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.anyPlayerInfoOtherRequestWithID)
}

void anyPlayerInfoOtherRequestWithID::SharedCtor() {
  _cached_size_ = 0;
  otherid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

anyPlayerInfoOtherRequestWithID::~anyPlayerInfoOtherRequestWithID() {
  // @@protoc_insertion_point(destructor:proto.anyPlayerInfoOtherRequestWithID)
  SharedDtor();
}

void anyPlayerInfoOtherRequestWithID::SharedDtor() {
  otherid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void anyPlayerInfoOtherRequestWithID::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* anyPlayerInfoOtherRequestWithID::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const anyPlayerInfoOtherRequestWithID& anyPlayerInfoOtherRequestWithID::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsanyPlayerInfoOtherRequestWithID();
  return *internal_default_instance();
}

anyPlayerInfoOtherRequestWithID* anyPlayerInfoOtherRequestWithID::New(::google::protobuf::Arena* arena) const {
  anyPlayerInfoOtherRequestWithID* n = new anyPlayerInfoOtherRequestWithID;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void anyPlayerInfoOtherRequestWithID::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.anyPlayerInfoOtherRequestWithID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!otherid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*otherid_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool anyPlayerInfoOtherRequestWithID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.anyPlayerInfoOtherRequestWithID)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string otherID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_otherid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->otherid().data(), static_cast<int>(this->otherid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.anyPlayerInfoOtherRequestWithID.otherID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.anyPlayerInfoOtherRequestWithID)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.anyPlayerInfoOtherRequestWithID)
  return false;
#undef DO_
}

void anyPlayerInfoOtherRequestWithID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.anyPlayerInfoOtherRequestWithID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string otherID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->otherid().data(), static_cast<int>(this->otherid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.anyPlayerInfoOtherRequestWithID.otherID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->otherid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.anyPlayerInfoOtherRequestWithID)
}

::google::protobuf::uint8* anyPlayerInfoOtherRequestWithID::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.anyPlayerInfoOtherRequestWithID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string otherID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->otherid().data(), static_cast<int>(this->otherid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.anyPlayerInfoOtherRequestWithID.otherID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->otherid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.anyPlayerInfoOtherRequestWithID)
  return target;
}

size_t anyPlayerInfoOtherRequestWithID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.anyPlayerInfoOtherRequestWithID)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string otherID = 1;
  if (has_otherid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->otherid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void anyPlayerInfoOtherRequestWithID::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.anyPlayerInfoOtherRequestWithID)
  GOOGLE_DCHECK_NE(&from, this);
  const anyPlayerInfoOtherRequestWithID* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const anyPlayerInfoOtherRequestWithID>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.anyPlayerInfoOtherRequestWithID)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.anyPlayerInfoOtherRequestWithID)
    MergeFrom(*source);
  }
}

void anyPlayerInfoOtherRequestWithID::MergeFrom(const anyPlayerInfoOtherRequestWithID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.anyPlayerInfoOtherRequestWithID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_otherid()) {
    set_has_otherid();
    otherid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otherid_);
  }
}

void anyPlayerInfoOtherRequestWithID::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.anyPlayerInfoOtherRequestWithID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void anyPlayerInfoOtherRequestWithID::CopyFrom(const anyPlayerInfoOtherRequestWithID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.anyPlayerInfoOtherRequestWithID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool anyPlayerInfoOtherRequestWithID::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void anyPlayerInfoOtherRequestWithID::Swap(anyPlayerInfoOtherRequestWithID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void anyPlayerInfoOtherRequestWithID::InternalSwap(anyPlayerInfoOtherRequestWithID* other) {
  using std::swap;
  otherid_.Swap(&other->otherid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata anyPlayerInfoOtherRequestWithID::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void anyPlayerInfoOtherRequestWithNickName::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int anyPlayerInfoOtherRequestWithNickName::kOtherNicknameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

anyPlayerInfoOtherRequestWithNickName::anyPlayerInfoOtherRequestWithNickName()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsanyPlayerInfoOtherRequestWithNickName();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.anyPlayerInfoOtherRequestWithNickName)
}
anyPlayerInfoOtherRequestWithNickName::anyPlayerInfoOtherRequestWithNickName(const anyPlayerInfoOtherRequestWithNickName& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  othernickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_othernickname()) {
    othernickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.othernickname_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.anyPlayerInfoOtherRequestWithNickName)
}

void anyPlayerInfoOtherRequestWithNickName::SharedCtor() {
  _cached_size_ = 0;
  othernickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

anyPlayerInfoOtherRequestWithNickName::~anyPlayerInfoOtherRequestWithNickName() {
  // @@protoc_insertion_point(destructor:proto.anyPlayerInfoOtherRequestWithNickName)
  SharedDtor();
}

void anyPlayerInfoOtherRequestWithNickName::SharedDtor() {
  othernickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void anyPlayerInfoOtherRequestWithNickName::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* anyPlayerInfoOtherRequestWithNickName::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const anyPlayerInfoOtherRequestWithNickName& anyPlayerInfoOtherRequestWithNickName::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsanyPlayerInfoOtherRequestWithNickName();
  return *internal_default_instance();
}

anyPlayerInfoOtherRequestWithNickName* anyPlayerInfoOtherRequestWithNickName::New(::google::protobuf::Arena* arena) const {
  anyPlayerInfoOtherRequestWithNickName* n = new anyPlayerInfoOtherRequestWithNickName;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void anyPlayerInfoOtherRequestWithNickName::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.anyPlayerInfoOtherRequestWithNickName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!othernickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*othernickname_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool anyPlayerInfoOtherRequestWithNickName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.anyPlayerInfoOtherRequestWithNickName)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string otherNickname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_othernickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->othernickname().data(), static_cast<int>(this->othernickname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.anyPlayerInfoOtherRequestWithNickName.otherNickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.anyPlayerInfoOtherRequestWithNickName)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.anyPlayerInfoOtherRequestWithNickName)
  return false;
#undef DO_
}

void anyPlayerInfoOtherRequestWithNickName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.anyPlayerInfoOtherRequestWithNickName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string otherNickname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->othernickname().data(), static_cast<int>(this->othernickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.anyPlayerInfoOtherRequestWithNickName.otherNickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->othernickname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.anyPlayerInfoOtherRequestWithNickName)
}

::google::protobuf::uint8* anyPlayerInfoOtherRequestWithNickName::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.anyPlayerInfoOtherRequestWithNickName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string otherNickname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->othernickname().data(), static_cast<int>(this->othernickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.anyPlayerInfoOtherRequestWithNickName.otherNickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->othernickname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.anyPlayerInfoOtherRequestWithNickName)
  return target;
}

size_t anyPlayerInfoOtherRequestWithNickName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.anyPlayerInfoOtherRequestWithNickName)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string otherNickname = 1;
  if (has_othernickname()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->othernickname());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void anyPlayerInfoOtherRequestWithNickName::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.anyPlayerInfoOtherRequestWithNickName)
  GOOGLE_DCHECK_NE(&from, this);
  const anyPlayerInfoOtherRequestWithNickName* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const anyPlayerInfoOtherRequestWithNickName>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.anyPlayerInfoOtherRequestWithNickName)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.anyPlayerInfoOtherRequestWithNickName)
    MergeFrom(*source);
  }
}

void anyPlayerInfoOtherRequestWithNickName::MergeFrom(const anyPlayerInfoOtherRequestWithNickName& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.anyPlayerInfoOtherRequestWithNickName)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_othernickname()) {
    set_has_othernickname();
    othernickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.othernickname_);
  }
}

void anyPlayerInfoOtherRequestWithNickName::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.anyPlayerInfoOtherRequestWithNickName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void anyPlayerInfoOtherRequestWithNickName::CopyFrom(const anyPlayerInfoOtherRequestWithNickName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.anyPlayerInfoOtherRequestWithNickName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool anyPlayerInfoOtherRequestWithNickName::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void anyPlayerInfoOtherRequestWithNickName::Swap(anyPlayerInfoOtherRequestWithNickName* other) {
  if (other == this) return;
  InternalSwap(other);
}
void anyPlayerInfoOtherRequestWithNickName::InternalSwap(anyPlayerInfoOtherRequestWithNickName* other) {
  using std::swap;
  othernickname_.Swap(&other->othernickname_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata anyPlayerInfoOtherRequestWithNickName::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void anyPlayerInfoResponse::InitAsDefaultInstance() {
  ::proto::_anyPlayerInfoResponse_default_instance_._instance.get_mutable()->userinfo_ = const_cast< ::proto::msgUserInfo*>(
      ::proto::msgUserInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int anyPlayerInfoResponse::kUserInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

anyPlayerInfoResponse::anyPlayerInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsanyPlayerInfoResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.anyPlayerInfoResponse)
}
anyPlayerInfoResponse::anyPlayerInfoResponse(const anyPlayerInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_userinfo()) {
    userinfo_ = new ::proto::msgUserInfo(*from.userinfo_);
  } else {
    userinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.anyPlayerInfoResponse)
}

void anyPlayerInfoResponse::SharedCtor() {
  _cached_size_ = 0;
  userinfo_ = NULL;
}

anyPlayerInfoResponse::~anyPlayerInfoResponse() {
  // @@protoc_insertion_point(destructor:proto.anyPlayerInfoResponse)
  SharedDtor();
}

void anyPlayerInfoResponse::SharedDtor() {
  if (this != internal_default_instance()) delete userinfo_;
}

void anyPlayerInfoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* anyPlayerInfoResponse::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const anyPlayerInfoResponse& anyPlayerInfoResponse::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsanyPlayerInfoResponse();
  return *internal_default_instance();
}

anyPlayerInfoResponse* anyPlayerInfoResponse::New(::google::protobuf::Arena* arena) const {
  anyPlayerInfoResponse* n = new anyPlayerInfoResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void anyPlayerInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.anyPlayerInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(userinfo_ != NULL);
    userinfo_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool anyPlayerInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.anyPlayerInfoResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .proto.msgUserInfo userInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.anyPlayerInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.anyPlayerInfoResponse)
  return false;
#undef DO_
}

void anyPlayerInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.anyPlayerInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .proto.msgUserInfo userInfo = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->userinfo_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.anyPlayerInfoResponse)
}

::google::protobuf::uint8* anyPlayerInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.anyPlayerInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .proto.msgUserInfo userInfo = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->userinfo_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.anyPlayerInfoResponse)
  return target;
}

size_t anyPlayerInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.anyPlayerInfoResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .proto.msgUserInfo userInfo = 1;
  if (has_userinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->userinfo_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void anyPlayerInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.anyPlayerInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const anyPlayerInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const anyPlayerInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.anyPlayerInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.anyPlayerInfoResponse)
    MergeFrom(*source);
  }
}

void anyPlayerInfoResponse::MergeFrom(const anyPlayerInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.anyPlayerInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_userinfo()) {
    mutable_userinfo()->::proto::msgUserInfo::MergeFrom(from.userinfo());
  }
}

void anyPlayerInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.anyPlayerInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void anyPlayerInfoResponse::CopyFrom(const anyPlayerInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.anyPlayerInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool anyPlayerInfoResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_userinfo()) {
    if (!this->userinfo_->IsInitialized()) return false;
  }
  return true;
}

void anyPlayerInfoResponse::Swap(anyPlayerInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void anyPlayerInfoResponse::InternalSwap(anyPlayerInfoResponse* other) {
  using std::swap;
  swap(userinfo_, other->userinfo_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata anyPlayerInfoResponse::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void anyWhisperRequestWithUID::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int anyWhisperRequestWithUID::kOtherUIDFieldNumber;
const int anyWhisperRequestWithUID::kChatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

anyWhisperRequestWithUID::anyWhisperRequestWithUID()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsanyWhisperRequestWithUID();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.anyWhisperRequestWithUID)
}
anyWhisperRequestWithUID::anyWhisperRequestWithUID(const anyWhisperRequestWithUID& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_chat()) {
    chat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_);
  }
  otheruid_ = from.otheruid_;
  // @@protoc_insertion_point(copy_constructor:proto.anyWhisperRequestWithUID)
}

void anyWhisperRequestWithUID::SharedCtor() {
  _cached_size_ = 0;
  chat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  otheruid_ = 0;
}

anyWhisperRequestWithUID::~anyWhisperRequestWithUID() {
  // @@protoc_insertion_point(destructor:proto.anyWhisperRequestWithUID)
  SharedDtor();
}

void anyWhisperRequestWithUID::SharedDtor() {
  chat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void anyWhisperRequestWithUID::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* anyWhisperRequestWithUID::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const anyWhisperRequestWithUID& anyWhisperRequestWithUID::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsanyWhisperRequestWithUID();
  return *internal_default_instance();
}

anyWhisperRequestWithUID* anyWhisperRequestWithUID::New(::google::protobuf::Arena* arena) const {
  anyWhisperRequestWithUID* n = new anyWhisperRequestWithUID;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void anyWhisperRequestWithUID::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.anyWhisperRequestWithUID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!chat_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*chat_.UnsafeRawStringPointer())->clear();
  }
  otheruid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool anyWhisperRequestWithUID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.anyWhisperRequestWithUID)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 otherUID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_otheruid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &otheruid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string chat = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chat()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->chat().data(), static_cast<int>(this->chat().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.anyWhisperRequestWithUID.chat");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.anyWhisperRequestWithUID)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.anyWhisperRequestWithUID)
  return false;
#undef DO_
}

void anyWhisperRequestWithUID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.anyWhisperRequestWithUID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 otherUID = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->otheruid(), output);
  }

  // required string chat = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat().data(), static_cast<int>(this->chat().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.anyWhisperRequestWithUID.chat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->chat(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.anyWhisperRequestWithUID)
}

::google::protobuf::uint8* anyWhisperRequestWithUID::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.anyWhisperRequestWithUID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 otherUID = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->otheruid(), target);
  }

  // required string chat = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat().data(), static_cast<int>(this->chat().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.anyWhisperRequestWithUID.chat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->chat(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.anyWhisperRequestWithUID)
  return target;
}

size_t anyWhisperRequestWithUID::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:proto.anyWhisperRequestWithUID)
  size_t total_size = 0;

  if (has_chat()) {
    // required string chat = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chat());
  }

  if (has_otheruid()) {
    // required int32 otherUID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->otheruid());
  }

  return total_size;
}
size_t anyWhisperRequestWithUID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.anyWhisperRequestWithUID)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string chat = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chat());

    // required int32 otherUID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->otheruid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void anyWhisperRequestWithUID::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.anyWhisperRequestWithUID)
  GOOGLE_DCHECK_NE(&from, this);
  const anyWhisperRequestWithUID* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const anyWhisperRequestWithUID>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.anyWhisperRequestWithUID)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.anyWhisperRequestWithUID)
    MergeFrom(*source);
  }
}

void anyWhisperRequestWithUID::MergeFrom(const anyWhisperRequestWithUID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.anyWhisperRequestWithUID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_chat();
      chat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_);
    }
    if (cached_has_bits & 0x00000002u) {
      otheruid_ = from.otheruid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void anyWhisperRequestWithUID::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.anyWhisperRequestWithUID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void anyWhisperRequestWithUID::CopyFrom(const anyWhisperRequestWithUID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.anyWhisperRequestWithUID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool anyWhisperRequestWithUID::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void anyWhisperRequestWithUID::Swap(anyWhisperRequestWithUID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void anyWhisperRequestWithUID::InternalSwap(anyWhisperRequestWithUID* other) {
  using std::swap;
  chat_.Swap(&other->chat_);
  swap(otheruid_, other->otheruid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata anyWhisperRequestWithUID::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void anyWhisperRequestWithID::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int anyWhisperRequestWithID::kOtherIDFieldNumber;
const int anyWhisperRequestWithID::kChatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

anyWhisperRequestWithID::anyWhisperRequestWithID()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsanyWhisperRequestWithID();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.anyWhisperRequestWithID)
}
anyWhisperRequestWithID::anyWhisperRequestWithID(const anyWhisperRequestWithID& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  otherid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_otherid()) {
    otherid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otherid_);
  }
  chat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_chat()) {
    chat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.anyWhisperRequestWithID)
}

void anyWhisperRequestWithID::SharedCtor() {
  _cached_size_ = 0;
  otherid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

anyWhisperRequestWithID::~anyWhisperRequestWithID() {
  // @@protoc_insertion_point(destructor:proto.anyWhisperRequestWithID)
  SharedDtor();
}

void anyWhisperRequestWithID::SharedDtor() {
  otherid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void anyWhisperRequestWithID::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* anyWhisperRequestWithID::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const anyWhisperRequestWithID& anyWhisperRequestWithID::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsanyWhisperRequestWithID();
  return *internal_default_instance();
}

anyWhisperRequestWithID* anyWhisperRequestWithID::New(::google::protobuf::Arena* arena) const {
  anyWhisperRequestWithID* n = new anyWhisperRequestWithID;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void anyWhisperRequestWithID::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.anyWhisperRequestWithID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!otherid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*otherid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!chat_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*chat_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool anyWhisperRequestWithID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.anyWhisperRequestWithID)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string otherID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_otherid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->otherid().data(), static_cast<int>(this->otherid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.anyWhisperRequestWithID.otherID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string chat = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chat()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->chat().data(), static_cast<int>(this->chat().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.anyWhisperRequestWithID.chat");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.anyWhisperRequestWithID)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.anyWhisperRequestWithID)
  return false;
#undef DO_
}

void anyWhisperRequestWithID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.anyWhisperRequestWithID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string otherID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->otherid().data(), static_cast<int>(this->otherid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.anyWhisperRequestWithID.otherID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->otherid(), output);
  }

  // required string chat = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat().data(), static_cast<int>(this->chat().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.anyWhisperRequestWithID.chat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->chat(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.anyWhisperRequestWithID)
}

::google::protobuf::uint8* anyWhisperRequestWithID::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.anyWhisperRequestWithID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string otherID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->otherid().data(), static_cast<int>(this->otherid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.anyWhisperRequestWithID.otherID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->otherid(), target);
  }

  // required string chat = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat().data(), static_cast<int>(this->chat().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.anyWhisperRequestWithID.chat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->chat(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.anyWhisperRequestWithID)
  return target;
}

size_t anyWhisperRequestWithID::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:proto.anyWhisperRequestWithID)
  size_t total_size = 0;

  if (has_otherid()) {
    // required string otherID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->otherid());
  }

  if (has_chat()) {
    // required string chat = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chat());
  }

  return total_size;
}
size_t anyWhisperRequestWithID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.anyWhisperRequestWithID)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string otherID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->otherid());

    // required string chat = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chat());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void anyWhisperRequestWithID::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.anyWhisperRequestWithID)
  GOOGLE_DCHECK_NE(&from, this);
  const anyWhisperRequestWithID* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const anyWhisperRequestWithID>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.anyWhisperRequestWithID)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.anyWhisperRequestWithID)
    MergeFrom(*source);
  }
}

void anyWhisperRequestWithID::MergeFrom(const anyWhisperRequestWithID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.anyWhisperRequestWithID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_otherid();
      otherid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otherid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_chat();
      chat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_);
    }
  }
}

void anyWhisperRequestWithID::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.anyWhisperRequestWithID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void anyWhisperRequestWithID::CopyFrom(const anyWhisperRequestWithID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.anyWhisperRequestWithID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool anyWhisperRequestWithID::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void anyWhisperRequestWithID::Swap(anyWhisperRequestWithID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void anyWhisperRequestWithID::InternalSwap(anyWhisperRequestWithID* other) {
  using std::swap;
  otherid_.Swap(&other->otherid_);
  chat_.Swap(&other->chat_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata anyWhisperRequestWithID::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void anyWhisperRequestWithNickName::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int anyWhisperRequestWithNickName::kOtherNicknameFieldNumber;
const int anyWhisperRequestWithNickName::kChatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

anyWhisperRequestWithNickName::anyWhisperRequestWithNickName()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsanyWhisperRequestWithNickName();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.anyWhisperRequestWithNickName)
}
anyWhisperRequestWithNickName::anyWhisperRequestWithNickName(const anyWhisperRequestWithNickName& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  othernickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_othernickname()) {
    othernickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.othernickname_);
  }
  chat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_chat()) {
    chat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.anyWhisperRequestWithNickName)
}

void anyWhisperRequestWithNickName::SharedCtor() {
  _cached_size_ = 0;
  othernickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

anyWhisperRequestWithNickName::~anyWhisperRequestWithNickName() {
  // @@protoc_insertion_point(destructor:proto.anyWhisperRequestWithNickName)
  SharedDtor();
}

void anyWhisperRequestWithNickName::SharedDtor() {
  othernickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void anyWhisperRequestWithNickName::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* anyWhisperRequestWithNickName::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const anyWhisperRequestWithNickName& anyWhisperRequestWithNickName::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsanyWhisperRequestWithNickName();
  return *internal_default_instance();
}

anyWhisperRequestWithNickName* anyWhisperRequestWithNickName::New(::google::protobuf::Arena* arena) const {
  anyWhisperRequestWithNickName* n = new anyWhisperRequestWithNickName;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void anyWhisperRequestWithNickName::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.anyWhisperRequestWithNickName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!othernickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*othernickname_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!chat_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*chat_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool anyWhisperRequestWithNickName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.anyWhisperRequestWithNickName)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string otherNickname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_othernickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->othernickname().data(), static_cast<int>(this->othernickname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.anyWhisperRequestWithNickName.otherNickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string chat = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chat()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->chat().data(), static_cast<int>(this->chat().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.anyWhisperRequestWithNickName.chat");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.anyWhisperRequestWithNickName)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.anyWhisperRequestWithNickName)
  return false;
#undef DO_
}

void anyWhisperRequestWithNickName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.anyWhisperRequestWithNickName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string otherNickname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->othernickname().data(), static_cast<int>(this->othernickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.anyWhisperRequestWithNickName.otherNickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->othernickname(), output);
  }

  // required string chat = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat().data(), static_cast<int>(this->chat().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.anyWhisperRequestWithNickName.chat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->chat(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.anyWhisperRequestWithNickName)
}

::google::protobuf::uint8* anyWhisperRequestWithNickName::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.anyWhisperRequestWithNickName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string otherNickname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->othernickname().data(), static_cast<int>(this->othernickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.anyWhisperRequestWithNickName.otherNickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->othernickname(), target);
  }

  // required string chat = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat().data(), static_cast<int>(this->chat().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.anyWhisperRequestWithNickName.chat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->chat(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.anyWhisperRequestWithNickName)
  return target;
}

size_t anyWhisperRequestWithNickName::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:proto.anyWhisperRequestWithNickName)
  size_t total_size = 0;

  if (has_othernickname()) {
    // required string otherNickname = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->othernickname());
  }

  if (has_chat()) {
    // required string chat = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chat());
  }

  return total_size;
}
size_t anyWhisperRequestWithNickName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.anyWhisperRequestWithNickName)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string otherNickname = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->othernickname());

    // required string chat = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chat());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void anyWhisperRequestWithNickName::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.anyWhisperRequestWithNickName)
  GOOGLE_DCHECK_NE(&from, this);
  const anyWhisperRequestWithNickName* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const anyWhisperRequestWithNickName>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.anyWhisperRequestWithNickName)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.anyWhisperRequestWithNickName)
    MergeFrom(*source);
  }
}

void anyWhisperRequestWithNickName::MergeFrom(const anyWhisperRequestWithNickName& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.anyWhisperRequestWithNickName)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_othernickname();
      othernickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.othernickname_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_chat();
      chat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_);
    }
  }
}

void anyWhisperRequestWithNickName::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.anyWhisperRequestWithNickName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void anyWhisperRequestWithNickName::CopyFrom(const anyWhisperRequestWithNickName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.anyWhisperRequestWithNickName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool anyWhisperRequestWithNickName::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void anyWhisperRequestWithNickName::Swap(anyWhisperRequestWithNickName* other) {
  if (other == this) return;
  InternalSwap(other);
}
void anyWhisperRequestWithNickName::InternalSwap(anyWhisperRequestWithNickName* other) {
  using std::swap;
  othernickname_.Swap(&other->othernickname_);
  chat_.Swap(&other->chat_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata anyWhisperRequestWithNickName::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void anyWhisperResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int anyWhisperResponse::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

anyWhisperResponse::anyWhisperResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsanyWhisperResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.anyWhisperResponse)
}
anyWhisperResponse::anyWhisperResponse(const anyWhisperResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:proto.anyWhisperResponse)
}

void anyWhisperResponse::SharedCtor() {
  _cached_size_ = 0;
  success_ = false;
}

anyWhisperResponse::~anyWhisperResponse() {
  // @@protoc_insertion_point(destructor:proto.anyWhisperResponse)
  SharedDtor();
}

void anyWhisperResponse::SharedDtor() {
}

void anyWhisperResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* anyWhisperResponse::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const anyWhisperResponse& anyWhisperResponse::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsanyWhisperResponse();
  return *internal_default_instance();
}

anyWhisperResponse* anyWhisperResponse::New(::google::protobuf::Arena* arena) const {
  anyWhisperResponse* n = new anyWhisperResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void anyWhisperResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.anyWhisperResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool anyWhisperResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.anyWhisperResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.anyWhisperResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.anyWhisperResponse)
  return false;
#undef DO_
}

void anyWhisperResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.anyWhisperResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.anyWhisperResponse)
}

::google::protobuf::uint8* anyWhisperResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.anyWhisperResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.anyWhisperResponse)
  return target;
}

size_t anyWhisperResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.anyWhisperResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool success = 1;
  if (has_success()) {
    total_size += 1 + 1;
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void anyWhisperResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.anyWhisperResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const anyWhisperResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const anyWhisperResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.anyWhisperResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.anyWhisperResponse)
    MergeFrom(*source);
  }
}

void anyWhisperResponse::MergeFrom(const anyWhisperResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.anyWhisperResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_success()) {
    set_success(from.success());
  }
}

void anyWhisperResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.anyWhisperResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void anyWhisperResponse::CopyFrom(const anyWhisperResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.anyWhisperResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool anyWhisperResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void anyWhisperResponse::Swap(anyWhisperResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void anyWhisperResponse::InternalSwap(anyWhisperResponse* other) {
  using std::swap;
  swap(success_, other->success_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata anyWhisperResponse::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void outLobbyLobbylistRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int outLobbyLobbylistRequest::kEmptyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

outLobbyLobbylistRequest::outLobbyLobbylistRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsoutLobbyLobbylistRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.outLobbyLobbylistRequest)
}
outLobbyLobbylistRequest::outLobbyLobbylistRequest(const outLobbyLobbylistRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  empty_ = from.empty_;
  // @@protoc_insertion_point(copy_constructor:proto.outLobbyLobbylistRequest)
}

void outLobbyLobbylistRequest::SharedCtor() {
  _cached_size_ = 0;
  empty_ = 0;
}

outLobbyLobbylistRequest::~outLobbyLobbylistRequest() {
  // @@protoc_insertion_point(destructor:proto.outLobbyLobbylistRequest)
  SharedDtor();
}

void outLobbyLobbylistRequest::SharedDtor() {
}

void outLobbyLobbylistRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* outLobbyLobbylistRequest::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const outLobbyLobbylistRequest& outLobbyLobbylistRequest::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsoutLobbyLobbylistRequest();
  return *internal_default_instance();
}

outLobbyLobbylistRequest* outLobbyLobbylistRequest::New(::google::protobuf::Arena* arena) const {
  outLobbyLobbylistRequest* n = new outLobbyLobbylistRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void outLobbyLobbylistRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.outLobbyLobbylistRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  empty_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool outLobbyLobbylistRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.outLobbyLobbylistRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 empty = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_empty();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &empty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.outLobbyLobbylistRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.outLobbyLobbylistRequest)
  return false;
#undef DO_
}

void outLobbyLobbylistRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.outLobbyLobbylistRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 empty = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->empty(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.outLobbyLobbylistRequest)
}

::google::protobuf::uint8* outLobbyLobbylistRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.outLobbyLobbylistRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 empty = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->empty(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.outLobbyLobbylistRequest)
  return target;
}

size_t outLobbyLobbylistRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.outLobbyLobbylistRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 empty = 1;
  if (has_empty()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->empty());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void outLobbyLobbylistRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.outLobbyLobbylistRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const outLobbyLobbylistRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const outLobbyLobbylistRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.outLobbyLobbylistRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.outLobbyLobbylistRequest)
    MergeFrom(*source);
  }
}

void outLobbyLobbylistRequest::MergeFrom(const outLobbyLobbylistRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.outLobbyLobbylistRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_empty()) {
    set_empty(from.empty());
  }
}

void outLobbyLobbylistRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.outLobbyLobbylistRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void outLobbyLobbylistRequest::CopyFrom(const outLobbyLobbylistRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.outLobbyLobbylistRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool outLobbyLobbylistRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void outLobbyLobbylistRequest::Swap(outLobbyLobbylistRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void outLobbyLobbylistRequest::InternalSwap(outLobbyLobbylistRequest* other) {
  using std::swap;
  swap(empty_, other->empty_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata outLobbyLobbylistRequest::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void outLobbyLobbylistResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int outLobbyLobbylistResponse::kSuccessFieldNumber;
const int outLobbyLobbylistResponse::kLobbyListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

outLobbyLobbylistResponse::outLobbyLobbylistResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsoutLobbyLobbylistResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.outLobbyLobbylistResponse)
}
outLobbyLobbylistResponse::outLobbyLobbylistResponse(const outLobbyLobbylistResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      lobbylist_(from.lobbylist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:proto.outLobbyLobbylistResponse)
}

void outLobbyLobbylistResponse::SharedCtor() {
  _cached_size_ = 0;
  success_ = false;
}

outLobbyLobbylistResponse::~outLobbyLobbylistResponse() {
  // @@protoc_insertion_point(destructor:proto.outLobbyLobbylistResponse)
  SharedDtor();
}

void outLobbyLobbylistResponse::SharedDtor() {
}

void outLobbyLobbylistResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* outLobbyLobbylistResponse::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const outLobbyLobbylistResponse& outLobbyLobbylistResponse::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsoutLobbyLobbylistResponse();
  return *internal_default_instance();
}

outLobbyLobbylistResponse* outLobbyLobbylistResponse::New(::google::protobuf::Arena* arena) const {
  outLobbyLobbylistResponse* n = new outLobbyLobbylistResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void outLobbyLobbylistResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.outLobbyLobbylistResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lobbylist_.Clear();
  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool outLobbyLobbylistResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.outLobbyLobbylistResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.msgLobby lobbyList = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_lobbylist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.outLobbyLobbylistResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.outLobbyLobbylistResponse)
  return false;
#undef DO_
}

void outLobbyLobbylistResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.outLobbyLobbylistResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // repeated .proto.msgLobby lobbyList = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lobbylist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->lobbylist(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.outLobbyLobbylistResponse)
}

::google::protobuf::uint8* outLobbyLobbylistResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.outLobbyLobbylistResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // repeated .proto.msgLobby lobbyList = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lobbylist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->lobbylist(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.outLobbyLobbylistResponse)
  return target;
}

size_t outLobbyLobbylistResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.outLobbyLobbylistResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool success = 1;
  if (has_success()) {
    total_size += 1 + 1;
  }
  // repeated .proto.msgLobby lobbyList = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->lobbylist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lobbylist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void outLobbyLobbylistResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.outLobbyLobbylistResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const outLobbyLobbylistResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const outLobbyLobbylistResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.outLobbyLobbylistResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.outLobbyLobbylistResponse)
    MergeFrom(*source);
  }
}

void outLobbyLobbylistResponse::MergeFrom(const outLobbyLobbylistResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.outLobbyLobbylistResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lobbylist_.MergeFrom(from.lobbylist_);
  if (from.has_success()) {
    set_success(from.success());
  }
}

void outLobbyLobbylistResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.outLobbyLobbylistResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void outLobbyLobbylistResponse::CopyFrom(const outLobbyLobbylistResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.outLobbyLobbylistResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool outLobbyLobbylistResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->lobbylist())) return false;
  return true;
}

void outLobbyLobbylistResponse::Swap(outLobbyLobbylistResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void outLobbyLobbylistResponse::InternalSwap(outLobbyLobbylistResponse* other) {
  using std::swap;
  lobbylist_.InternalSwap(&other->lobbylist_);
  swap(success_, other->success_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata outLobbyLobbylistResponse::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void outLobbyEnterLobbyRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int outLobbyEnterLobbyRequest::kLobbyUIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

outLobbyEnterLobbyRequest::outLobbyEnterLobbyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsoutLobbyEnterLobbyRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.outLobbyEnterLobbyRequest)
}
outLobbyEnterLobbyRequest::outLobbyEnterLobbyRequest(const outLobbyEnterLobbyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lobbyuid_ = from.lobbyuid_;
  // @@protoc_insertion_point(copy_constructor:proto.outLobbyEnterLobbyRequest)
}

void outLobbyEnterLobbyRequest::SharedCtor() {
  _cached_size_ = 0;
  lobbyuid_ = 0;
}

outLobbyEnterLobbyRequest::~outLobbyEnterLobbyRequest() {
  // @@protoc_insertion_point(destructor:proto.outLobbyEnterLobbyRequest)
  SharedDtor();
}

void outLobbyEnterLobbyRequest::SharedDtor() {
}

void outLobbyEnterLobbyRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* outLobbyEnterLobbyRequest::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const outLobbyEnterLobbyRequest& outLobbyEnterLobbyRequest::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsoutLobbyEnterLobbyRequest();
  return *internal_default_instance();
}

outLobbyEnterLobbyRequest* outLobbyEnterLobbyRequest::New(::google::protobuf::Arena* arena) const {
  outLobbyEnterLobbyRequest* n = new outLobbyEnterLobbyRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void outLobbyEnterLobbyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.outLobbyEnterLobbyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lobbyuid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool outLobbyEnterLobbyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.outLobbyEnterLobbyRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 lobbyUID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_lobbyuid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lobbyuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.outLobbyEnterLobbyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.outLobbyEnterLobbyRequest)
  return false;
#undef DO_
}

void outLobbyEnterLobbyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.outLobbyEnterLobbyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 lobbyUID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lobbyuid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.outLobbyEnterLobbyRequest)
}

::google::protobuf::uint8* outLobbyEnterLobbyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.outLobbyEnterLobbyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 lobbyUID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lobbyuid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.outLobbyEnterLobbyRequest)
  return target;
}

size_t outLobbyEnterLobbyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.outLobbyEnterLobbyRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 lobbyUID = 1;
  if (has_lobbyuid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lobbyuid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void outLobbyEnterLobbyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.outLobbyEnterLobbyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const outLobbyEnterLobbyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const outLobbyEnterLobbyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.outLobbyEnterLobbyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.outLobbyEnterLobbyRequest)
    MergeFrom(*source);
  }
}

void outLobbyEnterLobbyRequest::MergeFrom(const outLobbyEnterLobbyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.outLobbyEnterLobbyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_lobbyuid()) {
    set_lobbyuid(from.lobbyuid());
  }
}

void outLobbyEnterLobbyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.outLobbyEnterLobbyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void outLobbyEnterLobbyRequest::CopyFrom(const outLobbyEnterLobbyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.outLobbyEnterLobbyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool outLobbyEnterLobbyRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void outLobbyEnterLobbyRequest::Swap(outLobbyEnterLobbyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void outLobbyEnterLobbyRequest::InternalSwap(outLobbyEnterLobbyRequest* other) {
  using std::swap;
  swap(lobbyuid_, other->lobbyuid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata outLobbyEnterLobbyRequest::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void outLobbyEnterLobbyResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int outLobbyEnterLobbyResponse::kSuccessFieldNumber;
const int outLobbyEnterLobbyResponse::kLobbyUIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

outLobbyEnterLobbyResponse::outLobbyEnterLobbyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsoutLobbyEnterLobbyResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.outLobbyEnterLobbyResponse)
}
outLobbyEnterLobbyResponse::outLobbyEnterLobbyResponse(const outLobbyEnterLobbyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&success_, &from.success_,
    static_cast<size_t>(reinterpret_cast<char*>(&lobbyuid_) -
    reinterpret_cast<char*>(&success_)) + sizeof(lobbyuid_));
  // @@protoc_insertion_point(copy_constructor:proto.outLobbyEnterLobbyResponse)
}

void outLobbyEnterLobbyResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lobbyuid_) -
      reinterpret_cast<char*>(&success_)) + sizeof(lobbyuid_));
}

outLobbyEnterLobbyResponse::~outLobbyEnterLobbyResponse() {
  // @@protoc_insertion_point(destructor:proto.outLobbyEnterLobbyResponse)
  SharedDtor();
}

void outLobbyEnterLobbyResponse::SharedDtor() {
}

void outLobbyEnterLobbyResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* outLobbyEnterLobbyResponse::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const outLobbyEnterLobbyResponse& outLobbyEnterLobbyResponse::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsoutLobbyEnterLobbyResponse();
  return *internal_default_instance();
}

outLobbyEnterLobbyResponse* outLobbyEnterLobbyResponse::New(::google::protobuf::Arena* arena) const {
  outLobbyEnterLobbyResponse* n = new outLobbyEnterLobbyResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void outLobbyEnterLobbyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.outLobbyEnterLobbyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&success_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&lobbyuid_) -
        reinterpret_cast<char*>(&success_)) + sizeof(lobbyuid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool outLobbyEnterLobbyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.outLobbyEnterLobbyResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 lobbyUID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_lobbyuid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lobbyuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.outLobbyEnterLobbyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.outLobbyEnterLobbyResponse)
  return false;
#undef DO_
}

void outLobbyEnterLobbyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.outLobbyEnterLobbyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // required int32 lobbyUID = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->lobbyuid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.outLobbyEnterLobbyResponse)
}

::google::protobuf::uint8* outLobbyEnterLobbyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.outLobbyEnterLobbyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // required int32 lobbyUID = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->lobbyuid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.outLobbyEnterLobbyResponse)
  return target;
}

size_t outLobbyEnterLobbyResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:proto.outLobbyEnterLobbyResponse)
  size_t total_size = 0;

  if (has_success()) {
    // required bool success = 1;
    total_size += 1 + 1;
  }

  if (has_lobbyuid()) {
    // required int32 lobbyUID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lobbyuid());
  }

  return total_size;
}
size_t outLobbyEnterLobbyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.outLobbyEnterLobbyResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bool success = 1;
    total_size += 1 + 1;

    // required int32 lobbyUID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lobbyuid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void outLobbyEnterLobbyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.outLobbyEnterLobbyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const outLobbyEnterLobbyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const outLobbyEnterLobbyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.outLobbyEnterLobbyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.outLobbyEnterLobbyResponse)
    MergeFrom(*source);
  }
}

void outLobbyEnterLobbyResponse::MergeFrom(const outLobbyEnterLobbyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.outLobbyEnterLobbyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      success_ = from.success_;
    }
    if (cached_has_bits & 0x00000002u) {
      lobbyuid_ = from.lobbyuid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void outLobbyEnterLobbyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.outLobbyEnterLobbyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void outLobbyEnterLobbyResponse::CopyFrom(const outLobbyEnterLobbyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.outLobbyEnterLobbyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool outLobbyEnterLobbyResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void outLobbyEnterLobbyResponse::Swap(outLobbyEnterLobbyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void outLobbyEnterLobbyResponse::InternalSwap(outLobbyEnterLobbyResponse* other) {
  using std::swap;
  swap(success_, other->success_);
  swap(lobbyuid_, other->lobbyuid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata outLobbyEnterLobbyResponse::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void inLobbyPlayerlistRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int inLobbyPlayerlistRequest::kLobbyUIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

inLobbyPlayerlistRequest::inLobbyPlayerlistRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsinLobbyPlayerlistRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.inLobbyPlayerlistRequest)
}
inLobbyPlayerlistRequest::inLobbyPlayerlistRequest(const inLobbyPlayerlistRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lobbyuid_ = from.lobbyuid_;
  // @@protoc_insertion_point(copy_constructor:proto.inLobbyPlayerlistRequest)
}

void inLobbyPlayerlistRequest::SharedCtor() {
  _cached_size_ = 0;
  lobbyuid_ = 0;
}

inLobbyPlayerlistRequest::~inLobbyPlayerlistRequest() {
  // @@protoc_insertion_point(destructor:proto.inLobbyPlayerlistRequest)
  SharedDtor();
}

void inLobbyPlayerlistRequest::SharedDtor() {
}

void inLobbyPlayerlistRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* inLobbyPlayerlistRequest::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const inLobbyPlayerlistRequest& inLobbyPlayerlistRequest::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsinLobbyPlayerlistRequest();
  return *internal_default_instance();
}

inLobbyPlayerlistRequest* inLobbyPlayerlistRequest::New(::google::protobuf::Arena* arena) const {
  inLobbyPlayerlistRequest* n = new inLobbyPlayerlistRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void inLobbyPlayerlistRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.inLobbyPlayerlistRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lobbyuid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool inLobbyPlayerlistRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.inLobbyPlayerlistRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 lobbyUID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_lobbyuid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lobbyuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.inLobbyPlayerlistRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.inLobbyPlayerlistRequest)
  return false;
#undef DO_
}

void inLobbyPlayerlistRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.inLobbyPlayerlistRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 lobbyUID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lobbyuid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.inLobbyPlayerlistRequest)
}

::google::protobuf::uint8* inLobbyPlayerlistRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.inLobbyPlayerlistRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 lobbyUID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lobbyuid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.inLobbyPlayerlistRequest)
  return target;
}

size_t inLobbyPlayerlistRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.inLobbyPlayerlistRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 lobbyUID = 1;
  if (has_lobbyuid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lobbyuid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void inLobbyPlayerlistRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.inLobbyPlayerlistRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const inLobbyPlayerlistRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const inLobbyPlayerlistRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.inLobbyPlayerlistRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.inLobbyPlayerlistRequest)
    MergeFrom(*source);
  }
}

void inLobbyPlayerlistRequest::MergeFrom(const inLobbyPlayerlistRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.inLobbyPlayerlistRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_lobbyuid()) {
    set_lobbyuid(from.lobbyuid());
  }
}

void inLobbyPlayerlistRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.inLobbyPlayerlistRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void inLobbyPlayerlistRequest::CopyFrom(const inLobbyPlayerlistRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.inLobbyPlayerlistRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool inLobbyPlayerlistRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void inLobbyPlayerlistRequest::Swap(inLobbyPlayerlistRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void inLobbyPlayerlistRequest::InternalSwap(inLobbyPlayerlistRequest* other) {
  using std::swap;
  swap(lobbyuid_, other->lobbyuid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata inLobbyPlayerlistRequest::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void inLobbyPlayerlistResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int inLobbyPlayerlistResponse::kSuccessFieldNumber;
const int inLobbyPlayerlistResponse::kLobbyUIDFieldNumber;
const int inLobbyPlayerlistResponse::kUserListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

inLobbyPlayerlistResponse::inLobbyPlayerlistResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsinLobbyPlayerlistResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.inLobbyPlayerlistResponse)
}
inLobbyPlayerlistResponse::inLobbyPlayerlistResponse(const inLobbyPlayerlistResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      userlist_(from.userlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&success_, &from.success_,
    static_cast<size_t>(reinterpret_cast<char*>(&lobbyuid_) -
    reinterpret_cast<char*>(&success_)) + sizeof(lobbyuid_));
  // @@protoc_insertion_point(copy_constructor:proto.inLobbyPlayerlistResponse)
}

void inLobbyPlayerlistResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lobbyuid_) -
      reinterpret_cast<char*>(&success_)) + sizeof(lobbyuid_));
}

inLobbyPlayerlistResponse::~inLobbyPlayerlistResponse() {
  // @@protoc_insertion_point(destructor:proto.inLobbyPlayerlistResponse)
  SharedDtor();
}

void inLobbyPlayerlistResponse::SharedDtor() {
}

void inLobbyPlayerlistResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* inLobbyPlayerlistResponse::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const inLobbyPlayerlistResponse& inLobbyPlayerlistResponse::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsinLobbyPlayerlistResponse();
  return *internal_default_instance();
}

inLobbyPlayerlistResponse* inLobbyPlayerlistResponse::New(::google::protobuf::Arena* arena) const {
  inLobbyPlayerlistResponse* n = new inLobbyPlayerlistResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void inLobbyPlayerlistResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.inLobbyPlayerlistResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userlist_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&success_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&lobbyuid_) -
        reinterpret_cast<char*>(&success_)) + sizeof(lobbyuid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool inLobbyPlayerlistResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.inLobbyPlayerlistResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 lobbyUID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_lobbyuid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lobbyuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.msgUserInfo userList = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_userlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.inLobbyPlayerlistResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.inLobbyPlayerlistResponse)
  return false;
#undef DO_
}

void inLobbyPlayerlistResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.inLobbyPlayerlistResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // required int32 lobbyUID = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->lobbyuid(), output);
  }

  // repeated .proto.msgUserInfo userList = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->userlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->userlist(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.inLobbyPlayerlistResponse)
}

::google::protobuf::uint8* inLobbyPlayerlistResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.inLobbyPlayerlistResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // required int32 lobbyUID = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->lobbyuid(), target);
  }

  // repeated .proto.msgUserInfo userList = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->userlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->userlist(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.inLobbyPlayerlistResponse)
  return target;
}

size_t inLobbyPlayerlistResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:proto.inLobbyPlayerlistResponse)
  size_t total_size = 0;

  if (has_success()) {
    // required bool success = 1;
    total_size += 1 + 1;
  }

  if (has_lobbyuid()) {
    // required int32 lobbyUID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lobbyuid());
  }

  return total_size;
}
size_t inLobbyPlayerlistResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.inLobbyPlayerlistResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bool success = 1;
    total_size += 1 + 1;

    // required int32 lobbyUID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lobbyuid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .proto.msgUserInfo userList = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->userlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->userlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void inLobbyPlayerlistResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.inLobbyPlayerlistResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const inLobbyPlayerlistResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const inLobbyPlayerlistResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.inLobbyPlayerlistResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.inLobbyPlayerlistResponse)
    MergeFrom(*source);
  }
}

void inLobbyPlayerlistResponse::MergeFrom(const inLobbyPlayerlistResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.inLobbyPlayerlistResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  userlist_.MergeFrom(from.userlist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      success_ = from.success_;
    }
    if (cached_has_bits & 0x00000002u) {
      lobbyuid_ = from.lobbyuid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void inLobbyPlayerlistResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.inLobbyPlayerlistResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void inLobbyPlayerlistResponse::CopyFrom(const inLobbyPlayerlistResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.inLobbyPlayerlistResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool inLobbyPlayerlistResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->userlist())) return false;
  return true;
}

void inLobbyPlayerlistResponse::Swap(inLobbyPlayerlistResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void inLobbyPlayerlistResponse::InternalSwap(inLobbyPlayerlistResponse* other) {
  using std::swap;
  userlist_.InternalSwap(&other->userlist_);
  swap(success_, other->success_);
  swap(lobbyuid_, other->lobbyuid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata inLobbyPlayerlistResponse::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void inLobbyEnterRoomRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int inLobbyEnterRoomRequest::kRoomUIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

inLobbyEnterRoomRequest::inLobbyEnterRoomRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsinLobbyEnterRoomRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.inLobbyEnterRoomRequest)
}
inLobbyEnterRoomRequest::inLobbyEnterRoomRequest(const inLobbyEnterRoomRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomuid_ = from.roomuid_;
  // @@protoc_insertion_point(copy_constructor:proto.inLobbyEnterRoomRequest)
}

void inLobbyEnterRoomRequest::SharedCtor() {
  _cached_size_ = 0;
  roomuid_ = 0;
}

inLobbyEnterRoomRequest::~inLobbyEnterRoomRequest() {
  // @@protoc_insertion_point(destructor:proto.inLobbyEnterRoomRequest)
  SharedDtor();
}

void inLobbyEnterRoomRequest::SharedDtor() {
}

void inLobbyEnterRoomRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* inLobbyEnterRoomRequest::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const inLobbyEnterRoomRequest& inLobbyEnterRoomRequest::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsinLobbyEnterRoomRequest();
  return *internal_default_instance();
}

inLobbyEnterRoomRequest* inLobbyEnterRoomRequest::New(::google::protobuf::Arena* arena) const {
  inLobbyEnterRoomRequest* n = new inLobbyEnterRoomRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void inLobbyEnterRoomRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.inLobbyEnterRoomRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roomuid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool inLobbyEnterRoomRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.inLobbyEnterRoomRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 roomUID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_roomuid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.inLobbyEnterRoomRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.inLobbyEnterRoomRequest)
  return false;
#undef DO_
}

void inLobbyEnterRoomRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.inLobbyEnterRoomRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 roomUID = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->roomuid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.inLobbyEnterRoomRequest)
}

::google::protobuf::uint8* inLobbyEnterRoomRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.inLobbyEnterRoomRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 roomUID = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->roomuid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.inLobbyEnterRoomRequest)
  return target;
}

size_t inLobbyEnterRoomRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.inLobbyEnterRoomRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 roomUID = 2;
  if (has_roomuid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roomuid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void inLobbyEnterRoomRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.inLobbyEnterRoomRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const inLobbyEnterRoomRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const inLobbyEnterRoomRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.inLobbyEnterRoomRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.inLobbyEnterRoomRequest)
    MergeFrom(*source);
  }
}

void inLobbyEnterRoomRequest::MergeFrom(const inLobbyEnterRoomRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.inLobbyEnterRoomRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_roomuid()) {
    set_roomuid(from.roomuid());
  }
}

void inLobbyEnterRoomRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.inLobbyEnterRoomRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void inLobbyEnterRoomRequest::CopyFrom(const inLobbyEnterRoomRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.inLobbyEnterRoomRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool inLobbyEnterRoomRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void inLobbyEnterRoomRequest::Swap(inLobbyEnterRoomRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void inLobbyEnterRoomRequest::InternalSwap(inLobbyEnterRoomRequest* other) {
  using std::swap;
  swap(roomuid_, other->roomuid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata inLobbyEnterRoomRequest::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void inLobbyEnterRoomResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int inLobbyEnterRoomResponse::kSuccessFieldNumber;
const int inLobbyEnterRoomResponse::kRoomUIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

inLobbyEnterRoomResponse::inLobbyEnterRoomResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsinLobbyEnterRoomResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.inLobbyEnterRoomResponse)
}
inLobbyEnterRoomResponse::inLobbyEnterRoomResponse(const inLobbyEnterRoomResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&success_, &from.success_,
    static_cast<size_t>(reinterpret_cast<char*>(&roomuid_) -
    reinterpret_cast<char*>(&success_)) + sizeof(roomuid_));
  // @@protoc_insertion_point(copy_constructor:proto.inLobbyEnterRoomResponse)
}

void inLobbyEnterRoomResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomuid_) -
      reinterpret_cast<char*>(&success_)) + sizeof(roomuid_));
}

inLobbyEnterRoomResponse::~inLobbyEnterRoomResponse() {
  // @@protoc_insertion_point(destructor:proto.inLobbyEnterRoomResponse)
  SharedDtor();
}

void inLobbyEnterRoomResponse::SharedDtor() {
}

void inLobbyEnterRoomResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* inLobbyEnterRoomResponse::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const inLobbyEnterRoomResponse& inLobbyEnterRoomResponse::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsinLobbyEnterRoomResponse();
  return *internal_default_instance();
}

inLobbyEnterRoomResponse* inLobbyEnterRoomResponse::New(::google::protobuf::Arena* arena) const {
  inLobbyEnterRoomResponse* n = new inLobbyEnterRoomResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void inLobbyEnterRoomResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.inLobbyEnterRoomResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&success_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&roomuid_) -
        reinterpret_cast<char*>(&success_)) + sizeof(roomuid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool inLobbyEnterRoomResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.inLobbyEnterRoomResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 roomUID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_roomuid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.inLobbyEnterRoomResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.inLobbyEnterRoomResponse)
  return false;
#undef DO_
}

void inLobbyEnterRoomResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.inLobbyEnterRoomResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // required int32 roomUID = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->roomuid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.inLobbyEnterRoomResponse)
}

::google::protobuf::uint8* inLobbyEnterRoomResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.inLobbyEnterRoomResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // required int32 roomUID = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->roomuid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.inLobbyEnterRoomResponse)
  return target;
}

size_t inLobbyEnterRoomResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:proto.inLobbyEnterRoomResponse)
  size_t total_size = 0;

  if (has_success()) {
    // required bool success = 1;
    total_size += 1 + 1;
  }

  if (has_roomuid()) {
    // required int32 roomUID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roomuid());
  }

  return total_size;
}
size_t inLobbyEnterRoomResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.inLobbyEnterRoomResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bool success = 1;
    total_size += 1 + 1;

    // required int32 roomUID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roomuid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void inLobbyEnterRoomResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.inLobbyEnterRoomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const inLobbyEnterRoomResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const inLobbyEnterRoomResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.inLobbyEnterRoomResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.inLobbyEnterRoomResponse)
    MergeFrom(*source);
  }
}

void inLobbyEnterRoomResponse::MergeFrom(const inLobbyEnterRoomResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.inLobbyEnterRoomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      success_ = from.success_;
    }
    if (cached_has_bits & 0x00000002u) {
      roomuid_ = from.roomuid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void inLobbyEnterRoomResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.inLobbyEnterRoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void inLobbyEnterRoomResponse::CopyFrom(const inLobbyEnterRoomResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.inLobbyEnterRoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool inLobbyEnterRoomResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void inLobbyEnterRoomResponse::Swap(inLobbyEnterRoomResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void inLobbyEnterRoomResponse::InternalSwap(inLobbyEnterRoomResponse* other) {
  using std::swap;
  swap(success_, other->success_);
  swap(roomuid_, other->roomuid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata inLobbyEnterRoomResponse::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void inLobbyLeaveLobbyRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int inLobbyLeaveLobbyRequest::kLobbyUIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

inLobbyLeaveLobbyRequest::inLobbyLeaveLobbyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsinLobbyLeaveLobbyRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.inLobbyLeaveLobbyRequest)
}
inLobbyLeaveLobbyRequest::inLobbyLeaveLobbyRequest(const inLobbyLeaveLobbyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lobbyuid_ = from.lobbyuid_;
  // @@protoc_insertion_point(copy_constructor:proto.inLobbyLeaveLobbyRequest)
}

void inLobbyLeaveLobbyRequest::SharedCtor() {
  _cached_size_ = 0;
  lobbyuid_ = 0;
}

inLobbyLeaveLobbyRequest::~inLobbyLeaveLobbyRequest() {
  // @@protoc_insertion_point(destructor:proto.inLobbyLeaveLobbyRequest)
  SharedDtor();
}

void inLobbyLeaveLobbyRequest::SharedDtor() {
}

void inLobbyLeaveLobbyRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* inLobbyLeaveLobbyRequest::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const inLobbyLeaveLobbyRequest& inLobbyLeaveLobbyRequest::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsinLobbyLeaveLobbyRequest();
  return *internal_default_instance();
}

inLobbyLeaveLobbyRequest* inLobbyLeaveLobbyRequest::New(::google::protobuf::Arena* arena) const {
  inLobbyLeaveLobbyRequest* n = new inLobbyLeaveLobbyRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void inLobbyLeaveLobbyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.inLobbyLeaveLobbyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lobbyuid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool inLobbyLeaveLobbyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.inLobbyLeaveLobbyRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 lobbyUID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_lobbyuid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lobbyuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.inLobbyLeaveLobbyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.inLobbyLeaveLobbyRequest)
  return false;
#undef DO_
}

void inLobbyLeaveLobbyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.inLobbyLeaveLobbyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 lobbyUID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lobbyuid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.inLobbyLeaveLobbyRequest)
}

::google::protobuf::uint8* inLobbyLeaveLobbyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.inLobbyLeaveLobbyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 lobbyUID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lobbyuid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.inLobbyLeaveLobbyRequest)
  return target;
}

size_t inLobbyLeaveLobbyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.inLobbyLeaveLobbyRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 lobbyUID = 1;
  if (has_lobbyuid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lobbyuid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void inLobbyLeaveLobbyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.inLobbyLeaveLobbyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const inLobbyLeaveLobbyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const inLobbyLeaveLobbyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.inLobbyLeaveLobbyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.inLobbyLeaveLobbyRequest)
    MergeFrom(*source);
  }
}

void inLobbyLeaveLobbyRequest::MergeFrom(const inLobbyLeaveLobbyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.inLobbyLeaveLobbyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_lobbyuid()) {
    set_lobbyuid(from.lobbyuid());
  }
}

void inLobbyLeaveLobbyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.inLobbyLeaveLobbyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void inLobbyLeaveLobbyRequest::CopyFrom(const inLobbyLeaveLobbyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.inLobbyLeaveLobbyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool inLobbyLeaveLobbyRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void inLobbyLeaveLobbyRequest::Swap(inLobbyLeaveLobbyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void inLobbyLeaveLobbyRequest::InternalSwap(inLobbyLeaveLobbyRequest* other) {
  using std::swap;
  swap(lobbyuid_, other->lobbyuid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata inLobbyLeaveLobbyRequest::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void inLobbyLeaveLobbyResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int inLobbyLeaveLobbyResponse::kSuccessFieldNumber;
const int inLobbyLeaveLobbyResponse::kLobbyUIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

inLobbyLeaveLobbyResponse::inLobbyLeaveLobbyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsinLobbyLeaveLobbyResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.inLobbyLeaveLobbyResponse)
}
inLobbyLeaveLobbyResponse::inLobbyLeaveLobbyResponse(const inLobbyLeaveLobbyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&success_, &from.success_,
    static_cast<size_t>(reinterpret_cast<char*>(&lobbyuid_) -
    reinterpret_cast<char*>(&success_)) + sizeof(lobbyuid_));
  // @@protoc_insertion_point(copy_constructor:proto.inLobbyLeaveLobbyResponse)
}

void inLobbyLeaveLobbyResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lobbyuid_) -
      reinterpret_cast<char*>(&success_)) + sizeof(lobbyuid_));
}

inLobbyLeaveLobbyResponse::~inLobbyLeaveLobbyResponse() {
  // @@protoc_insertion_point(destructor:proto.inLobbyLeaveLobbyResponse)
  SharedDtor();
}

void inLobbyLeaveLobbyResponse::SharedDtor() {
}

void inLobbyLeaveLobbyResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* inLobbyLeaveLobbyResponse::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const inLobbyLeaveLobbyResponse& inLobbyLeaveLobbyResponse::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsinLobbyLeaveLobbyResponse();
  return *internal_default_instance();
}

inLobbyLeaveLobbyResponse* inLobbyLeaveLobbyResponse::New(::google::protobuf::Arena* arena) const {
  inLobbyLeaveLobbyResponse* n = new inLobbyLeaveLobbyResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void inLobbyLeaveLobbyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.inLobbyLeaveLobbyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&success_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&lobbyuid_) -
        reinterpret_cast<char*>(&success_)) + sizeof(lobbyuid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool inLobbyLeaveLobbyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.inLobbyLeaveLobbyResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 lobbyUID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_lobbyuid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lobbyuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.inLobbyLeaveLobbyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.inLobbyLeaveLobbyResponse)
  return false;
#undef DO_
}

void inLobbyLeaveLobbyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.inLobbyLeaveLobbyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // required int32 lobbyUID = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->lobbyuid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.inLobbyLeaveLobbyResponse)
}

::google::protobuf::uint8* inLobbyLeaveLobbyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.inLobbyLeaveLobbyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // required int32 lobbyUID = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->lobbyuid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.inLobbyLeaveLobbyResponse)
  return target;
}

size_t inLobbyLeaveLobbyResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:proto.inLobbyLeaveLobbyResponse)
  size_t total_size = 0;

  if (has_success()) {
    // required bool success = 1;
    total_size += 1 + 1;
  }

  if (has_lobbyuid()) {
    // required int32 lobbyUID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lobbyuid());
  }

  return total_size;
}
size_t inLobbyLeaveLobbyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.inLobbyLeaveLobbyResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bool success = 1;
    total_size += 1 + 1;

    // required int32 lobbyUID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lobbyuid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void inLobbyLeaveLobbyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.inLobbyLeaveLobbyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const inLobbyLeaveLobbyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const inLobbyLeaveLobbyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.inLobbyLeaveLobbyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.inLobbyLeaveLobbyResponse)
    MergeFrom(*source);
  }
}

void inLobbyLeaveLobbyResponse::MergeFrom(const inLobbyLeaveLobbyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.inLobbyLeaveLobbyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      success_ = from.success_;
    }
    if (cached_has_bits & 0x00000002u) {
      lobbyuid_ = from.lobbyuid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void inLobbyLeaveLobbyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.inLobbyLeaveLobbyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void inLobbyLeaveLobbyResponse::CopyFrom(const inLobbyLeaveLobbyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.inLobbyLeaveLobbyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool inLobbyLeaveLobbyResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void inLobbyLeaveLobbyResponse::Swap(inLobbyLeaveLobbyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void inLobbyLeaveLobbyResponse::InternalSwap(inLobbyLeaveLobbyResponse* other) {
  using std::swap;
  swap(success_, other->success_);
  swap(lobbyuid_, other->lobbyuid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata inLobbyLeaveLobbyResponse::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void inLobbyChatRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int inLobbyChatRequest::kLobbyUIDFieldNumber;
const int inLobbyChatRequest::kChatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

inLobbyChatRequest::inLobbyChatRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsinLobbyChatRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.inLobbyChatRequest)
}
inLobbyChatRequest::inLobbyChatRequest(const inLobbyChatRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_chat()) {
    chat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_);
  }
  lobbyuid_ = from.lobbyuid_;
  // @@protoc_insertion_point(copy_constructor:proto.inLobbyChatRequest)
}

void inLobbyChatRequest::SharedCtor() {
  _cached_size_ = 0;
  chat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lobbyuid_ = 0;
}

inLobbyChatRequest::~inLobbyChatRequest() {
  // @@protoc_insertion_point(destructor:proto.inLobbyChatRequest)
  SharedDtor();
}

void inLobbyChatRequest::SharedDtor() {
  chat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void inLobbyChatRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* inLobbyChatRequest::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const inLobbyChatRequest& inLobbyChatRequest::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsinLobbyChatRequest();
  return *internal_default_instance();
}

inLobbyChatRequest* inLobbyChatRequest::New(::google::protobuf::Arena* arena) const {
  inLobbyChatRequest* n = new inLobbyChatRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void inLobbyChatRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.inLobbyChatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!chat_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*chat_.UnsafeRawStringPointer())->clear();
  }
  lobbyuid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool inLobbyChatRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.inLobbyChatRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 lobbyUID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_lobbyuid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lobbyuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string chat = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chat()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->chat().data(), static_cast<int>(this->chat().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.inLobbyChatRequest.chat");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.inLobbyChatRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.inLobbyChatRequest)
  return false;
#undef DO_
}

void inLobbyChatRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.inLobbyChatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 lobbyUID = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lobbyuid(), output);
  }

  // required string chat = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat().data(), static_cast<int>(this->chat().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.inLobbyChatRequest.chat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->chat(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.inLobbyChatRequest)
}

::google::protobuf::uint8* inLobbyChatRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.inLobbyChatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 lobbyUID = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lobbyuid(), target);
  }

  // required string chat = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat().data(), static_cast<int>(this->chat().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.inLobbyChatRequest.chat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->chat(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.inLobbyChatRequest)
  return target;
}

size_t inLobbyChatRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:proto.inLobbyChatRequest)
  size_t total_size = 0;

  if (has_chat()) {
    // required string chat = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chat());
  }

  if (has_lobbyuid()) {
    // required int32 lobbyUID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lobbyuid());
  }

  return total_size;
}
size_t inLobbyChatRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.inLobbyChatRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string chat = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chat());

    // required int32 lobbyUID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lobbyuid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void inLobbyChatRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.inLobbyChatRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const inLobbyChatRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const inLobbyChatRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.inLobbyChatRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.inLobbyChatRequest)
    MergeFrom(*source);
  }
}

void inLobbyChatRequest::MergeFrom(const inLobbyChatRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.inLobbyChatRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_chat();
      chat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_);
    }
    if (cached_has_bits & 0x00000002u) {
      lobbyuid_ = from.lobbyuid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void inLobbyChatRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.inLobbyChatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void inLobbyChatRequest::CopyFrom(const inLobbyChatRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.inLobbyChatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool inLobbyChatRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void inLobbyChatRequest::Swap(inLobbyChatRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void inLobbyChatRequest::InternalSwap(inLobbyChatRequest* other) {
  using std::swap;
  chat_.Swap(&other->chat_);
  swap(lobbyuid_, other->lobbyuid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata inLobbyChatRequest::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void inLobbyChatResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int inLobbyChatResponse::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

inLobbyChatResponse::inLobbyChatResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsinLobbyChatResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.inLobbyChatResponse)
}
inLobbyChatResponse::inLobbyChatResponse(const inLobbyChatResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:proto.inLobbyChatResponse)
}

void inLobbyChatResponse::SharedCtor() {
  _cached_size_ = 0;
  success_ = false;
}

inLobbyChatResponse::~inLobbyChatResponse() {
  // @@protoc_insertion_point(destructor:proto.inLobbyChatResponse)
  SharedDtor();
}

void inLobbyChatResponse::SharedDtor() {
}

void inLobbyChatResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* inLobbyChatResponse::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const inLobbyChatResponse& inLobbyChatResponse::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsinLobbyChatResponse();
  return *internal_default_instance();
}

inLobbyChatResponse* inLobbyChatResponse::New(::google::protobuf::Arena* arena) const {
  inLobbyChatResponse* n = new inLobbyChatResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void inLobbyChatResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.inLobbyChatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool inLobbyChatResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.inLobbyChatResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.inLobbyChatResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.inLobbyChatResponse)
  return false;
#undef DO_
}

void inLobbyChatResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.inLobbyChatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.inLobbyChatResponse)
}

::google::protobuf::uint8* inLobbyChatResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.inLobbyChatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.inLobbyChatResponse)
  return target;
}

size_t inLobbyChatResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.inLobbyChatResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool success = 1;
  if (has_success()) {
    total_size += 1 + 1;
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void inLobbyChatResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.inLobbyChatResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const inLobbyChatResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const inLobbyChatResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.inLobbyChatResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.inLobbyChatResponse)
    MergeFrom(*source);
  }
}

void inLobbyChatResponse::MergeFrom(const inLobbyChatResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.inLobbyChatResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_success()) {
    set_success(from.success());
  }
}

void inLobbyChatResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.inLobbyChatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void inLobbyChatResponse::CopyFrom(const inLobbyChatResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.inLobbyChatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool inLobbyChatResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void inLobbyChatResponse::Swap(inLobbyChatResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void inLobbyChatResponse::InternalSwap(inLobbyChatResponse* other) {
  using std::swap;
  swap(success_, other->success_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata inLobbyChatResponse::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void inLobbyChatBroadcast::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int inLobbyChatBroadcast::kLobbyUIDFieldNumber;
const int inLobbyChatBroadcast::kChatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

inLobbyChatBroadcast::inLobbyChatBroadcast()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsinLobbyChatBroadcast();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.inLobbyChatBroadcast)
}
inLobbyChatBroadcast::inLobbyChatBroadcast(const inLobbyChatBroadcast& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_chat()) {
    chat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_);
  }
  lobbyuid_ = from.lobbyuid_;
  // @@protoc_insertion_point(copy_constructor:proto.inLobbyChatBroadcast)
}

void inLobbyChatBroadcast::SharedCtor() {
  _cached_size_ = 0;
  chat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lobbyuid_ = 0;
}

inLobbyChatBroadcast::~inLobbyChatBroadcast() {
  // @@protoc_insertion_point(destructor:proto.inLobbyChatBroadcast)
  SharedDtor();
}

void inLobbyChatBroadcast::SharedDtor() {
  chat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void inLobbyChatBroadcast::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* inLobbyChatBroadcast::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const inLobbyChatBroadcast& inLobbyChatBroadcast::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsinLobbyChatBroadcast();
  return *internal_default_instance();
}

inLobbyChatBroadcast* inLobbyChatBroadcast::New(::google::protobuf::Arena* arena) const {
  inLobbyChatBroadcast* n = new inLobbyChatBroadcast;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void inLobbyChatBroadcast::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.inLobbyChatBroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!chat_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*chat_.UnsafeRawStringPointer())->clear();
  }
  lobbyuid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool inLobbyChatBroadcast::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.inLobbyChatBroadcast)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 lobbyUID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_lobbyuid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lobbyuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string chat = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chat()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->chat().data(), static_cast<int>(this->chat().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.inLobbyChatBroadcast.chat");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.inLobbyChatBroadcast)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.inLobbyChatBroadcast)
  return false;
#undef DO_
}

void inLobbyChatBroadcast::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.inLobbyChatBroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 lobbyUID = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lobbyuid(), output);
  }

  // required string chat = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat().data(), static_cast<int>(this->chat().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.inLobbyChatBroadcast.chat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->chat(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.inLobbyChatBroadcast)
}

::google::protobuf::uint8* inLobbyChatBroadcast::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.inLobbyChatBroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 lobbyUID = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lobbyuid(), target);
  }

  // required string chat = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat().data(), static_cast<int>(this->chat().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.inLobbyChatBroadcast.chat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->chat(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.inLobbyChatBroadcast)
  return target;
}

size_t inLobbyChatBroadcast::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:proto.inLobbyChatBroadcast)
  size_t total_size = 0;

  if (has_chat()) {
    // required string chat = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chat());
  }

  if (has_lobbyuid()) {
    // required int32 lobbyUID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lobbyuid());
  }

  return total_size;
}
size_t inLobbyChatBroadcast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.inLobbyChatBroadcast)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string chat = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chat());

    // required int32 lobbyUID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lobbyuid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void inLobbyChatBroadcast::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.inLobbyChatBroadcast)
  GOOGLE_DCHECK_NE(&from, this);
  const inLobbyChatBroadcast* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const inLobbyChatBroadcast>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.inLobbyChatBroadcast)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.inLobbyChatBroadcast)
    MergeFrom(*source);
  }
}

void inLobbyChatBroadcast::MergeFrom(const inLobbyChatBroadcast& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.inLobbyChatBroadcast)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_chat();
      chat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_);
    }
    if (cached_has_bits & 0x00000002u) {
      lobbyuid_ = from.lobbyuid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void inLobbyChatBroadcast::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.inLobbyChatBroadcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void inLobbyChatBroadcast::CopyFrom(const inLobbyChatBroadcast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.inLobbyChatBroadcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool inLobbyChatBroadcast::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void inLobbyChatBroadcast::Swap(inLobbyChatBroadcast* other) {
  if (other == this) return;
  InternalSwap(other);
}
void inLobbyChatBroadcast::InternalSwap(inLobbyChatBroadcast* other) {
  using std::swap;
  chat_.Swap(&other->chat_);
  swap(lobbyuid_, other->lobbyuid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata inLobbyChatBroadcast::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void inRoomChatRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int inRoomChatRequest::kRoomUIDFieldNumber;
const int inRoomChatRequest::kChatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

inRoomChatRequest::inRoomChatRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsinRoomChatRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.inRoomChatRequest)
}
inRoomChatRequest::inRoomChatRequest(const inRoomChatRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_chat()) {
    chat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_);
  }
  roomuid_ = from.roomuid_;
  // @@protoc_insertion_point(copy_constructor:proto.inRoomChatRequest)
}

void inRoomChatRequest::SharedCtor() {
  _cached_size_ = 0;
  chat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roomuid_ = 0;
}

inRoomChatRequest::~inRoomChatRequest() {
  // @@protoc_insertion_point(destructor:proto.inRoomChatRequest)
  SharedDtor();
}

void inRoomChatRequest::SharedDtor() {
  chat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void inRoomChatRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* inRoomChatRequest::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const inRoomChatRequest& inRoomChatRequest::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsinRoomChatRequest();
  return *internal_default_instance();
}

inRoomChatRequest* inRoomChatRequest::New(::google::protobuf::Arena* arena) const {
  inRoomChatRequest* n = new inRoomChatRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void inRoomChatRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.inRoomChatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!chat_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*chat_.UnsafeRawStringPointer())->clear();
  }
  roomuid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool inRoomChatRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.inRoomChatRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 roomUID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_roomuid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string chat = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chat()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->chat().data(), static_cast<int>(this->chat().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.inRoomChatRequest.chat");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.inRoomChatRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.inRoomChatRequest)
  return false;
#undef DO_
}

void inRoomChatRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.inRoomChatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 roomUID = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roomuid(), output);
  }

  // required string chat = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat().data(), static_cast<int>(this->chat().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.inRoomChatRequest.chat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->chat(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.inRoomChatRequest)
}

::google::protobuf::uint8* inRoomChatRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.inRoomChatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 roomUID = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->roomuid(), target);
  }

  // required string chat = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat().data(), static_cast<int>(this->chat().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.inRoomChatRequest.chat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->chat(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.inRoomChatRequest)
  return target;
}

size_t inRoomChatRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:proto.inRoomChatRequest)
  size_t total_size = 0;

  if (has_chat()) {
    // required string chat = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chat());
  }

  if (has_roomuid()) {
    // required int32 roomUID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roomuid());
  }

  return total_size;
}
size_t inRoomChatRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.inRoomChatRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string chat = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chat());

    // required int32 roomUID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roomuid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void inRoomChatRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.inRoomChatRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const inRoomChatRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const inRoomChatRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.inRoomChatRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.inRoomChatRequest)
    MergeFrom(*source);
  }
}

void inRoomChatRequest::MergeFrom(const inRoomChatRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.inRoomChatRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_chat();
      chat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_);
    }
    if (cached_has_bits & 0x00000002u) {
      roomuid_ = from.roomuid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void inRoomChatRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.inRoomChatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void inRoomChatRequest::CopyFrom(const inRoomChatRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.inRoomChatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool inRoomChatRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void inRoomChatRequest::Swap(inRoomChatRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void inRoomChatRequest::InternalSwap(inRoomChatRequest* other) {
  using std::swap;
  chat_.Swap(&other->chat_);
  swap(roomuid_, other->roomuid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata inRoomChatRequest::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void inRoomChatResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int inRoomChatResponse::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

inRoomChatResponse::inRoomChatResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsinRoomChatResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.inRoomChatResponse)
}
inRoomChatResponse::inRoomChatResponse(const inRoomChatResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:proto.inRoomChatResponse)
}

void inRoomChatResponse::SharedCtor() {
  _cached_size_ = 0;
  success_ = false;
}

inRoomChatResponse::~inRoomChatResponse() {
  // @@protoc_insertion_point(destructor:proto.inRoomChatResponse)
  SharedDtor();
}

void inRoomChatResponse::SharedDtor() {
}

void inRoomChatResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* inRoomChatResponse::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const inRoomChatResponse& inRoomChatResponse::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsinRoomChatResponse();
  return *internal_default_instance();
}

inRoomChatResponse* inRoomChatResponse::New(::google::protobuf::Arena* arena) const {
  inRoomChatResponse* n = new inRoomChatResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void inRoomChatResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.inRoomChatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool inRoomChatResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.inRoomChatResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.inRoomChatResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.inRoomChatResponse)
  return false;
#undef DO_
}

void inRoomChatResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.inRoomChatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.inRoomChatResponse)
}

::google::protobuf::uint8* inRoomChatResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.inRoomChatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.inRoomChatResponse)
  return target;
}

size_t inRoomChatResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.inRoomChatResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool success = 1;
  if (has_success()) {
    total_size += 1 + 1;
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void inRoomChatResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.inRoomChatResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const inRoomChatResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const inRoomChatResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.inRoomChatResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.inRoomChatResponse)
    MergeFrom(*source);
  }
}

void inRoomChatResponse::MergeFrom(const inRoomChatResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.inRoomChatResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_success()) {
    set_success(from.success());
  }
}

void inRoomChatResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.inRoomChatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void inRoomChatResponse::CopyFrom(const inRoomChatResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.inRoomChatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool inRoomChatResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void inRoomChatResponse::Swap(inRoomChatResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void inRoomChatResponse::InternalSwap(inRoomChatResponse* other) {
  using std::swap;
  swap(success_, other->success_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata inRoomChatResponse::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void inRoomChatBroadcast::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int inRoomChatBroadcast::kRoomUIDFieldNumber;
const int inRoomChatBroadcast::kChatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

inRoomChatBroadcast::inRoomChatBroadcast()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsinRoomChatBroadcast();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.inRoomChatBroadcast)
}
inRoomChatBroadcast::inRoomChatBroadcast(const inRoomChatBroadcast& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_chat()) {
    chat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_);
  }
  roomuid_ = from.roomuid_;
  // @@protoc_insertion_point(copy_constructor:proto.inRoomChatBroadcast)
}

void inRoomChatBroadcast::SharedCtor() {
  _cached_size_ = 0;
  chat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roomuid_ = 0;
}

inRoomChatBroadcast::~inRoomChatBroadcast() {
  // @@protoc_insertion_point(destructor:proto.inRoomChatBroadcast)
  SharedDtor();
}

void inRoomChatBroadcast::SharedDtor() {
  chat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void inRoomChatBroadcast::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* inRoomChatBroadcast::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const inRoomChatBroadcast& inRoomChatBroadcast::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsinRoomChatBroadcast();
  return *internal_default_instance();
}

inRoomChatBroadcast* inRoomChatBroadcast::New(::google::protobuf::Arena* arena) const {
  inRoomChatBroadcast* n = new inRoomChatBroadcast;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void inRoomChatBroadcast::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.inRoomChatBroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!chat_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*chat_.UnsafeRawStringPointer())->clear();
  }
  roomuid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool inRoomChatBroadcast::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.inRoomChatBroadcast)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 roomUID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_roomuid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string chat = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chat()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->chat().data(), static_cast<int>(this->chat().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.inRoomChatBroadcast.chat");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.inRoomChatBroadcast)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.inRoomChatBroadcast)
  return false;
#undef DO_
}

void inRoomChatBroadcast::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.inRoomChatBroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 roomUID = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roomuid(), output);
  }

  // required string chat = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat().data(), static_cast<int>(this->chat().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.inRoomChatBroadcast.chat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->chat(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.inRoomChatBroadcast)
}

::google::protobuf::uint8* inRoomChatBroadcast::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.inRoomChatBroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 roomUID = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->roomuid(), target);
  }

  // required string chat = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat().data(), static_cast<int>(this->chat().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.inRoomChatBroadcast.chat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->chat(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.inRoomChatBroadcast)
  return target;
}

size_t inRoomChatBroadcast::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:proto.inRoomChatBroadcast)
  size_t total_size = 0;

  if (has_chat()) {
    // required string chat = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chat());
  }

  if (has_roomuid()) {
    // required int32 roomUID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roomuid());
  }

  return total_size;
}
size_t inRoomChatBroadcast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.inRoomChatBroadcast)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string chat = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chat());

    // required int32 roomUID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roomuid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void inRoomChatBroadcast::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.inRoomChatBroadcast)
  GOOGLE_DCHECK_NE(&from, this);
  const inRoomChatBroadcast* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const inRoomChatBroadcast>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.inRoomChatBroadcast)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.inRoomChatBroadcast)
    MergeFrom(*source);
  }
}

void inRoomChatBroadcast::MergeFrom(const inRoomChatBroadcast& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.inRoomChatBroadcast)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_chat();
      chat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_);
    }
    if (cached_has_bits & 0x00000002u) {
      roomuid_ = from.roomuid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void inRoomChatBroadcast::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.inRoomChatBroadcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void inRoomChatBroadcast::CopyFrom(const inRoomChatBroadcast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.inRoomChatBroadcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool inRoomChatBroadcast::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void inRoomChatBroadcast::Swap(inRoomChatBroadcast* other) {
  if (other == this) return;
  InternalSwap(other);
}
void inRoomChatBroadcast::InternalSwap(inRoomChatBroadcast* other) {
  using std::swap;
  chat_.Swap(&other->chat_);
  swap(roomuid_, other->roomuid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata inRoomChatBroadcast::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void inRoomLeaveRoomRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int inRoomLeaveRoomRequest::kRoomUIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

inRoomLeaveRoomRequest::inRoomLeaveRoomRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsinRoomLeaveRoomRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.inRoomLeaveRoomRequest)
}
inRoomLeaveRoomRequest::inRoomLeaveRoomRequest(const inRoomLeaveRoomRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomuid_ = from.roomuid_;
  // @@protoc_insertion_point(copy_constructor:proto.inRoomLeaveRoomRequest)
}

void inRoomLeaveRoomRequest::SharedCtor() {
  _cached_size_ = 0;
  roomuid_ = 0;
}

inRoomLeaveRoomRequest::~inRoomLeaveRoomRequest() {
  // @@protoc_insertion_point(destructor:proto.inRoomLeaveRoomRequest)
  SharedDtor();
}

void inRoomLeaveRoomRequest::SharedDtor() {
}

void inRoomLeaveRoomRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* inRoomLeaveRoomRequest::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const inRoomLeaveRoomRequest& inRoomLeaveRoomRequest::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsinRoomLeaveRoomRequest();
  return *internal_default_instance();
}

inRoomLeaveRoomRequest* inRoomLeaveRoomRequest::New(::google::protobuf::Arena* arena) const {
  inRoomLeaveRoomRequest* n = new inRoomLeaveRoomRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void inRoomLeaveRoomRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.inRoomLeaveRoomRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roomuid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool inRoomLeaveRoomRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.inRoomLeaveRoomRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 roomUID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_roomuid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.inRoomLeaveRoomRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.inRoomLeaveRoomRequest)
  return false;
#undef DO_
}

void inRoomLeaveRoomRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.inRoomLeaveRoomRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 roomUID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roomuid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.inRoomLeaveRoomRequest)
}

::google::protobuf::uint8* inRoomLeaveRoomRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.inRoomLeaveRoomRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 roomUID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->roomuid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.inRoomLeaveRoomRequest)
  return target;
}

size_t inRoomLeaveRoomRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.inRoomLeaveRoomRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 roomUID = 1;
  if (has_roomuid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roomuid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void inRoomLeaveRoomRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.inRoomLeaveRoomRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const inRoomLeaveRoomRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const inRoomLeaveRoomRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.inRoomLeaveRoomRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.inRoomLeaveRoomRequest)
    MergeFrom(*source);
  }
}

void inRoomLeaveRoomRequest::MergeFrom(const inRoomLeaveRoomRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.inRoomLeaveRoomRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_roomuid()) {
    set_roomuid(from.roomuid());
  }
}

void inRoomLeaveRoomRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.inRoomLeaveRoomRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void inRoomLeaveRoomRequest::CopyFrom(const inRoomLeaveRoomRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.inRoomLeaveRoomRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool inRoomLeaveRoomRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void inRoomLeaveRoomRequest::Swap(inRoomLeaveRoomRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void inRoomLeaveRoomRequest::InternalSwap(inRoomLeaveRoomRequest* other) {
  using std::swap;
  swap(roomuid_, other->roomuid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata inRoomLeaveRoomRequest::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void inRoomLeaveRoomResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int inRoomLeaveRoomResponse::kSuccessFieldNumber;
const int inRoomLeaveRoomResponse::kRoomUIDFieldNumber;
const int inRoomLeaveRoomResponse::kLobbyUIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

inRoomLeaveRoomResponse::inRoomLeaveRoomResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsinRoomLeaveRoomResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.inRoomLeaveRoomResponse)
}
inRoomLeaveRoomResponse::inRoomLeaveRoomResponse(const inRoomLeaveRoomResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&success_, &from.success_,
    static_cast<size_t>(reinterpret_cast<char*>(&lobbyuid_) -
    reinterpret_cast<char*>(&success_)) + sizeof(lobbyuid_));
  // @@protoc_insertion_point(copy_constructor:proto.inRoomLeaveRoomResponse)
}

void inRoomLeaveRoomResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lobbyuid_) -
      reinterpret_cast<char*>(&success_)) + sizeof(lobbyuid_));
}

inRoomLeaveRoomResponse::~inRoomLeaveRoomResponse() {
  // @@protoc_insertion_point(destructor:proto.inRoomLeaveRoomResponse)
  SharedDtor();
}

void inRoomLeaveRoomResponse::SharedDtor() {
}

void inRoomLeaveRoomResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* inRoomLeaveRoomResponse::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const inRoomLeaveRoomResponse& inRoomLeaveRoomResponse::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsinRoomLeaveRoomResponse();
  return *internal_default_instance();
}

inRoomLeaveRoomResponse* inRoomLeaveRoomResponse::New(::google::protobuf::Arena* arena) const {
  inRoomLeaveRoomResponse* n = new inRoomLeaveRoomResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void inRoomLeaveRoomResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.inRoomLeaveRoomResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&success_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&lobbyuid_) -
        reinterpret_cast<char*>(&success_)) + sizeof(lobbyuid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool inRoomLeaveRoomResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.inRoomLeaveRoomResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 roomUID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_roomuid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 lobbyUID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_lobbyuid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lobbyuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.inRoomLeaveRoomResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.inRoomLeaveRoomResponse)
  return false;
#undef DO_
}

void inRoomLeaveRoomResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.inRoomLeaveRoomResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // required int32 roomUID = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->roomuid(), output);
  }

  // required int32 lobbyUID = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->lobbyuid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.inRoomLeaveRoomResponse)
}

::google::protobuf::uint8* inRoomLeaveRoomResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.inRoomLeaveRoomResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // required int32 roomUID = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->roomuid(), target);
  }

  // required int32 lobbyUID = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->lobbyuid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.inRoomLeaveRoomResponse)
  return target;
}

size_t inRoomLeaveRoomResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:proto.inRoomLeaveRoomResponse)
  size_t total_size = 0;

  if (has_success()) {
    // required bool success = 1;
    total_size += 1 + 1;
  }

  if (has_roomuid()) {
    // required int32 roomUID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roomuid());
  }

  if (has_lobbyuid()) {
    // required int32 lobbyUID = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lobbyuid());
  }

  return total_size;
}
size_t inRoomLeaveRoomResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.inRoomLeaveRoomResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required bool success = 1;
    total_size += 1 + 1;

    // required int32 roomUID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roomuid());

    // required int32 lobbyUID = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lobbyuid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void inRoomLeaveRoomResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.inRoomLeaveRoomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const inRoomLeaveRoomResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const inRoomLeaveRoomResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.inRoomLeaveRoomResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.inRoomLeaveRoomResponse)
    MergeFrom(*source);
  }
}

void inRoomLeaveRoomResponse::MergeFrom(const inRoomLeaveRoomResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.inRoomLeaveRoomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      success_ = from.success_;
    }
    if (cached_has_bits & 0x00000002u) {
      roomuid_ = from.roomuid_;
    }
    if (cached_has_bits & 0x00000004u) {
      lobbyuid_ = from.lobbyuid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void inRoomLeaveRoomResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.inRoomLeaveRoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void inRoomLeaveRoomResponse::CopyFrom(const inRoomLeaveRoomResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.inRoomLeaveRoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool inRoomLeaveRoomResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void inRoomLeaveRoomResponse::Swap(inRoomLeaveRoomResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void inRoomLeaveRoomResponse::InternalSwap(inRoomLeaveRoomResponse* other) {
  using std::swap;
  swap(success_, other->success_);
  swap(roomuid_, other->roomuid_);
  swap(lobbyuid_, other->lobbyuid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata inRoomLeaveRoomResponse::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void inRoomReadyRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int inRoomReadyRequest::kReadyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

inRoomReadyRequest::inRoomReadyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsinRoomReadyRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.inRoomReadyRequest)
}
inRoomReadyRequest::inRoomReadyRequest(const inRoomReadyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ready_ = from.ready_;
  // @@protoc_insertion_point(copy_constructor:proto.inRoomReadyRequest)
}

void inRoomReadyRequest::SharedCtor() {
  _cached_size_ = 0;
  ready_ = false;
}

inRoomReadyRequest::~inRoomReadyRequest() {
  // @@protoc_insertion_point(destructor:proto.inRoomReadyRequest)
  SharedDtor();
}

void inRoomReadyRequest::SharedDtor() {
}

void inRoomReadyRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* inRoomReadyRequest::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const inRoomReadyRequest& inRoomReadyRequest::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsinRoomReadyRequest();
  return *internal_default_instance();
}

inRoomReadyRequest* inRoomReadyRequest::New(::google::protobuf::Arena* arena) const {
  inRoomReadyRequest* n = new inRoomReadyRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void inRoomReadyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.inRoomReadyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ready_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool inRoomReadyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.inRoomReadyRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool ready = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ready();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ready_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.inRoomReadyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.inRoomReadyRequest)
  return false;
#undef DO_
}

void inRoomReadyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.inRoomReadyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool ready = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->ready(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.inRoomReadyRequest)
}

::google::protobuf::uint8* inRoomReadyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.inRoomReadyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool ready = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->ready(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.inRoomReadyRequest)
  return target;
}

size_t inRoomReadyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.inRoomReadyRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool ready = 1;
  if (has_ready()) {
    total_size += 1 + 1;
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void inRoomReadyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.inRoomReadyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const inRoomReadyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const inRoomReadyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.inRoomReadyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.inRoomReadyRequest)
    MergeFrom(*source);
  }
}

void inRoomReadyRequest::MergeFrom(const inRoomReadyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.inRoomReadyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ready()) {
    set_ready(from.ready());
  }
}

void inRoomReadyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.inRoomReadyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void inRoomReadyRequest::CopyFrom(const inRoomReadyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.inRoomReadyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool inRoomReadyRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void inRoomReadyRequest::Swap(inRoomReadyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void inRoomReadyRequest::InternalSwap(inRoomReadyRequest* other) {
  using std::swap;
  swap(ready_, other->ready_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata inRoomReadyRequest::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void inRoomReadyResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int inRoomReadyResponse::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

inRoomReadyResponse::inRoomReadyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsinRoomReadyResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.inRoomReadyResponse)
}
inRoomReadyResponse::inRoomReadyResponse(const inRoomReadyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:proto.inRoomReadyResponse)
}

void inRoomReadyResponse::SharedCtor() {
  _cached_size_ = 0;
  success_ = false;
}

inRoomReadyResponse::~inRoomReadyResponse() {
  // @@protoc_insertion_point(destructor:proto.inRoomReadyResponse)
  SharedDtor();
}

void inRoomReadyResponse::SharedDtor() {
}

void inRoomReadyResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* inRoomReadyResponse::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const inRoomReadyResponse& inRoomReadyResponse::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsinRoomReadyResponse();
  return *internal_default_instance();
}

inRoomReadyResponse* inRoomReadyResponse::New(::google::protobuf::Arena* arena) const {
  inRoomReadyResponse* n = new inRoomReadyResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void inRoomReadyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.inRoomReadyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool inRoomReadyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.inRoomReadyResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.inRoomReadyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.inRoomReadyResponse)
  return false;
#undef DO_
}

void inRoomReadyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.inRoomReadyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.inRoomReadyResponse)
}

::google::protobuf::uint8* inRoomReadyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.inRoomReadyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.inRoomReadyResponse)
  return target;
}

size_t inRoomReadyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.inRoomReadyResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool success = 1;
  if (has_success()) {
    total_size += 1 + 1;
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void inRoomReadyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.inRoomReadyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const inRoomReadyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const inRoomReadyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.inRoomReadyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.inRoomReadyResponse)
    MergeFrom(*source);
  }
}

void inRoomReadyResponse::MergeFrom(const inRoomReadyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.inRoomReadyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_success()) {
    set_success(from.success());
  }
}

void inRoomReadyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.inRoomReadyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void inRoomReadyResponse::CopyFrom(const inRoomReadyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.inRoomReadyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool inRoomReadyResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void inRoomReadyResponse::Swap(inRoomReadyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void inRoomReadyResponse::InternalSwap(inRoomReadyResponse* other) {
  using std::swap;
  swap(success_, other->success_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata inRoomReadyResponse::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void inRoomStartRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int inRoomStartRequest::kStartFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

inRoomStartRequest::inRoomStartRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsinRoomStartRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.inRoomStartRequest)
}
inRoomStartRequest::inRoomStartRequest(const inRoomStartRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  start_ = from.start_;
  // @@protoc_insertion_point(copy_constructor:proto.inRoomStartRequest)
}

void inRoomStartRequest::SharedCtor() {
  _cached_size_ = 0;
  start_ = false;
}

inRoomStartRequest::~inRoomStartRequest() {
  // @@protoc_insertion_point(destructor:proto.inRoomStartRequest)
  SharedDtor();
}

void inRoomStartRequest::SharedDtor() {
}

void inRoomStartRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* inRoomStartRequest::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const inRoomStartRequest& inRoomStartRequest::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsinRoomStartRequest();
  return *internal_default_instance();
}

inRoomStartRequest* inRoomStartRequest::New(::google::protobuf::Arena* arena) const {
  inRoomStartRequest* n = new inRoomStartRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void inRoomStartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.inRoomStartRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  start_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool inRoomStartRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.inRoomStartRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool start = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_start();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.inRoomStartRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.inRoomStartRequest)
  return false;
#undef DO_
}

void inRoomStartRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.inRoomStartRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool start = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->start(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.inRoomStartRequest)
}

::google::protobuf::uint8* inRoomStartRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.inRoomStartRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool start = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->start(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.inRoomStartRequest)
  return target;
}

size_t inRoomStartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.inRoomStartRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool start = 1;
  if (has_start()) {
    total_size += 1 + 1;
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void inRoomStartRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.inRoomStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const inRoomStartRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const inRoomStartRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.inRoomStartRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.inRoomStartRequest)
    MergeFrom(*source);
  }
}

void inRoomStartRequest::MergeFrom(const inRoomStartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.inRoomStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_start()) {
    set_start(from.start());
  }
}

void inRoomStartRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.inRoomStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void inRoomStartRequest::CopyFrom(const inRoomStartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.inRoomStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool inRoomStartRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void inRoomStartRequest::Swap(inRoomStartRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void inRoomStartRequest::InternalSwap(inRoomStartRequest* other) {
  using std::swap;
  swap(start_, other->start_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata inRoomStartRequest::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void inRoomStartResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int inRoomStartResponse::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

inRoomStartResponse::inRoomStartResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsinRoomStartResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.inRoomStartResponse)
}
inRoomStartResponse::inRoomStartResponse(const inRoomStartResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:proto.inRoomStartResponse)
}

void inRoomStartResponse::SharedCtor() {
  _cached_size_ = 0;
  success_ = false;
}

inRoomStartResponse::~inRoomStartResponse() {
  // @@protoc_insertion_point(destructor:proto.inRoomStartResponse)
  SharedDtor();
}

void inRoomStartResponse::SharedDtor() {
}

void inRoomStartResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* inRoomStartResponse::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const inRoomStartResponse& inRoomStartResponse::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsinRoomStartResponse();
  return *internal_default_instance();
}

inRoomStartResponse* inRoomStartResponse::New(::google::protobuf::Arena* arena) const {
  inRoomStartResponse* n = new inRoomStartResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void inRoomStartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.inRoomStartResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool inRoomStartResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.inRoomStartResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.inRoomStartResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.inRoomStartResponse)
  return false;
#undef DO_
}

void inRoomStartResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.inRoomStartResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.inRoomStartResponse)
}

::google::protobuf::uint8* inRoomStartResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.inRoomStartResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.inRoomStartResponse)
  return target;
}

size_t inRoomStartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.inRoomStartResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool success = 1;
  if (has_success()) {
    total_size += 1 + 1;
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void inRoomStartResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.inRoomStartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const inRoomStartResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const inRoomStartResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.inRoomStartResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.inRoomStartResponse)
    MergeFrom(*source);
  }
}

void inRoomStartResponse::MergeFrom(const inRoomStartResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.inRoomStartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_success()) {
    set_success(from.success());
  }
}

void inRoomStartResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.inRoomStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void inRoomStartResponse::CopyFrom(const inRoomStartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.inRoomStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool inRoomStartResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void inRoomStartResponse::Swap(inRoomStartResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void inRoomStartResponse::InternalSwap(inRoomStartResponse* other) {
  using std::swap;
  swap(success_, other->success_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata inRoomStartResponse::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void inRoomStartBroadcast::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int inRoomStartBroadcast::kInGameUIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

inRoomStartBroadcast::inRoomStartBroadcast()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsinRoomStartBroadcast();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.inRoomStartBroadcast)
}
inRoomStartBroadcast::inRoomStartBroadcast(const inRoomStartBroadcast& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ingameuid_ = from.ingameuid_;
  // @@protoc_insertion_point(copy_constructor:proto.inRoomStartBroadcast)
}

void inRoomStartBroadcast::SharedCtor() {
  _cached_size_ = 0;
  ingameuid_ = 0;
}

inRoomStartBroadcast::~inRoomStartBroadcast() {
  // @@protoc_insertion_point(destructor:proto.inRoomStartBroadcast)
  SharedDtor();
}

void inRoomStartBroadcast::SharedDtor() {
}

void inRoomStartBroadcast::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* inRoomStartBroadcast::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const inRoomStartBroadcast& inRoomStartBroadcast::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsinRoomStartBroadcast();
  return *internal_default_instance();
}

inRoomStartBroadcast* inRoomStartBroadcast::New(::google::protobuf::Arena* arena) const {
  inRoomStartBroadcast* n = new inRoomStartBroadcast;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void inRoomStartBroadcast::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.inRoomStartBroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ingameuid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool inRoomStartBroadcast::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.inRoomStartBroadcast)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 inGameUID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ingameuid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ingameuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.inRoomStartBroadcast)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.inRoomStartBroadcast)
  return false;
#undef DO_
}

void inRoomStartBroadcast::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.inRoomStartBroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 inGameUID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ingameuid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.inRoomStartBroadcast)
}

::google::protobuf::uint8* inRoomStartBroadcast::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.inRoomStartBroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 inGameUID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ingameuid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.inRoomStartBroadcast)
  return target;
}

size_t inRoomStartBroadcast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.inRoomStartBroadcast)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 inGameUID = 1;
  if (has_ingameuid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ingameuid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void inRoomStartBroadcast::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.inRoomStartBroadcast)
  GOOGLE_DCHECK_NE(&from, this);
  const inRoomStartBroadcast* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const inRoomStartBroadcast>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.inRoomStartBroadcast)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.inRoomStartBroadcast)
    MergeFrom(*source);
  }
}

void inRoomStartBroadcast::MergeFrom(const inRoomStartBroadcast& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.inRoomStartBroadcast)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ingameuid()) {
    set_ingameuid(from.ingameuid());
  }
}

void inRoomStartBroadcast::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.inRoomStartBroadcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void inRoomStartBroadcast::CopyFrom(const inRoomStartBroadcast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.inRoomStartBroadcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool inRoomStartBroadcast::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void inRoomStartBroadcast::Swap(inRoomStartBroadcast* other) {
  if (other == this) return;
  InternalSwap(other);
}
void inRoomStartBroadcast::InternalSwap(inRoomStartBroadcast* other) {
  using std::swap;
  swap(ingameuid_, other->ingameuid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata inRoomStartBroadcast::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void inGameSyncPlayerPosToServer::InitAsDefaultInstance() {
  ::proto::_inGameSyncPlayerPosToServer_default_instance_._instance.get_mutable()->useringameinfo_ = const_cast< ::proto::msgUserInGameInfo*>(
      ::proto::msgUserInGameInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int inGameSyncPlayerPosToServer::kInGameUIDFieldNumber;
const int inGameSyncPlayerPosToServer::kUserInGameInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

inGameSyncPlayerPosToServer::inGameSyncPlayerPosToServer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsinGameSyncPlayerPosToServer();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.inGameSyncPlayerPosToServer)
}
inGameSyncPlayerPosToServer::inGameSyncPlayerPosToServer(const inGameSyncPlayerPosToServer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_useringameinfo()) {
    useringameinfo_ = new ::proto::msgUserInGameInfo(*from.useringameinfo_);
  } else {
    useringameinfo_ = NULL;
  }
  ingameuid_ = from.ingameuid_;
  // @@protoc_insertion_point(copy_constructor:proto.inGameSyncPlayerPosToServer)
}

void inGameSyncPlayerPosToServer::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&useringameinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ingameuid_) -
      reinterpret_cast<char*>(&useringameinfo_)) + sizeof(ingameuid_));
}

inGameSyncPlayerPosToServer::~inGameSyncPlayerPosToServer() {
  // @@protoc_insertion_point(destructor:proto.inGameSyncPlayerPosToServer)
  SharedDtor();
}

void inGameSyncPlayerPosToServer::SharedDtor() {
  if (this != internal_default_instance()) delete useringameinfo_;
}

void inGameSyncPlayerPosToServer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* inGameSyncPlayerPosToServer::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const inGameSyncPlayerPosToServer& inGameSyncPlayerPosToServer::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsinGameSyncPlayerPosToServer();
  return *internal_default_instance();
}

inGameSyncPlayerPosToServer* inGameSyncPlayerPosToServer::New(::google::protobuf::Arena* arena) const {
  inGameSyncPlayerPosToServer* n = new inGameSyncPlayerPosToServer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void inGameSyncPlayerPosToServer::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.inGameSyncPlayerPosToServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(useringameinfo_ != NULL);
    useringameinfo_->Clear();
  }
  ingameuid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool inGameSyncPlayerPosToServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.inGameSyncPlayerPosToServer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 inGameUID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ingameuid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ingameuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .proto.msgUserInGameInfo userInGameInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_useringameinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.inGameSyncPlayerPosToServer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.inGameSyncPlayerPosToServer)
  return false;
#undef DO_
}

void inGameSyncPlayerPosToServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.inGameSyncPlayerPosToServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 inGameUID = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ingameuid(), output);
  }

  // required .proto.msgUserInGameInfo userInGameInfo = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->useringameinfo_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.inGameSyncPlayerPosToServer)
}

::google::protobuf::uint8* inGameSyncPlayerPosToServer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.inGameSyncPlayerPosToServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 inGameUID = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ingameuid(), target);
  }

  // required .proto.msgUserInGameInfo userInGameInfo = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->useringameinfo_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.inGameSyncPlayerPosToServer)
  return target;
}

size_t inGameSyncPlayerPosToServer::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:proto.inGameSyncPlayerPosToServer)
  size_t total_size = 0;

  if (has_useringameinfo()) {
    // required .proto.msgUserInGameInfo userInGameInfo = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->useringameinfo_);
  }

  if (has_ingameuid()) {
    // required int32 inGameUID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ingameuid());
  }

  return total_size;
}
size_t inGameSyncPlayerPosToServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.inGameSyncPlayerPosToServer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .proto.msgUserInGameInfo userInGameInfo = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->useringameinfo_);

    // required int32 inGameUID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ingameuid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void inGameSyncPlayerPosToServer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.inGameSyncPlayerPosToServer)
  GOOGLE_DCHECK_NE(&from, this);
  const inGameSyncPlayerPosToServer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const inGameSyncPlayerPosToServer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.inGameSyncPlayerPosToServer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.inGameSyncPlayerPosToServer)
    MergeFrom(*source);
  }
}

void inGameSyncPlayerPosToServer::MergeFrom(const inGameSyncPlayerPosToServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.inGameSyncPlayerPosToServer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_useringameinfo()->::proto::msgUserInGameInfo::MergeFrom(from.useringameinfo());
    }
    if (cached_has_bits & 0x00000002u) {
      ingameuid_ = from.ingameuid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void inGameSyncPlayerPosToServer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.inGameSyncPlayerPosToServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void inGameSyncPlayerPosToServer::CopyFrom(const inGameSyncPlayerPosToServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.inGameSyncPlayerPosToServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool inGameSyncPlayerPosToServer::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_useringameinfo()) {
    if (!this->useringameinfo_->IsInitialized()) return false;
  }
  return true;
}

void inGameSyncPlayerPosToServer::Swap(inGameSyncPlayerPosToServer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void inGameSyncPlayerPosToServer::InternalSwap(inGameSyncPlayerPosToServer* other) {
  using std::swap;
  swap(useringameinfo_, other->useringameinfo_);
  swap(ingameuid_, other->ingameuid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata inGameSyncPlayerPosToServer::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void inGameSyncPlayersPosFromServer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int inGameSyncPlayersPosFromServer::kInGameUIDFieldNumber;
const int inGameSyncPlayersPosFromServer::kUsersInGameInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

inGameSyncPlayersPosFromServer::inGameSyncPlayersPosFromServer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsinGameSyncPlayersPosFromServer();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.inGameSyncPlayersPosFromServer)
}
inGameSyncPlayersPosFromServer::inGameSyncPlayersPosFromServer(const inGameSyncPlayersPosFromServer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      usersingameinfo_(from.usersingameinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ingameuid_ = from.ingameuid_;
  // @@protoc_insertion_point(copy_constructor:proto.inGameSyncPlayersPosFromServer)
}

void inGameSyncPlayersPosFromServer::SharedCtor() {
  _cached_size_ = 0;
  ingameuid_ = 0;
}

inGameSyncPlayersPosFromServer::~inGameSyncPlayersPosFromServer() {
  // @@protoc_insertion_point(destructor:proto.inGameSyncPlayersPosFromServer)
  SharedDtor();
}

void inGameSyncPlayersPosFromServer::SharedDtor() {
}

void inGameSyncPlayersPosFromServer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* inGameSyncPlayersPosFromServer::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const inGameSyncPlayersPosFromServer& inGameSyncPlayersPosFromServer::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsinGameSyncPlayersPosFromServer();
  return *internal_default_instance();
}

inGameSyncPlayersPosFromServer* inGameSyncPlayersPosFromServer::New(::google::protobuf::Arena* arena) const {
  inGameSyncPlayersPosFromServer* n = new inGameSyncPlayersPosFromServer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void inGameSyncPlayersPosFromServer::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.inGameSyncPlayersPosFromServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  usersingameinfo_.Clear();
  ingameuid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool inGameSyncPlayersPosFromServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.inGameSyncPlayersPosFromServer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 inGameUID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ingameuid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ingameuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.msgUserInGameInfo usersInGameInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_usersingameinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.inGameSyncPlayersPosFromServer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.inGameSyncPlayersPosFromServer)
  return false;
#undef DO_
}

void inGameSyncPlayersPosFromServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.inGameSyncPlayersPosFromServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 inGameUID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ingameuid(), output);
  }

  // repeated .proto.msgUserInGameInfo usersInGameInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->usersingameinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->usersingameinfo(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.inGameSyncPlayersPosFromServer)
}

::google::protobuf::uint8* inGameSyncPlayersPosFromServer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.inGameSyncPlayersPosFromServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 inGameUID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ingameuid(), target);
  }

  // repeated .proto.msgUserInGameInfo usersInGameInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->usersingameinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->usersingameinfo(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.inGameSyncPlayersPosFromServer)
  return target;
}

size_t inGameSyncPlayersPosFromServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.inGameSyncPlayersPosFromServer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 inGameUID = 1;
  if (has_ingameuid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ingameuid());
  }
  // repeated .proto.msgUserInGameInfo usersInGameInfo = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->usersingameinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->usersingameinfo(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void inGameSyncPlayersPosFromServer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.inGameSyncPlayersPosFromServer)
  GOOGLE_DCHECK_NE(&from, this);
  const inGameSyncPlayersPosFromServer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const inGameSyncPlayersPosFromServer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.inGameSyncPlayersPosFromServer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.inGameSyncPlayersPosFromServer)
    MergeFrom(*source);
  }
}

void inGameSyncPlayersPosFromServer::MergeFrom(const inGameSyncPlayersPosFromServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.inGameSyncPlayersPosFromServer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  usersingameinfo_.MergeFrom(from.usersingameinfo_);
  if (from.has_ingameuid()) {
    set_ingameuid(from.ingameuid());
  }
}

void inGameSyncPlayersPosFromServer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.inGameSyncPlayersPosFromServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void inGameSyncPlayersPosFromServer::CopyFrom(const inGameSyncPlayersPosFromServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.inGameSyncPlayersPosFromServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool inGameSyncPlayersPosFromServer::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->usersingameinfo())) return false;
  return true;
}

void inGameSyncPlayersPosFromServer::Swap(inGameSyncPlayersPosFromServer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void inGameSyncPlayersPosFromServer::InternalSwap(inGameSyncPlayersPosFromServer* other) {
  using std::swap;
  usersingameinfo_.InternalSwap(&other->usersingameinfo_);
  swap(ingameuid_, other->ingameuid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata inGameSyncPlayersPosFromServer::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void inGameSyncPlayerStateToServer::InitAsDefaultInstance() {
  ::proto::_inGameSyncPlayerStateToServer_default_instance_._instance.get_mutable()->userstateinfo_ = const_cast< ::proto::msgUserInGameStateInfo*>(
      ::proto::msgUserInGameStateInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int inGameSyncPlayerStateToServer::kInGameUIDFieldNumber;
const int inGameSyncPlayerStateToServer::kUserStateInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

inGameSyncPlayerStateToServer::inGameSyncPlayerStateToServer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsinGameSyncPlayerStateToServer();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.inGameSyncPlayerStateToServer)
}
inGameSyncPlayerStateToServer::inGameSyncPlayerStateToServer(const inGameSyncPlayerStateToServer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_userstateinfo()) {
    userstateinfo_ = new ::proto::msgUserInGameStateInfo(*from.userstateinfo_);
  } else {
    userstateinfo_ = NULL;
  }
  ingameuid_ = from.ingameuid_;
  // @@protoc_insertion_point(copy_constructor:proto.inGameSyncPlayerStateToServer)
}

void inGameSyncPlayerStateToServer::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&userstateinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ingameuid_) -
      reinterpret_cast<char*>(&userstateinfo_)) + sizeof(ingameuid_));
}

inGameSyncPlayerStateToServer::~inGameSyncPlayerStateToServer() {
  // @@protoc_insertion_point(destructor:proto.inGameSyncPlayerStateToServer)
  SharedDtor();
}

void inGameSyncPlayerStateToServer::SharedDtor() {
  if (this != internal_default_instance()) delete userstateinfo_;
}

void inGameSyncPlayerStateToServer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* inGameSyncPlayerStateToServer::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const inGameSyncPlayerStateToServer& inGameSyncPlayerStateToServer::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsinGameSyncPlayerStateToServer();
  return *internal_default_instance();
}

inGameSyncPlayerStateToServer* inGameSyncPlayerStateToServer::New(::google::protobuf::Arena* arena) const {
  inGameSyncPlayerStateToServer* n = new inGameSyncPlayerStateToServer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void inGameSyncPlayerStateToServer::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.inGameSyncPlayerStateToServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(userstateinfo_ != NULL);
    userstateinfo_->Clear();
  }
  ingameuid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool inGameSyncPlayerStateToServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.inGameSyncPlayerStateToServer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 inGameUID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ingameuid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ingameuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .proto.msgUserInGameStateInfo userStateInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_userstateinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.inGameSyncPlayerStateToServer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.inGameSyncPlayerStateToServer)
  return false;
#undef DO_
}

void inGameSyncPlayerStateToServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.inGameSyncPlayerStateToServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 inGameUID = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ingameuid(), output);
  }

  // required .proto.msgUserInGameStateInfo userStateInfo = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->userstateinfo_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.inGameSyncPlayerStateToServer)
}

::google::protobuf::uint8* inGameSyncPlayerStateToServer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.inGameSyncPlayerStateToServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 inGameUID = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ingameuid(), target);
  }

  // required .proto.msgUserInGameStateInfo userStateInfo = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->userstateinfo_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.inGameSyncPlayerStateToServer)
  return target;
}

size_t inGameSyncPlayerStateToServer::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:proto.inGameSyncPlayerStateToServer)
  size_t total_size = 0;

  if (has_userstateinfo()) {
    // required .proto.msgUserInGameStateInfo userStateInfo = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->userstateinfo_);
  }

  if (has_ingameuid()) {
    // required int32 inGameUID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ingameuid());
  }

  return total_size;
}
size_t inGameSyncPlayerStateToServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.inGameSyncPlayerStateToServer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .proto.msgUserInGameStateInfo userStateInfo = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->userstateinfo_);

    // required int32 inGameUID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ingameuid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void inGameSyncPlayerStateToServer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.inGameSyncPlayerStateToServer)
  GOOGLE_DCHECK_NE(&from, this);
  const inGameSyncPlayerStateToServer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const inGameSyncPlayerStateToServer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.inGameSyncPlayerStateToServer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.inGameSyncPlayerStateToServer)
    MergeFrom(*source);
  }
}

void inGameSyncPlayerStateToServer::MergeFrom(const inGameSyncPlayerStateToServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.inGameSyncPlayerStateToServer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_userstateinfo()->::proto::msgUserInGameStateInfo::MergeFrom(from.userstateinfo());
    }
    if (cached_has_bits & 0x00000002u) {
      ingameuid_ = from.ingameuid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void inGameSyncPlayerStateToServer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.inGameSyncPlayerStateToServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void inGameSyncPlayerStateToServer::CopyFrom(const inGameSyncPlayerStateToServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.inGameSyncPlayerStateToServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool inGameSyncPlayerStateToServer::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_userstateinfo()) {
    if (!this->userstateinfo_->IsInitialized()) return false;
  }
  return true;
}

void inGameSyncPlayerStateToServer::Swap(inGameSyncPlayerStateToServer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void inGameSyncPlayerStateToServer::InternalSwap(inGameSyncPlayerStateToServer* other) {
  using std::swap;
  swap(userstateinfo_, other->userstateinfo_);
  swap(ingameuid_, other->ingameuid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata inGameSyncPlayerStateToServer::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void inGameSyncPlayersStateFromServer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int inGameSyncPlayersStateFromServer::kInGameUIDFieldNumber;
const int inGameSyncPlayersStateFromServer::kUserStateInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

inGameSyncPlayersStateFromServer::inGameSyncPlayersStateFromServer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsinGameSyncPlayersStateFromServer();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.inGameSyncPlayersStateFromServer)
}
inGameSyncPlayersStateFromServer::inGameSyncPlayersStateFromServer(const inGameSyncPlayersStateFromServer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      userstateinfolist_(from.userstateinfolist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ingameuid_ = from.ingameuid_;
  // @@protoc_insertion_point(copy_constructor:proto.inGameSyncPlayersStateFromServer)
}

void inGameSyncPlayersStateFromServer::SharedCtor() {
  _cached_size_ = 0;
  ingameuid_ = 0;
}

inGameSyncPlayersStateFromServer::~inGameSyncPlayersStateFromServer() {
  // @@protoc_insertion_point(destructor:proto.inGameSyncPlayersStateFromServer)
  SharedDtor();
}

void inGameSyncPlayersStateFromServer::SharedDtor() {
}

void inGameSyncPlayersStateFromServer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* inGameSyncPlayersStateFromServer::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const inGameSyncPlayersStateFromServer& inGameSyncPlayersStateFromServer::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsinGameSyncPlayersStateFromServer();
  return *internal_default_instance();
}

inGameSyncPlayersStateFromServer* inGameSyncPlayersStateFromServer::New(::google::protobuf::Arena* arena) const {
  inGameSyncPlayersStateFromServer* n = new inGameSyncPlayersStateFromServer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void inGameSyncPlayersStateFromServer::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.inGameSyncPlayersStateFromServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userstateinfolist_.Clear();
  ingameuid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool inGameSyncPlayersStateFromServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.inGameSyncPlayersStateFromServer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 inGameUID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ingameuid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ingameuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.msgUserInGameStateInfo userStateInfoList = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_userstateinfolist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.inGameSyncPlayersStateFromServer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.inGameSyncPlayersStateFromServer)
  return false;
#undef DO_
}

void inGameSyncPlayersStateFromServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.inGameSyncPlayersStateFromServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 inGameUID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ingameuid(), output);
  }

  // repeated .proto.msgUserInGameStateInfo userStateInfoList = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->userstateinfolist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->userstateinfolist(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.inGameSyncPlayersStateFromServer)
}

::google::protobuf::uint8* inGameSyncPlayersStateFromServer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.inGameSyncPlayersStateFromServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 inGameUID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ingameuid(), target);
  }

  // repeated .proto.msgUserInGameStateInfo userStateInfoList = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->userstateinfolist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->userstateinfolist(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.inGameSyncPlayersStateFromServer)
  return target;
}

size_t inGameSyncPlayersStateFromServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.inGameSyncPlayersStateFromServer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 inGameUID = 1;
  if (has_ingameuid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ingameuid());
  }
  // repeated .proto.msgUserInGameStateInfo userStateInfoList = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->userstateinfolist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->userstateinfolist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void inGameSyncPlayersStateFromServer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.inGameSyncPlayersStateFromServer)
  GOOGLE_DCHECK_NE(&from, this);
  const inGameSyncPlayersStateFromServer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const inGameSyncPlayersStateFromServer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.inGameSyncPlayersStateFromServer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.inGameSyncPlayersStateFromServer)
    MergeFrom(*source);
  }
}

void inGameSyncPlayersStateFromServer::MergeFrom(const inGameSyncPlayersStateFromServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.inGameSyncPlayersStateFromServer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  userstateinfolist_.MergeFrom(from.userstateinfolist_);
  if (from.has_ingameuid()) {
    set_ingameuid(from.ingameuid());
  }
}

void inGameSyncPlayersStateFromServer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.inGameSyncPlayersStateFromServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void inGameSyncPlayersStateFromServer::CopyFrom(const inGameSyncPlayersStateFromServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.inGameSyncPlayersStateFromServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool inGameSyncPlayersStateFromServer::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->userstateinfolist())) return false;
  return true;
}

void inGameSyncPlayersStateFromServer::Swap(inGameSyncPlayersStateFromServer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void inGameSyncPlayersStateFromServer::InternalSwap(inGameSyncPlayersStateFromServer* other) {
  using std::swap;
  userstateinfolist_.InternalSwap(&other->userstateinfolist_);
  swap(ingameuid_, other->ingameuid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata inGameSyncPlayersStateFromServer::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void inGameChatRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int inGameChatRequest::kInGameUIDFieldNumber;
const int inGameChatRequest::kChatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

inGameChatRequest::inGameChatRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsinGameChatRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.inGameChatRequest)
}
inGameChatRequest::inGameChatRequest(const inGameChatRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_chat()) {
    chat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_);
  }
  ingameuid_ = from.ingameuid_;
  // @@protoc_insertion_point(copy_constructor:proto.inGameChatRequest)
}

void inGameChatRequest::SharedCtor() {
  _cached_size_ = 0;
  chat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ingameuid_ = 0;
}

inGameChatRequest::~inGameChatRequest() {
  // @@protoc_insertion_point(destructor:proto.inGameChatRequest)
  SharedDtor();
}

void inGameChatRequest::SharedDtor() {
  chat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void inGameChatRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* inGameChatRequest::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const inGameChatRequest& inGameChatRequest::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsinGameChatRequest();
  return *internal_default_instance();
}

inGameChatRequest* inGameChatRequest::New(::google::protobuf::Arena* arena) const {
  inGameChatRequest* n = new inGameChatRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void inGameChatRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.inGameChatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!chat_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*chat_.UnsafeRawStringPointer())->clear();
  }
  ingameuid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool inGameChatRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.inGameChatRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 inGameUID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ingameuid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ingameuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string chat = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chat()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->chat().data(), static_cast<int>(this->chat().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.inGameChatRequest.chat");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.inGameChatRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.inGameChatRequest)
  return false;
#undef DO_
}

void inGameChatRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.inGameChatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 inGameUID = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ingameuid(), output);
  }

  // required string chat = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat().data(), static_cast<int>(this->chat().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.inGameChatRequest.chat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->chat(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.inGameChatRequest)
}

::google::protobuf::uint8* inGameChatRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.inGameChatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 inGameUID = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ingameuid(), target);
  }

  // required string chat = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat().data(), static_cast<int>(this->chat().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.inGameChatRequest.chat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->chat(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.inGameChatRequest)
  return target;
}

size_t inGameChatRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:proto.inGameChatRequest)
  size_t total_size = 0;

  if (has_chat()) {
    // required string chat = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chat());
  }

  if (has_ingameuid()) {
    // required int32 inGameUID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ingameuid());
  }

  return total_size;
}
size_t inGameChatRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.inGameChatRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string chat = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chat());

    // required int32 inGameUID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ingameuid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void inGameChatRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.inGameChatRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const inGameChatRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const inGameChatRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.inGameChatRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.inGameChatRequest)
    MergeFrom(*source);
  }
}

void inGameChatRequest::MergeFrom(const inGameChatRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.inGameChatRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_chat();
      chat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_);
    }
    if (cached_has_bits & 0x00000002u) {
      ingameuid_ = from.ingameuid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void inGameChatRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.inGameChatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void inGameChatRequest::CopyFrom(const inGameChatRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.inGameChatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool inGameChatRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void inGameChatRequest::Swap(inGameChatRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void inGameChatRequest::InternalSwap(inGameChatRequest* other) {
  using std::swap;
  chat_.Swap(&other->chat_);
  swap(ingameuid_, other->ingameuid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata inGameChatRequest::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void inGameChatResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int inGameChatResponse::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

inGameChatResponse::inGameChatResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsinGameChatResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.inGameChatResponse)
}
inGameChatResponse::inGameChatResponse(const inGameChatResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:proto.inGameChatResponse)
}

void inGameChatResponse::SharedCtor() {
  _cached_size_ = 0;
  success_ = false;
}

inGameChatResponse::~inGameChatResponse() {
  // @@protoc_insertion_point(destructor:proto.inGameChatResponse)
  SharedDtor();
}

void inGameChatResponse::SharedDtor() {
}

void inGameChatResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* inGameChatResponse::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const inGameChatResponse& inGameChatResponse::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsinGameChatResponse();
  return *internal_default_instance();
}

inGameChatResponse* inGameChatResponse::New(::google::protobuf::Arena* arena) const {
  inGameChatResponse* n = new inGameChatResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void inGameChatResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.inGameChatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool inGameChatResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.inGameChatResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.inGameChatResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.inGameChatResponse)
  return false;
#undef DO_
}

void inGameChatResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.inGameChatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.inGameChatResponse)
}

::google::protobuf::uint8* inGameChatResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.inGameChatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.inGameChatResponse)
  return target;
}

size_t inGameChatResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.inGameChatResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool success = 1;
  if (has_success()) {
    total_size += 1 + 1;
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void inGameChatResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.inGameChatResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const inGameChatResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const inGameChatResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.inGameChatResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.inGameChatResponse)
    MergeFrom(*source);
  }
}

void inGameChatResponse::MergeFrom(const inGameChatResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.inGameChatResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_success()) {
    set_success(from.success());
  }
}

void inGameChatResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.inGameChatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void inGameChatResponse::CopyFrom(const inGameChatResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.inGameChatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool inGameChatResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void inGameChatResponse::Swap(inGameChatResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void inGameChatResponse::InternalSwap(inGameChatResponse* other) {
  using std::swap;
  swap(success_, other->success_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata inGameChatResponse::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void inGameChatBroadcast::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int inGameChatBroadcast::kChatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

inGameChatBroadcast::inGameChatBroadcast()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protoPack_2eproto::InitDefaultsinGameChatBroadcast();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.inGameChatBroadcast)
}
inGameChatBroadcast::inGameChatBroadcast(const inGameChatBroadcast& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_chat()) {
    chat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.inGameChatBroadcast)
}

void inGameChatBroadcast::SharedCtor() {
  _cached_size_ = 0;
  chat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

inGameChatBroadcast::~inGameChatBroadcast() {
  // @@protoc_insertion_point(destructor:proto.inGameChatBroadcast)
  SharedDtor();
}

void inGameChatBroadcast::SharedDtor() {
  chat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void inGameChatBroadcast::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* inGameChatBroadcast::descriptor() {
  ::protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const inGameChatBroadcast& inGameChatBroadcast::default_instance() {
  ::protobuf_protoPack_2eproto::InitDefaultsinGameChatBroadcast();
  return *internal_default_instance();
}

inGameChatBroadcast* inGameChatBroadcast::New(::google::protobuf::Arena* arena) const {
  inGameChatBroadcast* n = new inGameChatBroadcast;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void inGameChatBroadcast::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.inGameChatBroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!chat_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*chat_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool inGameChatBroadcast::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.inGameChatBroadcast)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string chat = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chat()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->chat().data(), static_cast<int>(this->chat().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.inGameChatBroadcast.chat");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.inGameChatBroadcast)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.inGameChatBroadcast)
  return false;
#undef DO_
}

void inGameChatBroadcast::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.inGameChatBroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string chat = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat().data(), static_cast<int>(this->chat().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.inGameChatBroadcast.chat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->chat(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.inGameChatBroadcast)
}

::google::protobuf::uint8* inGameChatBroadcast::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.inGameChatBroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string chat = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat().data(), static_cast<int>(this->chat().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.inGameChatBroadcast.chat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->chat(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.inGameChatBroadcast)
  return target;
}

size_t inGameChatBroadcast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.inGameChatBroadcast)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string chat = 1;
  if (has_chat()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chat());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void inGameChatBroadcast::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.inGameChatBroadcast)
  GOOGLE_DCHECK_NE(&from, this);
  const inGameChatBroadcast* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const inGameChatBroadcast>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.inGameChatBroadcast)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.inGameChatBroadcast)
    MergeFrom(*source);
  }
}

void inGameChatBroadcast::MergeFrom(const inGameChatBroadcast& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.inGameChatBroadcast)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_chat()) {
    set_has_chat();
    chat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_);
  }
}

void inGameChatBroadcast::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.inGameChatBroadcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void inGameChatBroadcast::CopyFrom(const inGameChatBroadcast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.inGameChatBroadcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool inGameChatBroadcast::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void inGameChatBroadcast::Swap(inGameChatBroadcast* other) {
  if (other == this) return;
  InternalSwap(other);
}
void inGameChatBroadcast::InternalSwap(inGameChatBroadcast* other) {
  using std::swap;
  chat_.Swap(&other->chat_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata inGameChatBroadcast::GetMetadata() const {
  protobuf_protoPack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protoPack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto

// @@protoc_insertion_point(global_scope)
